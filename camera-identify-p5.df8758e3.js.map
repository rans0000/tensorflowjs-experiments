{"mappings":"ICKI,C,O,mD,A,O,mD,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,SACJ,IAAI,EAAwC,KAiF5C,G,C,AAAI,G,AAAA,E,U,C,AAAA,E,O,CAAA,C,EA1EW,AAAC,IACZ,EAAG,KAAK,CAAG,UACP,GAAM,CAAA,WAAE,CAAU,CAAA,YAAE,CAAW,CAAE,CAAG,OAEpC,AADe,EAAG,YAAY,CAAC,EAAY,EAZjC,IAaH,MAAM,CAAC,OACd,EAAG,UAAU,CAAC,SACd,EAAG,YAAY,CAAC,GAChB,EAAG,SAAS,CAAC,EAAG,GAAG,EACnB,OAAO,gBAAgB,CAAC,SAAU,KAqBlC,AArBsD,EAqBnD,YAAY,CAAC,OAAO,UAAU,CAAE,OAAO,WAAW,IAerD,AAHA,CAAA,EAAU,AA/BL,EA+BQ,aAAa,CARN,CAChB,MAAO,CACH,iBAAkB,CAAA,EAClB,MA1CF,IA2CE,OA1CD,GA2CH,EACA,MAAO,CAAA,CACX,EACwC,CAAE,QAAS,CAAA,CAAK,EAAG,UACvD,EAAQ,MAAM,EAAd,IAAA,EACJ,EAAA,EACQ,IAAI,EAjChB,EAEA,EAAG,IAAI,CAAG,UACD,IAEL,EAAQ,UAAU,GAClB,EAAG,IAAI,GACP,EAAG,SAAS,CAtBI,GACA,IAsBhB,EAAG,KAAK,CAAC,EAAS,EAAG,EAzBf,IACC,KAyBP,EAAG,GAAG,GACN,MAAM,EAAQ,EAAI,EAAQ,MAAM,EAEpC,EAwBA,eAAe,EAAQ,CAAM,CAAE,EAAmB,EAAE,EAChD,GAAI,CAAC,EAAO,OAMZ,IAAM,EAAc,AADF,AADC,EAAA,QAAA,CAAY,EAAQ,CAFzB,KAEiC,EAAE,EACpB,KAAK,CAAC,CAAC,EAAG,EAAE,CAAE,CAAC,GAAI,EAAE,EACpB,OAAO,CAAC,CA5DhC,IACC,IA2D+C,EAAE,EAElD,EAAc,MAAM,EAAM,MAAM,CAAC,GAOvC,IAAK,IAAM,KANX,EAAG,QAAQ,CAAC,EAAG,MAAM,EACrB,EAAG,MAAM,CAAC,KACV,EAAG,MAAM,GACT,EAAG,QAAQ,CAAC,IACZ,EAAG,IAAI,GACP,EAAG,SAAS,CAlEI,GACA,IAkEG,GACX,EAAK,KAAK,CAAG,KACjB,EAAG,IAAI,CAAC,EAAK,IAAI,CAAC,EAAE,CAAE,EAAK,IAAI,CAAC,EAAE,CAAE,EAAK,IAAI,CAAC,EAAE,CAAE,EAAK,IAAI,CAAC,EAAE,EAC9D,EAAG,IAAI,CAAC,EAAK,KAAK,CAAE,EAAK,IAAI,CAAC,EAAE,CAAE,EAAK,IAAI,CAAC,EAAE,GAElD,EAAG,GAAG,EAGV,CACJ","sources":["<anon>","src/scripts/camera-identify-p5.ts"],"sourcesContent":["import \"./camera-identify-p5.2aafa147.js\";\nimport \"./camera-identify-p5.1c76dd51.js\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiread69\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiread69\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $g73GA = parcelRequire(\"g73GA\");\n\nvar $klb57 = parcelRequire(\"klb57\");\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\nconst $260377f1b824048d$var$topOffset = 63;\nlet $260377f1b824048d$var$capture;\nlet $260377f1b824048d$var$model = null;\nconst $260377f1b824048d$var$WIDTH = 400;\nconst $260377f1b824048d$var$HEIGHT = 400;\nconst $260377f1b824048d$var$CANVAS_OFFSET_X = 50;\nconst $260377f1b824048d$var$CANVAS_OFFSET_Y = 50;\nlet $260377f1b824048d$var$isProcessing = false;\nconst $260377f1b824048d$var$sketch = (p5)=>{\n    p5.setup = async ()=>{\n        const { innerWidth: innerWidth, innerHeight: innerHeight } = window;\n        const canvas = p5.createCanvas(innerWidth, innerHeight - $260377f1b824048d$var$topOffset);\n        canvas.parent('app');\n        p5.background('white');\n        p5.pixelDensity(1);\n        p5.colorMode(p5.RGB);\n        window.addEventListener('resize', ()=>resizeDisplay(p5));\n        init(p5);\n    };\n    p5.draw = async ()=>{\n        if (!$260377f1b824048d$var$model) return;\n        $260377f1b824048d$var$capture.loadPixels();\n        p5.push();\n        p5.translate($260377f1b824048d$var$CANVAS_OFFSET_X, $260377f1b824048d$var$CANVAS_OFFSET_Y);\n        p5.image($260377f1b824048d$var$capture, 0, 0, $260377f1b824048d$var$WIDTH, $260377f1b824048d$var$HEIGHT);\n        p5.pop();\n        await predict(p5, $260377f1b824048d$var$capture.pixels);\n        $260377f1b824048d$var$isProcessing = false;\n    };\n    /**--------------------------------- */ // functions\n    function resizeDisplay(p5) {\n        p5.resizeCanvas(window.innerWidth, window.innerHeight);\n    }\n    function init(p5) {\n        const constraints = {\n            video: {\n                noiseSuppression: true,\n                width: $260377f1b824048d$var$WIDTH,\n                height: $260377f1b824048d$var$HEIGHT\n            },\n            audio: false\n        };\n        $260377f1b824048d$var$capture = p5.createCapture(constraints, {\n            flipped: true\n        }, async ()=>{\n            $260377f1b824048d$var$model = await $g73GA.load();\n        });\n        $260377f1b824048d$var$capture.hide();\n    }\n    async function predict(p5, pixels = []) {\n        if (!$260377f1b824048d$var$model) return;\n        $260377f1b824048d$var$isProcessing = true;\n        const total = $260377f1b824048d$var$WIDTH * $260377f1b824048d$var$HEIGHT;\n        const rgbaTensor = $klb57.tensor2d(pixels, [\n            total,\n            4\n        ]);\n        const rgbTensor = rgbaTensor.slice([\n            0,\n            0\n        ], [\n            -1,\n            3\n        ]);\n        const rgbTensor3d = rgbTensor.reshape([\n            $260377f1b824048d$var$WIDTH,\n            $260377f1b824048d$var$HEIGHT,\n            3\n        ]);\n        const predictions = await $260377f1b824048d$var$model.detect(rgbTensor3d);\n        p5.rectMode(p5.CORNER);\n        p5.stroke(255);\n        p5.noFill();\n        p5.textSize(20);\n        p5.push();\n        p5.translate($260377f1b824048d$var$CANVAS_OFFSET_X, $260377f1b824048d$var$CANVAS_OFFSET_Y);\n        for (const item of predictions){\n            if (item.score < 0.7) continue;\n            p5.rect(item.bbox[0], item.bbox[1], item.bbox[2], item.bbox[3]);\n            p5.text(item.class, item.bbox[0], item.bbox[1]);\n        }\n        p5.pop();\n        return;\n    }\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($260377f1b824048d$var$sketch);\n\n\n//# sourceMappingURL=camera-identify-p5.df8758e3.js.map\n","import * as cocoSSD from '@tensorflow-models/coco-ssd';\nimport * as tf from '@tensorflow/tfjs';\nimport P5, { MediaElement } from 'p5';\n\nconst topOffset = 63;\nlet capture: MediaElement;\nlet model: cocoSSD.ObjectDetection | null = null;\nconst WIDTH = 400;\nconst HEIGHT = 400;\nconst CANVAS_OFFSET_X = 50;\nconst CANVAS_OFFSET_Y = 50;\nlet isProcessing = false;\n\nconst sketch = (p5: P5) => {\n    p5.setup = async () => {\n        const { innerWidth, innerHeight } = window;\n        const canvas = p5.createCanvas(innerWidth, innerHeight - topOffset);\n        canvas.parent('app');\n        p5.background('white');\n        p5.pixelDensity(1);\n        p5.colorMode(p5.RGB);\n        window.addEventListener('resize', () => resizeDisplay(p5));\n\n        init(p5);\n    };\n\n    p5.draw = async () => {\n        if (!model) return;\n\n        capture.loadPixels();\n        p5.push();\n        p5.translate(CANVAS_OFFSET_X, CANVAS_OFFSET_Y);\n        p5.image(capture, 0, 0, WIDTH, HEIGHT);\n        p5.pop();\n        await predict(p5, capture.pixels);\n        isProcessing = false;\n    };\n\n    /**--------------------------------- */\n    // functions\n\n    function resizeDisplay(p5: P5) {\n        p5.resizeCanvas(window.innerWidth, window.innerHeight);\n    }\n\n    function init(p5: P5) {\n        const constraints = {\n            video: {\n                noiseSuppression: true,\n                width: WIDTH,\n                height: HEIGHT\n            },\n            audio: false\n        };\n        capture = p5.createCapture(constraints, { flipped: true }, async () => {\n            model = await cocoSSD.load();\n        }) as MediaElement;\n        capture.hide();\n    }\n\n    async function predict(p5: P5, pixels: number[] = []) {\n        if (!model) return;\n        isProcessing = true;\n        const total = WIDTH * HEIGHT;\n\n        const rgbaTensor = tf.tensor2d(pixels, [total, 4]);\n        const rgbTensor = rgbaTensor.slice([0, 0], [-1, 3]);\n        const rgbTensor3d = rgbTensor.reshape([WIDTH, HEIGHT, 3]) as tf.Tensor3D;\n\n        const predictions = await model.detect(rgbTensor3d);\n        p5.rectMode(p5.CORNER);\n        p5.stroke(255);\n        p5.noFill();\n        p5.textSize(20);\n        p5.push();\n        p5.translate(CANVAS_OFFSET_X, CANVAS_OFFSET_Y);\n        for (const item of predictions) {\n            if (item.score < 0.7) continue;\n            p5.rect(item.bbox[0], item.bbox[1], item.bbox[2], item.bbox[3]);\n            p5.text(item.class, item.bbox[0], item.bbox[1]);\n        }\n        p5.pop();\n\n        return;\n    }\n};\n\nnew P5(sketch);\n"],"names":["$260377f1b824048d$var$capture","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$g73GA","$klb57","$7Pz0b","$260377f1b824048d$var$model","a","__esModule","default","p5","setup","innerWidth","innerHeight","window","canvas","createCanvas","parent","background","pixelDensity","colorMode","RGB","addEventListener","resizeCanvas","createCapture","video","noiseSuppression","width","height","audio","flipped","load","hide","draw","loadPixels","push","translate","image","pop","predict","pixels","rgbTensor3d","rgbTensor","rgbaTensor","tensor2d","$260377f1b824048d$var$WIDTH","slice","reshape","predictions","detect","item","rectMode","CORNER","stroke","noFill","textSize","score","rect","bbox","text","class"],"version":3,"file":"camera-identify-p5.df8758e3.js.map"}