function e(e,t,r,a){Object.defineProperty(e,t,{get:r,set:a,enumerable:!0,configurable:!0})}function t(e,t){return Object.keys(t).forEach(function(r){"default"===r||"__esModule"===r||Object.prototype.hasOwnProperty.call(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[r]}})}),e}var r=globalThis,a={},n={},s=r.parcelRequiread69;null==s&&((s=function(e){if(e in a)return a[e].exports;if(e in n){var t=n[e];delete n[e];var r={id:e,exports:{}};return a[e]=r,t.call(r.exports,r,r.exports),r.exports}var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){n[e]=t},r.parcelRequiread69=s);var o=s.register;o("40l72",function(t,r){e(t.exports,"GraphModel",()=>s("bVQtG").GraphModel),e(t.exports,"loadGraphModel",()=>s("bVQtG").loadGraphModel),e(t.exports,"loadGraphModelSync",()=>s("bVQtG").loadGraphModelSync),e(t.exports,"deregisterOp",()=>s("dWfqP").deregisterOp),e(t.exports,"registerOp",()=>s("dWfqP").registerOp),e(t.exports,"version_converter",()=>s("1SddR").version),s("1DtTd"),s("bVQtG"),s("dWfqP"),s("1SddR")}),o("1DtTd",function(e,t){s("i64bB"),(0,s("ibsdL").env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})}),o("i64bB",function(e,r){s("99KqI");var a=s("5KHy0"),n=s("6th4t");(0,a.registerOptimizers)(),t(e.exports,n)}),o("99KqI",function(e,t){var r=s("38WwN");s("dcHSK"),s("1MXhU"),s("lhiTQ");var a=s("iG87S"),n=s("inFmq"),o=s("5TuCW"),i=s("bSp5U"),l=s("9jCh7");(0,r.getOrMakeEngine)();let u={buffer:a.buffer,cast:n.cast,clone:o.clone,print:i.print};(0,l.setOpHandler)(u)}),o("38WwN",function(t,r){e(t.exports,"ENGINE",()=>v),e(t.exports,"getOrMakeEngine",()=>b);var a=s("fJqML"),n=s("ibsdL"),o=s("grcJs"),i=s("hl418"),l=s("eky5o"),u=s("cgHNs"),p=s("8XpwP"),d=s("8zD9D"),c=s("9jCh7"),h=s("3w4Rg"),f=s("8cCb2"),m=s("jjNRA");function g(e){return null!=e.kernelName}class x{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new x}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t];if(await this.initializeBackend(r).success)return void await this.setBackend(r)}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(!(e in this.registryFactory))return null;else{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(u.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new(0,p.Profiler)(this.backendInstance),!0}setupRegisteredKernels(){(0,l.getKernelsForBackend)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){(0,l.getKernelsForBackend)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let r=t.factory();if(!r||r instanceof a.KernelBackend||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=r.then(r=>!(t<this.pendingBackendInitId)&&(this.registry[e]=r,this.pendingBackendInit=null,!0)).catch(r=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,u.warn(`Initialization of backend ${e} failed`),u.warn(r.stack||r.message),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return u.warn(`Initialization of backend ${e} failed`),u.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:a,asyncInit:n}=this.initializeBackend(r);if(n||a)return{name:r,asyncInit:n}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),a=r.backend,n=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),r.backend=e,e.move(t,n,r.shape,r.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r,a=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(r),()=>((r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,r){e();try{let e=r();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){let t=v.runKernel(i.Identity,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>v.runKernel(i.Cast,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,r){if(null==this.backendName&&this.backend,null==(0,l.getKernel)(e,this.backendName))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let a=this.backend.numDataIds(),n=0;r.forEach(e=>{n+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-n-s;if(o>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,r,a,n,s=[],o=this.isTapeOn(),i=this.state.numBytes,u=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let p=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){let{kernelName:t,inputs:n,attrs:i}=e;null==this.backendName&&this.backend;let u=(0,l.getKernel)(t,this.backendName);f.assert(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(a=u.kernelFunc({inputs:n,attrs:i,backend:this.backend}))?a:[a];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,r);let l=r.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(o){let e=this.getTensorsForGradient(t,n,l);s=this.saveTensorsForBackwardMode(e)}return l}}else{let{forwardFunc:t}=e,n=e=>{o&&(s=e.map(e=>this.keep(this.clone(e))))};r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(a=this.tidy(()=>t(this.backend,n)))?a:[a];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,e,r),r}}let{inputs:d,attrs:c}=e,h=g(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(n=this.profiler.profileKernel(p,d,()=>r()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(n),t=n.outputs):t=r()}),o&&this.addTapeNode(p,d,t,h,s,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-u,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:n.timeMs,extraInfo:n.extraInfo}),Array.isArray(a)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,r){let a=(0,l.getGradient)(e);if(null!=a){let e,n=a.inputsToSave||[],s=a.outputsToSave||[];a.saveAllInputs?(f.assert(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=n.map(e=>t[e]);let o=r.filter((e,t)=>s[t]);return e.concat(o)}return[]}makeTensor(e,t,r,a){if(null==e)throw Error("Values passed to engine.makeTensor() are null");r=r||"float32",a=a||this.backend;let n=e;"string"===r&&f.isString(e[0])&&(n=e.map(e=>m.encodeString(e)));let s=a.write(n,t,r),o=new(0,c.Tensor)(t,r,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===r){let e=this.state.tensorInfo.get(s),t=(0,f.bytesFromStringArray)(n);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,r,a){let n={dataId:e,shape:t,dtype:r=r||"float32"};return this.makeTensorFromTensorInfo(n,a)}makeTensorFromTensorInfo(e,t){let{dataId:r,shape:a,dtype:n}=e,s=new(0,c.Tensor)(a,n,r,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,r,a){r=r||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let n=new(0,c.Variable)(e,t,r,this.nextTensorId());if(null!=this.state.registeredVariables[n.name])throw Error(`Variable with name ${n.name} was already registered`);return this.state.registeredVariables[n.name]=n,this.incRef(n,this.backend),n}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*f.bytesPerElement(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof c.Variable||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*f.bytesPerElement(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;for(let a of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,this.state.activeProfile.kernels))a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,r,a,n,s){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:n},i=(0,l.getGradient)(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=r[t],a=f.makeZerosTypedArray(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e}),a(e.length>1?e:e[0],n,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=(0,h.getTensorsInContainer)(e),r=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||r.has(t.id)||t.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==a.id||this.track(e)})}gradients(e,t,r,a=!1){if(f.assert(t.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let n=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));f.assert(n instanceof c.Tensor,()=>"The result y returned by f() must be a tensor.");let s=(0,d.getFilteredNodesXToY)(this.state.activeTape,t,n);if(!a&&0===s.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[n.id]=null==r?function(e){let t=(0,f.makeOnesTypedArray)((0,f.sizeFromShape)(e),"float32");return v.makeTensor(t,e,"float32")}(n.shape):r,(0,d.backpropagateGradients)(e,s,e=>this.tidy(e),k);let a=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:n,grads:a}})}customGrad(e){return f.assert(f.isFunction(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let r;f.assert(t.every(e=>e instanceof c.Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a={};return t.forEach((e,t)=>{a[t]=e}),this.runKernelFunc({forwardFunc:(a,n)=>(r=e(...t,n),f.assert(r.value instanceof c.Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),f.assert(f.isFunction(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(e,a)=>{let n=r.gradFunc(e,a),s=Array.isArray(n)?n:[n];f.assert(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),f.assert(s.every(e=>e instanceof c.Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let o={};return s.forEach((e,t)=>{o[t]=()=>e}),o},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=(0,m.now)(),r=await this.backend.time(e);return r.wallMs=(0,m.now)()-t,r}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new x,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){let e=(0,o.getGlobalNamespace)();if(null==e._tfengine){let t=new(0,n.Environment)(e);e._tfengine=new y(t)}return(0,n.setEnvironmentGlobal)(e._tfengine.ENV),(0,c.setTensorTracker)(()=>e._tfengine),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;let v=b();function k(e,t){return v.runKernel(i.Add,{a:e,b:t})}}),o("fJqML",function(t,r){e(t.exports,"DataStorage",()=>a),e(t.exports,"KernelBackend",()=>n);class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class n{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,r){return s("write")}move(e,t,r,a,n){return s("move")}createTensorFromGPUData(e,t,r){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}}),o("ibsdL",function(t,r){e(t.exports,"Environment",()=>o),e(t.exports,"env",()=>l),e(t.exports,"ENV",()=>u),e(t.exports,"setEnvironmentGlobal",()=>p);var a=s("8cCb2");let n="tfjsflags";class o{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null==this.platform||u.getBool("IS_TEST")||u.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},null!=this.urlFlags[e]){let t=this.urlFlags[e];u.getBool("IS_TEST")||u.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if((0,a.isPromise)(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);n in e&&e[n].split(",").forEach(e=>{let[t,r]=e.split(":");this.urlFlags[t]=function(e,t){let r=t.toLowerCase();return"true"===r||"false"===r?"true"===r:`${+r}`===r?+r:t}(0,r)})}}function i(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>{var a,n,s;return a=t,n=r[0],s=r[1],a[decodeURIComponent(n)]=decodeURIComponent(s||""),r.join("=")}),t}function l(){return u}let u=null;function p(e){u=e}}),o("8cCb2",function(t,r){function a(e){let t=e.length,r=0;for(;t>0;)r=Math.random()*t|0,i(e,--t,r)}function n(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,a=0;for(;r>0;)a=Math.random()*r|0,i(e,--r,a),i(t,r,a)}function s(e,t,r){return Math.max(e,Math.min(t,r))}function o(e){return e%2==0?e:e+1}function i(e,t,r){let a=e[t];e[t]=e[r],e[r]=a}function l(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function u(e,t){let r=Math.random();return t*r+(1-r)*e}function p(e,t){let r=0;for(let a=0;a<e.length;a++){let n=Number(e[a])-Number(t[a]);r+=n*n}return r}function d(e,t){if(!e)throw Error("string"==typeof t?t:t())}function c(e,t,r=""){d(x(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function h(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e){if(0===e.length)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(null!==e[r]&&null!==t[r]&&e[r]!==t[r])return!1;return!0}function x(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function y(e){return e%1==0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;{if(e===-1/0)return -1;let t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return a(t),t}function N(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function C(e,t=e=>0,r,a){return new Promise((n,s)=>{let o=0,i=()=>{if(e())return void n();let l=t(++o);if(null!=r&&o>=r)return void s();null!=a?a(i,l):setTimeout(i,l)};i()})}function T(e,t){let r=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)r*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===r)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let n=e.slice();return n[a]=t/r,n}function S(e,t){let r=t.length;return d((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-r&&e<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),d(e.every(e=>y(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?r+e:e)}function I(e,t){let r=[],a=[],n=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||n?null:S(t,e).sort(),o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(r.push(e[t]),a.push(t)),s[o]<=t&&o++}1!==e[t]&&(r.push(e[t]),a.push(t))}return{newShape:r,keptDims:a}}function w(e,t){return E(e,t)}function E(e,t){let r=null;if(null==e||"float32"===e)r=new Float32Array(t);else if("int32"===e)r=new Int32Array(t);else if("bool"===e)r=new Uint8Array(t);else if("string"===e)r=Array(t);else throw Error(`Unknown data type ${e}`);return r}function A(e,t){for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function R(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function P(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function B(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function O(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let r=t;r<e;++r)if(e%r==0)return r;return e}function _(e){let t=e.length;if(t<2)return[];let r=Array(t-1);r[t-2]=e[t-1];for(let a=t-3;a>=0;--a)r[a]=r[a+1]*e[a+1];return r}function V(e,t,r=!1){if(0===e.length)return t[0];let a=e.reduce((e,t)=>e*t)*(r?2:1);if(0===a)return[];if(a!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return function e(t,r,a,n=!1){let s=[];if(1===r.length){let e=r[0]*(n?2:1);for(let r=0;r<e;r++)s[r]=a[t+r]}else{let o=r[0],i=r.slice(1),l=i.reduce((e,t)=>e*t)*(n?2:1);for(let r=0;r<o;r++)s[r]=e(t+r*l,i,a,n)}return s}(0,e,t,r)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function z(e,t){let r=W(e,t);for(let e=0;e<r.length;e++)r[e]=1;return r}function W(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function U(e,t){let r=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return V(e,new Float32Array(r));if("int32"===t)return V(e,new Int32Array(r));if("bool"===t)return V(e,new Uint8Array(r));throw Error(`Unknown data type ${t}`)}function j(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function q(e,t,r){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=r[t]*e[t];return a}function H(e,t,r){if(0===t)return[];if(1===t)return[e];let a=Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/r[t]),e-=a[t]*r[t];return a[a.length-1]=e,a}function K(e){return e&&e.then&&"function"==typeof e.then}e(t.exports,"shuffle",()=>a),e(t.exports,"swap",()=>i),e(t.exports,"shuffleCombo",()=>n),e(t.exports,"clamp",()=>s),e(t.exports,"nearestLargerEven",()=>o),e(t.exports,"sum",()=>l),e(t.exports,"randUniform",()=>u),e(t.exports,"distSquared",()=>p),e(t.exports,"assert",()=>d),e(t.exports,"assertShapesMatch",()=>c),e(t.exports,"arraysEqual",()=>x),e(t.exports,"assertNonNull",()=>h),e(t.exports,"sizeFromShape",()=>f),e(t.exports,"isScalarShape",()=>m),e(t.exports,"arraysEqualWithNull",()=>g),e(t.exports,"isInt",()=>y),e(t.exports,"tanh",()=>b),e(t.exports,"sizeToSquarishShape",()=>v),e(t.exports,"createShuffledIndices",()=>k),e(t.exports,"rightPad",()=>N),e(t.exports,"repeatedTry",()=>C),e(t.exports,"inferFromImplicitShape",()=>T),e(t.exports,"parseAxisParam",()=>S),e(t.exports,"squeezeShape",()=>I),e(t.exports,"getTypedArrayFromDType",()=>w),e(t.exports,"getArrayFromDType",()=>E),e(t.exports,"checkConversionForErrors",()=>A),e(t.exports,"isValidDtype",()=>R),e(t.exports,"hasEncodingLoss",()=>P),e(t.exports,"bytesPerElement",()=>$),e(t.exports,"bytesFromStringArray",()=>F),e(t.exports,"isString",()=>B),e(t.exports,"isBoolean",()=>D),e(t.exports,"isNumber",()=>M),e(t.exports,"inferDtype",()=>function e(t){if(Array.isArray(t))return e(t[0]);if(t instanceof Float32Array);else if(t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray)return"int32";else if(M(t));else if(B(t))return"string";else if(D(t))return"bool";return"float32"}),e(t.exports,"isFunction",()=>O),e(t.exports,"nearestDivisor",()=>L),e(t.exports,"computeStrides",()=>_),e(t.exports,"toNestedArray",()=>V),e(t.exports,"convertBackendValuesAndArrayBuffer",()=>G),e(t.exports,"makeOnesTypedArray",()=>z),e(t.exports,"makeZerosTypedArray",()=>W),e(t.exports,"makeZerosNestedTypedArray",()=>U),e(t.exports,"assertNonNegativeIntegerDimensions",()=>j),e(t.exports,"locToIndex",()=>q),e(t.exports,"indexToLoc",()=>H),e(t.exports,"isPromise",()=>K)}),o("grcJs",function(t,a){let n;e(t.exports,"getGlobalNamespace",()=>i),e(t.exports,"getGlobal",()=>l);var o=s("hPtJY");function i(){if(null==n){let e;if("undefined"!=typeof window)e=window;else if(void 0!==r)e=r;else if(void 0!==o)e=o;else if("undefined"!=typeof self)e=self;else throw Error("Could not find a global object");n=e}return n}function l(e,t){let r=function(){let e=i();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(r.has(e))return r.get(e);{let a=t();return r.set(e,a),r.get(e)}}}),o("hPtJY",function(e,t){var r,a,n,s=e.exports={};function o(){throw Error("setTimeout has not been defined")}function i(){throw Error("clearTimeout has not been defined")}try{r="function"==typeof setTimeout?setTimeout:o}catch(e){r=o}try{a="function"==typeof clearTimeout?clearTimeout:i}catch(e){a=i}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}var u=[],p=!1,d=-1;function c(){p&&n&&(p=!1,n.length?u=n.concat(u):d=-1,u.length&&h())}function h(){if(!p){var e=l(c);p=!0;for(var t=u.length;t;){for(n=u,u=[];++d<t;)n&&n[d].run();d=-1,t=u.length}n=null,p=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===i||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}s.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new f(e,t)),1!==u.length||p||l(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=m,s.addListener=m,s.once=m,s.off=m,s.removeListener=m,s.removeAllListeners=m,s.emit=m,s.prependListener=m,s.prependOnceListener=m,s.listeners=function(e){return[]},s.binding=function(e){throw Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw Error("process.chdir is not supported")},s.umask=function(){return 0}}),o("hl418",function(t,r){e(t.exports,"Abs",()=>a),e(t.exports,"Acos",()=>n),e(t.exports,"Acosh",()=>s),e(t.exports,"Add",()=>o),e(t.exports,"AddN",()=>i),e(t.exports,"All",()=>l),e(t.exports,"Any",()=>u),e(t.exports,"ArgMax",()=>p),e(t.exports,"ArgMin",()=>d),e(t.exports,"Asin",()=>c),e(t.exports,"Asinh",()=>h),e(t.exports,"Atan",()=>f),e(t.exports,"Atanh",()=>m),e(t.exports,"Atan2",()=>g),e(t.exports,"AvgPool",()=>x),e(t.exports,"AvgPoolGrad",()=>y),e(t.exports,"AvgPool3D",()=>b),e(t.exports,"AvgPool3DGrad",()=>v),e(t.exports,"BatchMatMul",()=>k),e(t.exports,"BatchToSpaceND",()=>N),e(t.exports,"Bincount",()=>C),e(t.exports,"BitwiseAnd",()=>T),e(t.exports,"BroadcastTo",()=>S),e(t.exports,"BroadcastArgs",()=>I),e(t.exports,"Cast",()=>w),e(t.exports,"Ceil",()=>E),e(t.exports,"ClipByValue",()=>A),e(t.exports,"Complex",()=>R),e(t.exports,"ComplexAbs",()=>P),e(t.exports,"Concat",()=>$),e(t.exports,"Conv2D",()=>F),e(t.exports,"Conv2DBackpropFilter",()=>B),e(t.exports,"Conv2DBackpropInput",()=>D),e(t.exports,"Conv3D",()=>M),e(t.exports,"Conv3DBackpropFilterV2",()=>O),e(t.exports,"Conv3DBackpropInputV2",()=>L),e(t.exports,"Cos",()=>_),e(t.exports,"Cosh",()=>V),e(t.exports,"Cumprod",()=>G),e(t.exports,"Cumsum",()=>z),e(t.exports,"CropAndResize",()=>W),e(t.exports,"DenseBincount",()=>U),e(t.exports,"DepthToSpace",()=>j),e(t.exports,"DepthwiseConv2dNative",()=>q),e(t.exports,"DepthwiseConv2dNativeBackpropFilter",()=>H),e(t.exports,"DepthwiseConv2dNativeBackpropInput",()=>K),e(t.exports,"Diag",()=>X),e(t.exports,"Dilation2D",()=>Y),e(t.exports,"Dilation2DBackpropInput",()=>Z),e(t.exports,"Dilation2DBackpropFilter",()=>Q),e(t.exports,"Draw",()=>J),e(t.exports,"RealDiv",()=>ee),e(t.exports,"Einsum",()=>et),e(t.exports,"Elu",()=>er),e(t.exports,"EluGrad",()=>ea),e(t.exports,"Erf",()=>en),e(t.exports,"Equal",()=>es),e(t.exports,"Exp",()=>eo),e(t.exports,"ExpandDims",()=>ei),e(t.exports,"Expm1",()=>el),e(t.exports,"FFT",()=>eu),e(t.exports,"Fill",()=>ep),e(t.exports,"FlipLeftRight",()=>ed),e(t.exports,"Floor",()=>ec),e(t.exports,"FloorDiv",()=>eh),e(t.exports,"FusedBatchNorm",()=>ef),e(t.exports,"GatherV2",()=>em),e(t.exports,"GatherNd",()=>eg),e(t.exports,"Greater",()=>ex),e(t.exports,"GreaterEqual",()=>ey),e(t.exports,"Identity",()=>eb),e(t.exports,"IFFT",()=>ev),e(t.exports,"Imag",()=>ek),e(t.exports,"IsFinite",()=>eN),e(t.exports,"IsInf",()=>eC),e(t.exports,"IsNan",()=>eT),e(t.exports,"LeakyRelu",()=>eS),e(t.exports,"Less",()=>eI),e(t.exports,"LessEqual",()=>ew),e(t.exports,"LinSpace",()=>eE),e(t.exports,"Log",()=>eA),e(t.exports,"Log1p",()=>eR),e(t.exports,"LogicalAnd",()=>eP),e(t.exports,"LogicalNot",()=>e$),e(t.exports,"LogicalOr",()=>eF),e(t.exports,"LogicalXor",()=>eB),e(t.exports,"LogSoftmax",()=>eD),e(t.exports,"LowerBound",()=>eM),e(t.exports,"LRN",()=>eO),e(t.exports,"LRNGrad",()=>eL),e(t.exports,"MatrixBandPart",()=>e_),e(t.exports,"Max",()=>eV),e(t.exports,"Maximum",()=>eG),e(t.exports,"MaxPool",()=>ez),e(t.exports,"MaxPoolGrad",()=>eW),e(t.exports,"MaxPool3D",()=>eU),e(t.exports,"MaxPool3DGrad",()=>ej),e(t.exports,"MaxPoolWithArgmax",()=>eq),e(t.exports,"Mean",()=>eH),e(t.exports,"Min",()=>eK),e(t.exports,"Minimum",()=>eX),e(t.exports,"MirrorPad",()=>eY),e(t.exports,"Mod",()=>eZ),e(t.exports,"Multinomial",()=>eQ),e(t.exports,"Multiply",()=>eJ),e(t.exports,"Neg",()=>e0),e(t.exports,"NotEqual",()=>e1),e(t.exports,"NonMaxSuppressionV3",()=>e2),e(t.exports,"NonMaxSuppressionV4",()=>e4),e(t.exports,"NonMaxSuppressionV5",()=>e3),e(t.exports,"OnesLike",()=>e8),e(t.exports,"OneHot",()=>e6),e(t.exports,"Pack",()=>e5),e(t.exports,"PadV2",()=>e7),e(t.exports,"Pool",()=>e9),e(t.exports,"Pow",()=>te),e(t.exports,"Prelu",()=>tt),e(t.exports,"Prod",()=>tr),e(t.exports,"RaggedGather",()=>ta),e(t.exports,"RaggedRange",()=>tn),e(t.exports,"RaggedTensorToTensor",()=>ts),e(t.exports,"Range",()=>to),e(t.exports,"Real",()=>ti),e(t.exports,"Reciprocal",()=>tl),e(t.exports,"Relu",()=>tu),e(t.exports,"Reshape",()=>tp),e(t.exports,"ResizeNearestNeighbor",()=>td),e(t.exports,"ResizeNearestNeighborGrad",()=>tc),e(t.exports,"ResizeBilinear",()=>th),e(t.exports,"ResizeBilinearGrad",()=>tf),e(t.exports,"Relu6",()=>tm),e(t.exports,"Reverse",()=>tg),e(t.exports,"Round",()=>tx),e(t.exports,"Rsqrt",()=>ty),e(t.exports,"ScatterNd",()=>tb),e(t.exports,"TensorScatterUpdate",()=>tv),e(t.exports,"SearchSorted",()=>tk),e(t.exports,"Select",()=>tN),e(t.exports,"Selu",()=>tC),e(t.exports,"Slice",()=>tT),e(t.exports,"Sin",()=>tS),e(t.exports,"Sinh",()=>tI),e(t.exports,"Sign",()=>tw),e(t.exports,"Sigmoid",()=>tE),e(t.exports,"Softplus",()=>tA),e(t.exports,"Sqrt",()=>tR),e(t.exports,"Sum",()=>tP),e(t.exports,"SpaceToBatchND",()=>t$),e(t.exports,"SplitV",()=>tF),e(t.exports,"Softmax",()=>tB),e(t.exports,"SparseFillEmptyRows",()=>tD),e(t.exports,"SparseReshape",()=>tM),e(t.exports,"SparseSegmentMean",()=>tO),e(t.exports,"SparseSegmentSum",()=>tL),e(t.exports,"SparseToDense",()=>t_),e(t.exports,"SquaredDifference",()=>tV),e(t.exports,"Square",()=>tG),e(t.exports,"StaticRegexReplace",()=>tz),e(t.exports,"StridedSlice",()=>tW),e(t.exports,"StringNGrams",()=>tU),e(t.exports,"StringSplit",()=>tj),e(t.exports,"StringToHashBucketFast",()=>tq),e(t.exports,"Sub",()=>tH),e(t.exports,"Tan",()=>tK),e(t.exports,"Tanh",()=>tX),e(t.exports,"Tile",()=>tY),e(t.exports,"TopK",()=>tZ),e(t.exports,"Transform",()=>tQ),e(t.exports,"Transpose",()=>tJ),e(t.exports,"Unique",()=>t0),e(t.exports,"Unpack",()=>t1),e(t.exports,"UnsortedSegmentSum",()=>t2),e(t.exports,"UpperBound",()=>t4),e(t.exports,"ZerosLike",()=>t3),e(t.exports,"Step",()=>t8),e(t.exports,"FromPixels",()=>t6),e(t.exports,"RotateWithOffset",()=>t5),e(t.exports,"_FusedMatMul",()=>t7),e(t.exports,"FusedConv2D",()=>t9),e(t.exports,"FusedDepthwiseConv2D",()=>re);let a="Abs",n="Acos",s="Acosh",o="Add",i="AddN",l="All",u="Any",p="ArgMax",d="ArgMin",c="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",x="AvgPool",y="AvgPoolGrad",b="AvgPool3D",v="AvgPool3DGrad",k="BatchMatMul",N="BatchToSpaceND",C="Bincount",T="BitwiseAnd",S="BroadcastTo",I="BroadcastArgs",w="Cast",E="Ceil",A="ClipByValue",R="Complex",P="ComplexAbs",$="Concat",F="Conv2D",B="Conv2DBackpropFilter",D="Conv2DBackpropInput",M="Conv3D",O="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",_="Cos",V="Cosh",G="Cumprod",z="Cumsum",W="CropAndResize",U="DenseBincount",j="DepthToSpace",q="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Y="Dilation2D",Z="Dilation2DBackpropInput",Q="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",et="Einsum",er="Elu",ea="EluGrad",en="Erf",es="Equal",eo="Exp",ei="ExpandDims",el="Expm1",eu="FFT",ep="Fill",ed="FlipLeftRight",ec="Floor",eh="FloorDiv",ef="FusedBatchNorm",em="GatherV2",eg="GatherNd",ex="Greater",ey="GreaterEqual",eb="Identity",ev="IFFT",ek="Imag",eN="IsFinite",eC="IsInf",eT="IsNan",eS="LeakyRelu",eI="Less",ew="LessEqual",eE="LinSpace",eA="Log",eR="Log1p",eP="LogicalAnd",e$="LogicalNot",eF="LogicalOr",eB="LogicalXor",eD="LogSoftmax",eM="LowerBound",eO="LRN",eL="LRNGrad",e_="MatrixBandPart",eV="Max",eG="Maximum",ez="MaxPool",eW="MaxPoolGrad",eU="MaxPool3D",ej="MaxPool3DGrad",eq="MaxPoolWithArgmax",eH="Mean",eK="Min",eX="Minimum",eY="MirrorPad",eZ="Mod",eQ="Multinomial",eJ="Multiply",e0="Neg",e1="NotEqual",e2="NonMaxSuppressionV3",e4="NonMaxSuppressionV4",e3="NonMaxSuppressionV5",e8="OnesLike",e6="OneHot",e5="Pack",e7="PadV2",e9="Pool",te="Pow",tt="Prelu",tr="Prod",ta="RaggedGather",tn="RaggedRange",ts="RaggedTensorToTensor",to="Range",ti="Real",tl="Reciprocal",tu="Relu",tp="Reshape",td="ResizeNearestNeighbor",tc="ResizeNearestNeighborGrad",th="ResizeBilinear",tf="ResizeBilinearGrad",tm="Relu6",tg="Reverse",tx="Round",ty="Rsqrt",tb="ScatterNd",tv="TensorScatterUpdate",tk="SearchSorted",tN="Select",tC="Selu",tT="Slice",tS="Sin",tI="Sinh",tw="Sign",tE="Sigmoid",tA="Softplus",tR="Sqrt",tP="Sum",t$="SpaceToBatchND",tF="SplitV",tB="Softmax",tD="SparseFillEmptyRows",tM="SparseReshape",tO="SparseSegmentMean",tL="SparseSegmentSum",t_="SparseToDense",tV="SquaredDifference",tG="Square",tz="StaticRegexReplace",tW="StridedSlice",tU="StringNGrams",tj="StringSplit",tq="StringToHashBucketFast",tH="Sub",tK="Tan",tX="Tanh",tY="Tile",tZ="TopK",tQ="Transform",tJ="Transpose",t0="Unique",t1="Unpack",t2="UnsortedSegmentSum",t4="UpperBound",t3="ZerosLike",t8="Step",t6="FromPixels",t5="RotateWithOffset",t7="_FusedMatMul",t9="FusedConv2D",re="FusedDepthwiseConv2D"}),o("eky5o",function(t,r){e(t.exports,"getKernel",()=>u),e(t.exports,"getGradient",()=>p),e(t.exports,"getKernelsForBackend",()=>d),e(t.exports,"registerKernel",()=>c),e(t.exports,"registerGradient",()=>h),e(t.exports,"unregisterKernel",()=>f),e(t.exports,"unregisterGradient",()=>m),e(t.exports,"copyRegisteredKernels",()=>g);var a=s("ibsdL"),n=s("grcJs"),o=s("cgHNs");let i=(0,n.getGlobal)("kernelRegistry",()=>new Map),l=(0,n.getGlobal)("gradRegistry",()=>new Map);function u(e,t){let r=x(e,t);return i.get(r)}function p(e){return l.get(e)}function d(e){let t=i.entries(),r=[];for(;;){let{done:a,value:n}=t.next();if(a)break;let[s,o]=n,[i]=s.split("_");i===e&&r.push(o)}return r}function c(e){let{kernelName:t,backendName:r}=e,a=x(t,r);i.has(a)&&o.warn(`The kernel '${t}' for backend '${r}' is already registered`),i.set(a,e)}function h(e){let{kernelName:t}=e;l.has(t)&&(0,a.env)().getBool("DEBUG")&&o.warn(`Overriding the gradient for '${t}'`),l.set(t,e)}function f(e,t){let r=x(e,t);if(!i.has(r))throw Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(r)}function m(e){if(!l.has(e))throw Error(`The gradient '${e}' for backend is not registered`);l.delete(e)}function g(e,t){d(e).forEach(e=>{c(Object.assign({},e,{backendName:t}))})}function x(e,t){return`${t}_${e}`}}),o("cgHNs",function(t,r){e(t.exports,"warn",()=>n),e(t.exports,"log",()=>o);var a=s("ibsdL");function n(...e){(0,a.env)().getBool("IS_TEST")||(0,a.env)().getBool("PROD")||console.warn(...e)}function o(...e){(0,a.env)().getBool("IS_TEST")||(0,a.env)().getBool("PROD")||console.log(...e)}}),o("8XpwP",function(t,r){e(t.exports,"Profiler",()=>i);var a=s("ibsdL"),n=s("jjNRA"),o=s("8cCb2");class i{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new l)}profileKernel(e,t,r){let s,o,i=()=>{s=r()},l=n.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{for(let e of(i(),s))e.dataSync();o=Promise.resolve({kernelMs:n.now()-l})}if((0,a.env)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){let r=s[t];r.data().then(t=>{!function(e,t,r){if("float32"===t)for(let t=0;t<e.length;t++){let a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${r}'`),!0}}(t,r.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:a,inputs:n,extraInfo:s}=e;r.forEach(e=>{Promise.all([e.data(),a,s]).then(r=>{this.logger.logKernelProfile(t,e,r[0],r[1],n,r[2])})})}}class l{logKernelProfile(e,t,r,a,n,s){let i="number"==typeof a?o.rightPad(`${a}ms`,9):a.error,l=o.rightPad(e,25),u=t.rank,p=t.size,d=o.rightPad(t.shape.toString(),14),c="";for(let e in n){let r=n[e];if(null!=r){let a=r.shape||t.shape,n=a.length;c+=`${e}: ${n}D ${n>0?a:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${d}	%c${p}	%c${c}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}}),o("jjNRA",function(r,a){e(r.exports,"createScalarValue",()=>u),e(r.exports,"encodeString",()=>h),e(r.exports,"toTypedArray",()=>p),e(r.exports,"flatten",()=>g),e(r.exports,"now",()=>d),e(r.exports,"fetch",()=>c),e(r.exports,"decodeString",()=>f),e(r.exports,"isTypedArray",()=>m);var n=s("ibsdL"),o=s("6LqZS"),i=s("8cCb2"),l=s("dI8yQ");function u(e,t){return"string"===t?h(e):p([e],t)}function p(e,t){var r;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=g(e)),(0,n.env)().getBool("DEBUG")&&i.checkConversionForErrors(e,t),(r=e)instanceof Float32Array&&"float32"===t||r instanceof Int32Array&&"int32"===t||r instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let r=0;r<t.length;++r)0!==Math.round(e[r])&&(t[r]=1);return t}throw Error(`Unknown data type ${t}`)}function d(){return(0,n.env)().platform.now()}function c(e,t){return(0,n.env)().platform.fetch(e,t)}function h(e,t="utf-8"){return t=t||"utf-8",(0,n.env)().platform.encode(e,t)}function f(e,t="utf-8"){return t=t||"utf-8",(0,n.env)().platform.decode(e,t)}function m(e){return null!=(0,n.env)().platform.isTypedArray?(0,n.env)().platform.isTypedArray(e):(0,o.isTypedArrayBrowser)(e)}function g(e,t=[],r=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||i.isPromise(e)||null==e||m(e)&&r)t.push(e);else if(Array.isArray(e)||m(e))for(let a=0;a<e.length;++a)g(e[a],t,r);else{let a=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let n=0;n<=a;n++)g(e[n],t,r)}return t}t(r.exports,i),t(r.exports,l)}),o("6LqZS",function(t,r){e(t.exports,"isTypedArrayBrowser",()=>a);function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}),o("dI8yQ",function(t,r){e(t.exports,"hexToLong",()=>o),e(t.exports,"fingerPrint64",()=>g);var a=s("iPWI7");let n=a.default||a;function o(e){return n.fromString(e,!0,16)}let i=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),u=o("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function d(e,t,r){let a=e.slice(t,t+r);return n.fromBytes(Array.from(a),!0,!0)}function c(e,t){return d(e,t,8)}function h(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function f(e,t,r=o("9ddfea08eb382d69")){let a=e.xor(t).mul(r);a=a.xor(a.shru(47));let n=t.xor(a).mul(r);return(n=n.xor(n.shru(47))).mul(r)}function m(e,t,r,a){return function(e,t,r,a,n,s){n=n.add(e),s=h(s.add(n).add(a),21);let o=n;return n=(n=n.add(t)).add(r),s=s.add(h(n,44)),[n.add(a),s.add(o)]}(c(e,t),c(e,t+8),c(e,t+16),c(e,t+24),r,a)}function g(e,t=e.length){let r=n.fromNumber(81,!0);if(t<=32)if(t<=16)return function(e,t=e.length){if(t>=8){let r=u.add(2*t),a=c(e,0).add(u),n=c(e,t-8);return f(h(n,37).mul(r).add(a),h(a,25).add(n).mul(r),r)}if(t>=4){let r=u.add(2*t);return f(d(e,0,4).shl(3).add(t),d(e,t-4,4),r)}if(t>0){let r=e[0],a=e[t>>1],n=e[t-1];return p(u.mul(r+(a<<8)).xor(i.mul(t+(n<<2)))).mul(u)}return u}(e,t);else return function(e,t=e.length){let r=u.add(2*t),a=c(e,0).mul(l),n=c(e,8),s=c(e,t-8).mul(r),o=c(e,t-16).mul(u);return f(h(a.add(n),43).add(h(s,30)).add(o),a.add(h(n.add(u),18)).add(s),r)}(e,t);if(t<=64)return function(e,t=e.length){let r=u.add(2*t),a=c(e,0).mul(u),n=c(e,8),s=c(e,t-8).mul(r),o=c(e,t-16).mul(u),i=h(a.add(n),43).add(h(s,30)).add(o),l=f(i,a.add(h(n.add(u),18)).add(s),r),p=c(e,16).mul(r),d=c(e,24),m=i.add(c(e,t-32)).mul(r),g=l.add(c(e,t-24)).mul(r);return f(h(p.add(d),43).add(h(m,30)).add(g),p.add(h(d.add(a),18)).add(m),r)}(e,t);let a=r,s=r.mul(l).add(113),o=p(s.mul(u).add(113)).mul(u),x=[n.UZERO,n.UZERO],y=[n.UZERO,n.UZERO];a=a.mul(u).add(c(e,0));let b=0,v=(t-1>>6)*64,k=v+(t-1&63)-63;do a=h(a.add(s).add(x[0]).add(c(e,b+8)),37).mul(l),s=h(s.add(x[1]).add(c(e,b+48)),42).mul(l),a=a.xor(y[1]),s=s.add(x[0]).add(c(e,b+40)),o=h(o.add(y[0]),33).mul(l),x=m(e,b,x[1].mul(l),a.add(y[0])),y=m(e,b+32,o.add(y[1]),s.add(c(e,b+16))),[o,a]=[a,o],b+=64;while(b!==v)let N=l.add(o.and(255).shl(1));return b=k,y[0]=y[0].add(t-1&63),x[0]=x[0].add(y[0]),y[0]=y[0].add(x[0]),a=h(a.add(s).add(x[0]).add(c(e,b+8)),37).mul(N),s=h(s.add(x[1]).add(c(e,b+48)),42).mul(N),a=a.xor(y[1].mul(9)),s=s.add(x[0].mul(9).add(c(e,b+40))),o=h(o.add(y[0]),33).mul(N),x=m(e,b,x[1].mul(N),a.add(y[0])),y=m(e,b+32,o.add(y[1]),s.add(c(e,b+16))),[o,a]=[a,o],f(f(x[0],y[0],N).add(p(s).mul(i)).add(o),f(x[1],y[1],N).add(a),N)}}),o("iPWI7",function(e,t){e.exports=a;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function a(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r}function n(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=n;var s={},o={};function i(e,t){var r,a,n;if(t)return(e>>>=0,(n=0<=e&&e<256)&&(a=o[e]))?a:(r=u(e,(0|e)<0?-1:0,!0),n&&(o[e]=r),r);return(e|=0,(n=-128<=e&&e<128)&&(a=s[e]))?a:(r=u(e,e<0?-1:0,!1),n&&(s[e]=r),r)}function l(e,t){if(isNaN(e))return t?y:x;if(t){if(e<0)return y;if(e>=f)return C}else{if(e<=-m)return T;if(e+1>=m)return N}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new a(e,t,r)}a.fromInt=i,a.fromNumber=l,a.fromBits=u;var p=Math.pow;function d(e,t,r){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"==typeof t?(r=t,t=!1):t=!!t,(r=r||10)<2||36<r)throw RangeError("radix");if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return d(e.substring(1),t,r).neg();for(var a,n=l(p(r,8)),s=x,o=0;o<e.length;o+=8){var i=Math.min(8,e.length-o),u=parseInt(e.substring(o,o+i),r);if(i<8){var c=l(p(r,i));s=s.mul(c).add(l(u))}else s=(s=s.mul(n)).add(l(u))}return s.unsigned=t,s}function c(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?d(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=d,a.fromValue=c;var h=0x100000000,f=0xffffffffffffffff,m=0x8000000000000000,g=i(0x1000000),x=i(0);a.ZERO=x;var y=i(0,!0);a.UZERO=y;var b=i(1);a.ONE=b;var v=i(1,!0);a.UONE=v;var k=i(-1);a.NEG_ONE=k;var N=u(-1,0x7fffffff,!1);a.MAX_VALUE=N;var C=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=C;var T=u(0,-0x80000000,!1);a.MIN_VALUE=T;var S=a.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(!this.eq(T))return"-"+this.neg().toString(e);else{var t=l(e),r=this.div(t),a=r.mul(t).sub(this);return r.toString(e)+a.toInt().toString(e)}for(var n=l(p(e,6),this.unsigned),s=this,o="";;){var i=s.div(n),u=(s.sub(i.mul(n)).toInt()>>>0).toString(e);if((s=i).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return(1&this.low)==1},S.isEven=function(){return(1&this.low)==0},S.equals=function(e){return n(e)||(e=c(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return 0>this.comp(e)},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return 0>=this.comp(e)},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(n(e)||(e=c(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(b)},S.neg=S.negate,S.add=function(e){n(e)||(e=c(e));var t,r,a=this.high>>>16,s=65535&this.high,o=this.low>>>16,i=65535&this.low,l=e.high>>>16,p=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,m=0;return t=0+((r=0+(i+h))>>>16),r&=65535,t+=o+d,m+=t>>>16,t&=65535,m+=s+p,f+=m>>>16,m&=65535,f+=a+l,u(t<<16|r,(f&=65535)<<16|m,this.unsigned)},S.subtract=function(e){return n(e)||(e=c(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return x;if(n(e)||(e=c(e)),r)return u(r.mul(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned);if(e.isZero())return x;if(this.eq(T))return e.isOdd()?T:x;if(e.eq(T))return this.isOdd()?T:x;if(this.isNegative())if(e.isNegative())return this.neg().mul(e.neg());else return this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t,a,s=this.high>>>16,o=65535&this.high,i=this.low>>>16,p=65535&this.low,d=e.high>>>16,h=65535&e.high,f=e.low>>>16,m=65535&e.low,y=0,b=0;return t=0+((a=0+p*m)>>>16),a&=65535,t+=i*m,b+=t>>>16,t&=65535,t+=p*f,b+=t>>>16,t&=65535,b+=o*m,y+=b>>>16,b&=65535,b+=i*f,y+=b>>>16,b&=65535,b+=p*h,y+=b>>>16,b&=65535,y+=s*m+o*f+i*h+p*d,u(t<<16|a,(y&=65535)<<16|b,this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(n(e)||(e=c(e)),e.isZero())throw Error("division by zero");if(r){var t,a,s;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?r.div_u:r.div_s)(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?y:x;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(T))if(e.eq(b)||e.eq(k))return T;else return e.eq(T)?b:(t=this.shr(1).div(e).shl(1)).eq(x)?e.isNegative()?b:k:(a=this.sub(e.mul(t)),s=t.add(a.div(e)));if(e.eq(T))return this.unsigned?y:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=x}for(a=this;a.gte(e);){for(var o=Math.ceil(Math.log(t=Math.max(1,Math.floor(a.toNumber()/e.toNumber())))/Math.LN2),i=o<=48?1:p(2,o-48),d=l(t),h=d.mul(e);h.isNegative()||h.gt(a);)t-=i,h=(d=l(t,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),a=a.sub(h)}return s},S.div=S.divide,S.modulo=function(e){return(n(e)||(e=c(e)),r)?u((this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return n(e)||(e=c(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return n(e)||(e=c(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return n(e)||(e=c(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(n(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?u(t,0,this.unsigned):u(t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,r){return r?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),o("8zD9D",function(t,r){e(t.exports,"getFilteredNodesXToY",()=>n),e(t.exports,"backpropagateGradients",()=>o);var a=s("8cCb2");function n(e,t,r){let a={},n={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let r=0;r<e.length;r++){let s=e[r],o=s.inputs;for(let e in o){let r=o[e],i=!1;for(let e=0;e<t.length;e++)if(a[r.id]){s.outputs.forEach(e=>a[e.id]=!0),i=!0,n[s.id]=!0;break}if(i)break}}let s={};s[r.id]=!0;let o={};for(let t=e.length-1;t>=0;t--){let r=e[t],a=r.inputs;for(let e=0;e<r.outputs.length;e++)if(s[r.outputs[e].id]){for(let e in a)s[a[e].id]=!0,o[r.id]=!0;break}}let i=[];for(let t=0;t<e.length;t++){let r=e[t];if(n[r.id]&&o[r.id]){let e={};for(let t in r.inputs){let n=r.inputs[t];a[n.id]&&(e[t]=n)}let t=Object.assign({},r);t.inputs=e,t.outputs=r.outputs,i.push(t)}}return i}function o(e,t,r,n){for(let s=t.length-1;s>=0;s--){let o=t[s],i=[];if(o.outputs.forEach(t=>{let r=e[t.id];null!=r?i.push(r):i.push(null)}),null==o.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);let l=o.gradient(i);for(let t in o.inputs){if(!(t in l))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);let s=r(()=>l[t]());if("float32"!==s.dtype)throw Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);let i=o.inputs[t];if(!a.arraysEqual(s.shape,i.shape))throw Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{let t=e[i.id];e[i.id]=n(t,s),t.dispose()}}}}}),o("9jCh7",function(t,r){e(t.exports,"TensorBuffer",()=>l),e(t.exports,"setTensorTracker",()=>d),e(t.exports,"setOpHandler",()=>c),e(t.exports,"setDeprecationWarningFn",()=>h),e(t.exports,"Tensor",()=>f),e(t.exports,"getGlobalTensorClass",()=>m),e(t.exports,"Variable",()=>g);var a=s("grcJs"),n=s("iODUZ"),o=s("8cCb2"),i=s("jjNRA");class l{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=o.sizeFromShape(e),null!=r){let e=r.length;o.assert(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||o.getArrayFromDType(t,this.size),this.strides=(0,o.computeStrides)(e)}set(e,...t){0===t.length&&(t=[0]),o.assert(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=this.strides[t]*e[t];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return u().makeTensor(this.values,this.shape,this.dtype)}}let u=null,p=null;function d(e){u=e}function c(e){p=e}function h(e){}class f{constructor(e,t,r,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.sizeFromShape(e),this.strides=(0,o.computeStrides)(e),this.dataId=r,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return(0,o.toNestedArray)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,o.toNestedArray)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=u().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>i.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),u().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=u().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>i.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await u().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),u().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){let t=this.dataSync();return(0,n.tensorToString)(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),u().makeVariable(this,e,t,r)}}function m(){return(0,a.getGlobal)("Tensor",()=>f)}Object.defineProperty(f,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),m();class g extends f{constructor(e,t,r,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!o.arraysEqual(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);u().disposeTensor(this),this.dataId=e.dataId,u().incRef(this,null)}dispose(){u().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:e=>e instanceof f&&null!=e.assign&&e.assign instanceof Function})}),o("iODUZ",function(t,r){e(t.exports,"tensorToString",()=>n);var a=s("8cCb2");function n(e,t,r,n){let s=(0,a.computeStrides)(t),u=function(e,t,r,n){let s=(0,a.sizeFromShape)(t),i=n[n.length-1],u=Array(i).fill(0),p=t.length,d="complex64"===r?l(e):e;if(p>1)for(let e=0;e<s/i;e++){let t=e*i;for(let e=0;e<i;e++)u[e]=Math.max(u[e],o(d[t+e],0,r).length)}return u}(e,t,r,s),p=t.length,d=function e(t,r,a,n,s,u=!0){let p="complex64"===a?2:1,d=r[0],c=r.length;if(0===c)return"complex64"===a?[o(l(t)[0],0,a)]:"bool"===a?[i(t[0])]:[t[0].toString()];if(1===c){if(d>20){let e=Array.from(t.slice(0,3*p)),r=Array.from(t.slice((d-3)*p,d*p));return"complex64"===a&&(e=l(e),r=l(r)),["["+e.map((e,t)=>o(e,s[t],a)).join(", ")+", ..., "+r.map((e,t)=>o(e,s[d-3+t],a)).join(", ")+"]"]}return["["+("complex64"===a?l(t):Array.from(t)).map((e,t)=>o(e,s[t],a)).join(", ")+"]"]}let h=r.slice(1),f=n.slice(1),m=n[0]*p,g=[];if(d>20){for(let r=0;r<3;r++){let n=r*m,o=n+m;g.push(...e(t.slice(n,o),h,a,f,s,!1))}g.push("...");for(let r=d-3;r<d;r++){let n=r*m,o=n+m;g.push(...e(t.slice(n,o),h,a,f,s,r===d-1))}}else for(let r=0;r<d;r++){let n=r*m,o=n+m;g.push(...e(t.slice(n,o),h,a,f,s,r===d-1))}let x=2===c?",":"";g[0]="["+(d>0?g[0]+x:"");for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+x;let y=",\n";for(let e=2;e<c;e++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(u?"":y),g}(e,t,r,s,u),c=["Tensor"];return n&&(c.push(`  dtype: ${r}`),c.push(`  rank: ${p}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(d.map(e=>"    "+e).join("\n")),c.join("\n")}function o(e,t,r){let n;return n=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.isString)(e)?`'${e}'`:"bool"===r?i(e):parseFloat(e.toFixed(7)).toString(),(0,a.rightPad)(n,t)}function i(e){return 0===e?"false":"true"}function l(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}}),o("3w4Rg",function(t,r){e(t.exports,"makeTypesMatch",()=>i),e(t.exports,"assertTypesMatch",()=>l),e(t.exports,"isTensorInList",()=>u),e(t.exports,"getTensorsInContainer",()=>p);var a=s("9jCh7"),n=s("2MDja"),o=s("8cCb2");function i(e,t){if(e.dtype===t.dtype)return[e,t];let r=(0,n.upcastType)(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function l(e,t){(0,o.assert)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function u(e,t){return t.some(t=>t.id===e.id)}function p(e){let t=[];return function e(t,r,n){var s;if(null!=t){if(t instanceof a.Tensor)return void r.push(t);if(Array.isArray(s=t)||"object"==typeof s)for(let a in t){let s=t[a];n.has(s)||(n.add(s),e(s,r,n))}}}(e,t,new Set),t}}),o("2MDja",function(t,r){var a,n,s,o,i,l,u,p,d,c;e(t.exports,"Rank",()=>a),e(t.exports,"upcastType",()=>f),e(t.exports,"sumOutType",()=>m),e(t.exports,"isWebGLData",()=>g),e(t.exports,"isWebGPUData",()=>x),(l=a||(a={})).R0="R0",l.R1="R1",l.R2="R2",l.R3="R3",l.R4="R4",l.R5="R5",l.R6="R6",(u=n||(n={})).float32="float32",u.int32="int32",u.bool="int32",u.complex64="complex64",(p=s||(s={})).float32="float32",p.int32="int32",p.bool="bool",p.complex64="complex64",(d=o||(o={})).float32="float32",d.int32="float32",d.bool="float32",d.complex64="complex64",(c=i||(i={})).float32="complex64",c.int32="complex64",c.bool="complex64",c.complex64="complex64";let h={float32:o,int32:n,bool:s,complex64:i};function f(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return h[e][t]}function m(e){return f(e,"int32")}function g(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function x(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}}),o("dcHSK",function(e,t){s("38WwN");var r=s("4GTZ3");let a=(0,s("ibsdL").env)();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>r.isBrowser()),a.registerFlag("IS_NODE",()=>!1),a.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>a.getBool("DEBUG")),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),a.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),a.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)}),o("4GTZ3",function(t,r){let a;function n(e){a=e}function s(e){if(void 0!==a)return a;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function o(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}e(t.exports,"mockIsMobile",()=>n),e(t.exports,"isMobile",()=>s),e(t.exports,"isBrowser",()=>o)}),o("1MXhU",function(e,t){s("dcHSK");var r=s("ibsdL"),a=s("caMdQ"),n=s("h6KCl"),o=s("1PMKz"),i=s("6LqZS");if((0,r.env)().get("IS_BROWSER")){(0,r.env)().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!(0,r.env)().getBool("USE_SETTIMEOUTCUSTOM"))return void setTimeout(e,t);this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return(0,i.isTypedArrayBrowser)(e)}});try{o.ModelStoreManagerRegistry.registerManager(n.BrowserLocalStorage.URL_SCHEME,new(0,n.BrowserLocalStorageManager))}catch(e){}try{o.ModelStoreManagerRegistry.registerManager(a.BrowserIndexedDB.URL_SCHEME,new(0,a.BrowserIndexedDBManager))}catch(e){}}}),o("caMdQ",function(t,r){e(t.exports,"BrowserIndexedDB",()=>h),e(t.exports,"BrowserIndexedDBManager",()=>m),s("dcHSK");var a=s("ibsdL"),n=s("4FRLN"),o=s("9RUNn"),i=s("hBb8J");let l="tensorflowjs",u="models_store",p="model_info_store";function d(){if(!(0,a.env)().getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function c(e){let t=e.result;t.createObjectStore(u,{keyPath:"modelPath"}),t.createObjectStore(p,{keyPath:"modelPath"})}class h{constructor(e){if(this.indexedDB=d(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,r)=>{let a=this.indexedDB.open(l,1);a.onupgradeneeded=()=>c(a),a.onsuccess=()=>{let s=a.result;if(null==t){let t=s.transaction(u,"readonly"),a=t.objectStore(u).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),r(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(s.close(),r(a.error)),t.oncomplete=()=>s.close()}else{let a,o;t.weightData=i.CompositeArrayBuffer.join(t.weightData);let l=(0,n.getModelArtifactsInfoForJSON)(t),d=s.transaction(p,"readwrite"),c=d.objectStore(p);try{a=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(e){return r(e)}a.onsuccess=()=>{let a,n=(o=s.transaction(u,"readwrite")).objectStore(u);try{a=n.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:l})}catch(e){return r(e)}a.onsuccess=()=>e({modelArtifactsInfo:l}),a.onerror=e=>{let t=(c=d.objectStore(p)).delete(this.modelPath);t.onsuccess=()=>(s.close(),r(a.error)),t.onerror=e=>(s.close(),r(a.error))}},a.onerror=e=>(s.close(),r(a.error)),d.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},a.onerror=e=>r(a.error)})}}h.URL_SCHEME="indexeddb://";let f=e=>{var t;return(0,a.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(h.URL_SCHEME)?(t=e.slice(h.URL_SCHEME.length),new h(t)):null};o.IORouterRegistry.registerSaveRouter(f),o.IORouterRegistry.registerLoadRouter(f);class m{constructor(){this.indexedDB=d()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(l,1);r.onupgradeneeded=()=>c(r),r.onsuccess=()=>{let a=r.result,n=a.transaction(p,"readonly"),s=n.objectStore(p).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),n.oncomplete=()=>a.close()},r.onerror=e=>t(r.error)})}async removeModel(e){var t;return e=(t=e).startsWith(h.URL_SCHEME)?t.slice(h.URL_SCHEME.length):t,new Promise((t,r)=>{let a=this.indexedDB.open(l,1);a.onupgradeneeded=()=>c(a),a.onsuccess=()=>{let n,s=a.result,o=s.transaction(p,"readwrite"),i=o.objectStore(p),l=i.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),r(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=i.delete(e),o=()=>{let a=(n=s.transaction(u,"readwrite")).objectStore(u).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>r(l.error)};a.onsuccess=o,a.onerror=e=>(o(),s.close(),r(l.error))}},l.onerror=e=>(s.close(),r(l.error)),o.oncomplete=()=>{null==n?s.close():n.oncomplete=()=>s.close()}},a.onerror=e=>r(a.error)})}}}),o("4FRLN",function(t,r){e(t.exports,"encodeWeights",()=>c),e(t.exports,"decodeWeights",()=>h),e(t.exports,"decodeWeightsStream",()=>x),e(t.exports,"arrayBufferToBase64String",()=>v),e(t.exports,"base64StringToArrayBuffer",()=>k),e(t.exports,"concatenateArrayBuffers",()=>N),e(t.exports,"basename",()=>C),e(t.exports,"getModelJSONForModelArtifacts",()=>T),e(t.exports,"getModelArtifactsForJSONSync",()=>S),e(t.exports,"getModelArtifactsForJSON",()=>I),e(t.exports,"getModelArtifactsInfoForJSON",()=>w),e(t.exports,"getWeightSpecs",()=>E);var a=s("20oDZ"),n=s("erbmM"),o=s("8cCb2"),i=s("2bXta"),l=s("hBb8J"),u=s("c2DT1"),p=s("ibsdL"),d=s("6ZWSX").Buffer;async function c(e,t){let r=[],a=[],n=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<n.length;++s){let o=n[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);let l={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){let e=new Promise(async e=>{let t=await i.bytes(),r=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)});a.push(e)}else a.push(i.data());null!=t&&(l.group=t),r.push(l)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(e=>{if(t+=e.byteLength,r.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let a=new Uint8Array(t),n=0;return r.forEach(e=>{a.set(new Uint8Array(e.buffer),n),n+=e.byteLength}),a.buffer}(await Promise.all(a)),specs:r}}function h(e,t){let r=new(0,l.CompositeArrayBuffer)(e),a={},n=0;for(let e of t){let t=function(e,t){let r,a=(0,o.sizeFromShape)(e.shape);if("quantization"in e){let t=e.quantization;r=i.DTYPE_VALUE_SIZE_MAP[t.dtype]}else if("string"===e.dtype){let e=0;for(let r=0;r<a;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else r=i.DTYPE_VALUE_SIZE_MAP[e.dtype];return a*r}(e,(e,t)=>r.slice(n+e,n+t));a[e.name]=m(e,r.slice(n,n+t)),n+=t}return a}async function f(e,t){let r,a=(0,o.sizeFromShape)(e.shape);if("quantization"in e){let t=e.quantization;r=i.DTYPE_VALUE_SIZE_MAP[t.dtype]}else if("string"===e.dtype){let e=0;for(let r=0;r<a;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else r=i.DTYPE_VALUE_SIZE_MAP[e.dtype];return a*r}function m(e,t){let r,s=e.name,l=e.dtype,u=e.shape,p=(0,o.sizeFromShape)(u),d=0;if("quantization"in e){let a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a&&"scale"in a))throw Error(`Weight ${e.name} with quantization ${a.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===a.dtype){if("float32"!==l)throw Error(`Weight ${e.name} is quantized with ${a.dtype} which only supports weights of type float32 not ${l}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${a.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let n=i.DTYPE_VALUE_SIZE_MAP[a.dtype],o="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===l)if("uint8"===a.dtype||"uint16"===a.dtype){r=new Float32Array(o.length);for(let e=0;e<o.length;e++){let t=o[e];r[e]=t*a.scale+a.min}}else if("float16"===a.dtype)r=(function(){let e=function(){let e=e=>{let t=e<<13,r=0;for(;(8388608&t)==0;)r-=8388608,t<<=1;return(t&=-8388609)|(r+=0x38800000)},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let e=1024;e<2048;e++)t[e]=0x38000000+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=0x47800000,e[32]=0x80000000,e[63]=0xc7800000;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=0x80000000+(t-32<<23);return e}(),r=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{let n=new ArrayBuffer(4*a.length),s=new Uint32Array(n);for(let n=0;n<a.length;n++){let o=a[n],i=e[r[o>>10]+(1023&o)]+t[o>>10];s[n]=i}return new Float32Array(n)}})()(o);else throw Error(`Unsupported quantization type ${a.dtype} for weight type float32.`);else if("int32"===l){if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw Error(`Unsupported quantization type ${a.dtype} for weight type int32.`);r=new Int32Array(o.length);for(let e=0;e<o.length;e++){let t=o[e];r[e]=Math.round(t*a.scale+a.min)}}else throw Error(`Unsupported dtype in weight '${s}': ${l}`);d+=p*n}else if("string"===l){let a=(0,o.sizeFromShape)(e.shape);r=[];for(let e=0;e<a;e++){let e=new Uint32Array(t.slice(d,d+4))[0];d+=4;let a=new Uint8Array(t.slice(d,d+e));r.push(a),d+=e}}else{let e=i.DTYPE_VALUE_SIZE_MAP[l];if("float32"===l)r=new Float32Array(t);else if("int32"===l)r=new Int32Array(t);else if("bool"===l)r=new Uint8Array(t);else if("complex64"===l){r=new Float32Array(t);let e=new Float32Array(r.length/2),s=new Float32Array(r.length/2);for(let t=0;t<e.length;t++)e[t]=r[2*t],s[t]=r[2*t+1];let o=(0,n.tensor)(e,u,"float32"),i=(0,n.tensor)(s,u,"float32"),l=(0,a.complex)(o,i);return o.dispose(),i.dispose(),l}else throw Error(`Unsupported dtype in weight '${s}': ${l}`);d+=p*e}return(0,n.tensor)(r,u,l)}async function g(e,t,r){let a=new Uint8Array(t);for(;a.byteLength<r;){let{done:t,value:n}=await e.read();if(t&&null==n){let e=r-a.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(a.length+n.byteLength);s.set(a,0),s.set(new Uint8Array(n),a.length),a=s}return a.buffer}async function x(e,t){let r={},a=e.getReader(),n=new ArrayBuffer(0);for(let e of t){let t=await f(e,async(e,t)=>(n=await g(a,n,t)).slice(e,t)),s=(n=await g(a,n,t)).slice(0,t);n=n.slice(t);let i=m(e,s);if(r[e.name]=i,"webgpu"===(0,u.getBackend)()){let e=(0,u.backend)();"uploadToGPU"in e&&(0,o.sizeFromShape)(i.shape)>=(0,p.env)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return r}let y=void 0!==d&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function b(e){return y?d.byteLength(e,"utf8"):new Blob([e]).size}function v(e){if(y)return d.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let e=0,a=t.length;e<a;e++)r+=String.fromCharCode(t[e]);return btoa(r)}function k(e){if(y){let t=d.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r.set([t.charCodeAt(e)],e);return r.buffer}function N(e){return l.CompositeArrayBuffer.join(e)}function C(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function T(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),r}function S(e,t,r){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!r)throw Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=r}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function I(e,t){let r,a;return null!=e.weightsManifest&&([r,a]=await t(e.weightsManifest)),S(e,r,a)}function w(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:b(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:b(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new(0,l.CompositeArrayBuffer)(e.weightData).byteLength}}function E(e){let t=[];for(let r of e)t.push(...r.weights);return t}}),o("20oDZ",function(t,r){e(t.exports,"complex",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({complex_:function(e,t){let r=(0,o.convertToTensor)(e,"real","complex"),s=(0,o.convertToTensor)(t,"imag","complex");return i.assertShapesMatch(r.shape,s.shape,`real and imag shapes, ${r.shape} and ${s.shape}, must match in call to tf.complex().`),a.ENGINE.runKernel(n.Complex,{real:r,imag:s})}})}),o("5xBLk",function(t,r){e(t.exports,"inferShape",()=>p),e(t.exports,"convertToTensor",()=>c),e(t.exports,"convertToTensorArray",()=>h);var a=s("38WwN"),n=s("ibsdL"),o=s("9jCh7"),i=s("2MDja"),l=s("8cCb2"),u=s("jjNRA"),l=s("8cCb2");function p(e,t){let r=e;if((0,u.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.isWebGLData)(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,i.isWebGPUData)(e))return[e.buffer.size/(null==t?4:(0,l.bytesPerElement)(t))];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(r)||(0,u.isTypedArray)(r)&&"string"!==t;)a.push(r.length),r=r[0];return Array.isArray(e)&&(0,n.env)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,r,a){if(a=a||[],!Array.isArray(t)&&!(0,u.isTypedArray)(t))return void(0,l.assert)(0===r.length,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${r[0]} elements`);(0,l.assert)(r.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${t.length} elements`),(0,l.assert)(t.length===r[0],()=>`Element arr[${a.join("][")}] should have ${r[0]} elements, but has ${t.length} elements`);let n=r.slice(1);for(let r=0;r<t.length;++r)e(t[r],n,a.concat(r))}(e,a,[]),a}function d(e,t,r,a){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${r}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function c(e,t,r,n="numeric"){if(e instanceof(0,o.getGlobalTensorClass)())return d(n,e.dtype,t,r),e;let s=(0,l.inferDtype)(e);if("string"!==s&&["bool","int32","float32"].indexOf(n)>=0&&(s=n),d(n,s,t,r),null==e||!(0,u.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${a}'`)}let i=p(e,s);(0,u.isTypedArray)(e)||Array.isArray(e)||(e=[e]);let h="string"!==s?(0,u.toTypedArray)(e,s):(0,u.flatten)(e,[],!0);return a.ENGINE.makeTensor(h,i,s)}function h(e,t,r,a="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,n)=>c(e,`${t}[${n}]`,r,a))}}),o("jqSCG",function(t,r){e(t.exports,"OP_SCOPE_SUFFIX",()=>o),e(t.exports,"op",()=>i);var a=s("38WwN"),n=s("8cCb2");let o="__op";function i(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let r=t[0],s=e[r];r.endsWith("_")&&(r=r.substring(0,r.length-1));let i=(...e)=>{a.ENGINE.startScope(r);try{let t=s(...e);return(0,n.isPromise)(t)&&console.error("Cannot return a Promise inside of tidy."),a.ENGINE.endScope(t),t}catch(e){throw a.ENGINE.endScope(null),e}};return Object.defineProperty(i,"name",{value:r+=o,configurable:!0}),i}}),o("erbmM",function(t,r){e(t.exports,"tensor",()=>o);var a=s("5xBLk"),n=s("dKr4X");function o(e,t,r){let s=(0,a.inferShape)(e,r);return(0,n.makeTensor)(e,t,s,r)}}),o("dKr4X",function(t,r){e(t.exports,"makeTensor",()=>l);var a=s("38WwN"),n=s("2MDja"),o=s("8cCb2"),i=s("jjNRA");function l(e,t,r,s){if(null==s)s=(0,o.inferDtype)(e);else if("complex64"===s)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,n.isWebGPUData)(e)||(0,n.isWebGLData)(e)){if("float32"!==s&&"int32"!==s)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return a.ENGINE.backend.createTensorFromGPUData(e,t||r,s)}if(!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,o.assertNonNegativeIntegerDimensions)(t);let e=(0,o.sizeFromShape)(t),a=(0,o.sizeFromShape)(r);(0,o.assert)(e===a,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`);for(let e=0;e<r.length;++e){let a=r[e],n=e!==r.length-1||a!==(0,o.sizeFromShape)(t.slice(e));(0,o.assert)(r[e]===t[e]||!n,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||r,e="string"!==s?(0,i.toTypedArray)(e,s):(0,i.flatten)(e,[],!0),a.ENGINE.makeTensor(e,t,s)}}),o("2bXta",function(t,r){e(t.exports,"DTYPE_VALUE_SIZE_MAP",()=>a);let a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}}),o("hBb8J",function(t,r){e(t.exports,"CompositeArrayBuffer",()=>n);var a=s("jjNRA");class n{static join(e){return new n(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>a.isTypedArray(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){let a=e[r];r!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let n=t+a.byteLength;this.shards.push({buffer:a,start:t,end:n}),t=n}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let r=this.findShardForByte(e);if(-1===r)throw Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),n=new Uint8Array(a),s=0;for(let a=r;a<this.shards.length;a++){let r=this.shards[a],o=e+s-r.start,i=s,l=Math.min(t,r.end)-r.start,u=new Uint8Array(r.buffer,o,l-o);if(n.set(u,i),s+=u.length,t<r.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:+(e>=t.end)}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let r=function(e,t){let r=0,a=e.length;for(;r<=a;){let n=Math.floor((a-r)/2)+r,s=t(e[n]);if(0===s)return n;s<0?a=n:r=n+1}return -1}(this.shards,t);return -1===r?-1:(this.previousShardIndex=r,this.previousShardIndex)}}}),o("c2DT1",function(t,r){e(t.exports,"enableProdMode",()=>l),e(t.exports,"enableDebugMode",()=>u),e(t.exports,"disableDeprecationWarnings",()=>p),e(t.exports,"deprecationWarn",()=>d),e(t.exports,"disposeVariables",()=>c),e(t.exports,"engine",()=>h),e(t.exports,"memory",()=>f),e(t.exports,"profile",()=>m),e(t.exports,"tidy",()=>g),e(t.exports,"dispose",()=>x),e(t.exports,"keep",()=>y),e(t.exports,"time",()=>b),e(t.exports,"setBackend",()=>v),e(t.exports,"ready",()=>k),e(t.exports,"getBackend",()=>N),e(t.exports,"removeBackend",()=>C),e(t.exports,"findBackend",()=>T),e(t.exports,"findBackendFactory",()=>S),e(t.exports,"registerBackend",()=>I),e(t.exports,"backend",()=>w),e(t.exports,"setPlatform",()=>E);var a=s("38WwN"),n=s("ibsdL"),o=s("9jCh7"),i=s("3w4Rg");function l(){(0,n.env)().set("PROD",!0)}function u(){(0,n.env)().set("DEBUG",!0)}function p(){(0,n.env)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function d(e){(0,n.env)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function c(){a.ENGINE.disposeVariables()}function h(){return a.ENGINE}function f(){return a.ENGINE.memory()}function m(e){return a.ENGINE.profile(e)}function g(e,t){return a.ENGINE.tidy(e,t)}function x(e){(0,i.getTensorsInContainer)(e).forEach(e=>e.dispose())}function y(e){return a.ENGINE.keep(e)}function b(e){return a.ENGINE.time(e)}function v(e){return a.ENGINE.setBackend(e)}function k(){return a.ENGINE.ready()}function N(){return a.ENGINE.backendName}function C(e){a.ENGINE.removeBackend(e)}function T(e){return a.ENGINE.findBackend(e)}function S(e){return a.ENGINE.findBackendFactory(e)}function I(e,t,r=1){return a.ENGINE.registerBackend(e,t,r)}function w(){return a.ENGINE.backend}function E(e,t){(0,n.env)().setPlatform(e,t)}(0,o.setDeprecationWarningFn)(d)}),o("6ZWSX",function(t,r){e(t.exports,"Buffer",()=>a,e=>a=e),e(t.exports,"INSPECT_MAX_BYTES",()=>n,e=>n=e);var a,n,o=s("kuxul"),i=s("9NvM5");let l="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function u(e){if(e>0x7fffffff)throw RangeError('The value "'+e+'" is invalid for option "size"');let t=new Uint8Array(e);return Object.setPrototypeOf(t,p.prototype),t}function p(e,t,r){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return h(e)}return d(e,t,r)}function d(e,t,r){if("string"==typeof e){var a=e,n=t;if(("string"!=typeof n||""===n)&&(n="utf8"),!p.isEncoding(n))throw TypeError("Unknown encoding: "+n);let r=0|x(a,n),s=u(r),o=s.write(a,n);return o!==r&&(s=s.slice(0,o)),s}if(ArrayBuffer.isView(e)){var s=e;if(V(s,Uint8Array)){let e=new Uint8Array(s);return m(e.buffer,e.byteOffset,e.byteLength)}return f(s)}if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(V(e,ArrayBuffer)||e&&V(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(V(e,SharedArrayBuffer)||e&&V(e.buffer,SharedArrayBuffer)))return m(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let o=e.valueOf&&e.valueOf();if(null!=o&&o!==e)return p.from(o,t,r);let i=function(e){if(p.isBuffer(e)){let t=0|g(e.length),r=u(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||function(e){return e!=e}(e.length)?u(0):f(e):"Buffer"===e.type&&Array.isArray(e.data)?f(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return p.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return c(e),u(e<0?0:0|g(e))}function f(e){let t=e.length<0?0:0|g(e.length),r=u(t);for(let a=0;a<t;a+=1)r[a]=255&e[a];return r}function m(e,t,r){let a;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(a=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),p.prototype),a}function g(e){if(e>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function x(e,t){if(p.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||V(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let r=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===r)return 0;let n=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return O(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return L(e).length;default:if(n)return a?-1:O(e).length;t=(""+t).toLowerCase(),n=!0}}function y(e,t,r){let a=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===r||r>this.length)&&(r=this.length),r<=0||(r>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){let a=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>a)&&(r=a);let n="";for(let a=t;a<r;++a)n+=G[e[a]];return n}(this,t,r);case"utf8":case"utf-8":return N(this,t,r);case"ascii":return function(e,t,r){let a="";r=Math.min(e.length,r);for(let n=t;n<r;++n)a+=String.fromCharCode(127&e[n]);return a}(this,t,r);case"latin1":case"binary":return function(e,t,r){let a="";r=Math.min(e.length,r);for(let n=t;n<r;++n)a+=String.fromCharCode(e[n]);return a}(this,t,r);case"base64":var n,s,i;return n=this,s=t,i=r,0===s&&i===n.length?o.fromByteArray(n):o.fromByteArray(n.slice(s,i));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){let a=e.slice(t,r),n="";for(let e=0;e<a.length-1;e+=2)n+=String.fromCharCode(a[e]+256*a[e+1]);return n}(this,t,r);default:if(a)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function b(e,t,r){let a=e[t];e[t]=e[r],e[r]=a}function v(e,t,r,a,n){var s;if(0===e.length)return -1;if("string"==typeof r?(a=r,r=0):r>0x7fffffff?r=0x7fffffff:r<-0x80000000&&(r=-0x80000000),(s=r*=1)!=s&&(r=n?0:e.length-1),r<0&&(r=e.length+r),r>=e.length)if(n)return -1;else r=e.length-1;else if(r<0)if(!n)return -1;else r=0;if("string"==typeof t&&(t=p.from(t,a)),p.isBuffer(t))return 0===t.length?-1:k(e,t,r,a,n);if("number"==typeof t){if(t&=255,"function"==typeof Uint8Array.prototype.indexOf)if(n)return Uint8Array.prototype.indexOf.call(e,t,r);else return Uint8Array.prototype.lastIndexOf.call(e,t,r);return k(e,[t],r,a,n)}throw TypeError("val must be string, number or Buffer")}function k(e,t,r,a,n){let s,o=1,i=e.length,l=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return -1;o=2,i/=2,l/=2,r/=2}function u(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(n){let a=-1;for(s=r;s<i;s++)if(u(e,s)===u(t,-1===a?0:s-a)){if(-1===a&&(a=s),s-a+1===l)return a*o}else -1!==a&&(s-=s-a),a=-1}else for(r+l>i&&(r=i-l),s=r;s>=0;s--){let r=!0;for(let a=0;a<l;a++)if(u(e,s+a)!==u(t,a)){r=!1;break}if(r)return s}return -1}function N(e,t,r){r=Math.min(e.length,r);let a=[],n=t;for(;n<r;){let t=e[n],s=null,o=t>239?4:t>223?3:t>191?2:1;if(n+o<=r){let r,a,i,l;switch(o){case 1:t<128&&(s=t);break;case 2:(192&(r=e[n+1]))==128&&(l=(31&t)<<6|63&r)>127&&(s=l);break;case 3:r=e[n+1],a=e[n+2],(192&r)==128&&(192&a)==128&&(l=(15&t)<<12|(63&r)<<6|63&a)>2047&&(l<55296||l>57343)&&(s=l);break;case 4:r=e[n+1],a=e[n+2],i=e[n+3],(192&r)==128&&(192&a)==128&&(192&i)==128&&(l=(15&t)<<18|(63&r)<<12|(63&a)<<6|63&i)>65535&&l<1114112&&(s=l)}}null===s?(s=65533,o=1):s>65535&&(s-=65536,a.push(s>>>10&1023|55296),s=56320|1023&s),a.push(s),n+=o}var s=a;let o=s.length;if(o<=4096)return String.fromCharCode.apply(String,s);let i="",l=0;for(;l<o;)i+=String.fromCharCode.apply(String,s.slice(l,l+=4096));return i}function C(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function T(e,t,r,a,n,s){if(!p.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<s)throw RangeError('"value" argument is out of bounds');if(r+a>e.length)throw RangeError("Index out of range")}function S(e,t,r,a,n){F(t,a,n,e,r,7);let s=Number(t&BigInt(0xffffffff));e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s;let o=Number(t>>BigInt(32)&BigInt(0xffffffff));return e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,r}function I(e,t,r,a,n){F(t,a,n,e,r,7);let s=Number(t&BigInt(0xffffffff));e[r+7]=s,s>>=8,e[r+6]=s,s>>=8,e[r+5]=s,s>>=8,e[r+4]=s;let o=Number(t>>BigInt(32)&BigInt(0xffffffff));return e[r+3]=o,o>>=8,e[r+2]=o,o>>=8,e[r+1]=o,o>>=8,e[r]=o,r+8}function w(e,t,r,a,n,s){if(r+a>e.length||r<0)throw RangeError("Index out of range")}function E(e,t,r,a,n){return t*=1,r>>>=0,n||w(e,t,r,4,34028234663852886e22,-34028234663852886e22),i.write(e,t,r,a,23,4),r+4}function A(e,t,r,a,n){return t*=1,r>>>=0,n||w(e,t,r,8,17976931348623157e292,-17976931348623157e292),i.write(e,t,r,a,52,8),r+8}a=p,n=50,p.TYPED_ARRAY_SUPPORT=function(){try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),p.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(p.prototype,"parent",{enumerable:!0,get:function(){if(p.isBuffer(this))return this.buffer}}),Object.defineProperty(p.prototype,"offset",{enumerable:!0,get:function(){if(p.isBuffer(this))return this.byteOffset}}),p.poolSize=8192,p.from=function(e,t,r){return d(e,t,r)},Object.setPrototypeOf(p.prototype,Uint8Array.prototype),Object.setPrototypeOf(p,Uint8Array),p.alloc=function(e,t,r){return(c(e),e<=0)?u(e):void 0!==t?"string"==typeof r?u(e).fill(t,r):u(e).fill(t):u(e)},p.allocUnsafe=function(e){return h(e)},p.allocUnsafeSlow=function(e){return h(e)},p.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==p.prototype},p.compare=function(e,t){if(V(e,Uint8Array)&&(e=p.from(e,e.offset,e.byteLength)),V(t,Uint8Array)&&(t=p.from(t,t.offset,t.byteLength)),!p.isBuffer(e)||!p.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,a=t.length;for(let n=0,s=Math.min(r,a);n<s;++n)if(e[n]!==t[n]){r=e[n],a=t[n];break}return r<a?-1:+(a<r)},p.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},p.concat=function(e,t){let r;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return p.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;let a=p.allocUnsafe(t),n=0;for(r=0;r<e.length;++r){let t=e[r];if(V(t,Uint8Array))n+t.length>a.length?(p.isBuffer(t)||(t=p.from(t)),t.copy(a,n)):Uint8Array.prototype.set.call(a,t,n);else if(p.isBuffer(t))t.copy(a,n);else throw TypeError('"list" argument must be an Array of Buffers');n+=t.length}return a},p.byteLength=x,p.prototype._isBuffer=!0,p.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)b(this,t,t+1);return this},p.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},p.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},p.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?N(this,0,e):y.apply(this,arguments)},p.prototype.toLocaleString=p.prototype.toString,p.prototype.equals=function(e){if(!p.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===p.compare(this,e)},p.prototype.inspect=function(){let e="",t=n;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},l&&(p.prototype[l]=p.prototype.inspect),p.prototype.compare=function(e,t,r,a,n){if(V(e,Uint8Array)&&(e=p.from(e,e.offset,e.byteLength)),!p.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===a&&(a=0),void 0===n&&(n=this.length),t<0||r>e.length||a<0||n>this.length)throw RangeError("out of range index");if(a>=n&&t>=r)return 0;if(a>=n)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,a>>>=0,n>>>=0,this===e)return 0;let s=n-a,o=r-t,i=Math.min(s,o),l=this.slice(a,n),u=e.slice(t,r);for(let e=0;e<i;++e)if(l[e]!==u[e]){s=l[e],o=u[e];break}return s<o?-1:+(o<s)},p.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},p.prototype.indexOf=function(e,t,r){return v(this,e,t,r,!0)},p.prototype.lastIndexOf=function(e,t,r){return v(this,e,t,r,!1)},p.prototype.write=function(e,t,r,a){var n,s,o,i,l,u,p,d;if(void 0===t)a="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)a=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===a&&(a="utf8")):(a=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let c=this.length-t;if((void 0===r||r>c)&&(r=c),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let h=!1;for(;;)switch(a){case"hex":return function(e,t,r,a){let n;r=Number(r)||0;let s=e.length-r;a?(a=Number(a))>s&&(a=s):a=s;let o=t.length;for(a>o/2&&(a=o/2),n=0;n<a;++n){var i;let a=parseInt(t.substr(2*n,2),16);if((i=a)!=i)break;e[r+n]=a}return n}(this,e,t,r);case"utf8":case"utf-8":return n=t,s=r,_(O(e,this.length-n),this,n,s);case"ascii":case"latin1":case"binary":return o=t,i=r,_(function(e){let t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(e),this,o,i);case"base64":return l=t,u=r,_(L(e),this,l,u);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return p=t,d=r,_(function(e,t){let r,a,n=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)a=(r=e.charCodeAt(s))>>8,n.push(r%256),n.push(a);return n}(e,this.length-p),this,p,d);default:if(h)throw TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),h=!0}},p.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},p.prototype.slice=function(e,t){let r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);let a=this.subarray(e,t);return Object.setPrototypeOf(a,p.prototype),a},p.prototype.readUintLE=p.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e],n=1,s=0;for(;++s<t&&(n*=256);)a+=this[e+s]*n;return a},p.prototype.readUintBE=p.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e+--t],n=1;for(;t>0&&(n*=256);)a+=this[e+--t]*n;return a},p.prototype.readUint8=p.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},p.prototype.readUint16LE=p.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},p.prototype.readUint16BE=p.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},p.prototype.readUint32LE=p.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+0x1000000*this[e+3]},p.prototype.readUint32BE=p.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),0x1000000*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},p.prototype.readBigUInt64LE=z(function(e){B(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let a=t+256*this[++e]+65536*this[++e]+0x1000000*this[++e],n=this[++e]+256*this[++e]+65536*this[++e]+0x1000000*r;return BigInt(a)+(BigInt(n)<<BigInt(32))}),p.prototype.readBigUInt64BE=z(function(e){B(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let a=0x1000000*t+65536*this[++e]+256*this[++e]+this[++e],n=0x1000000*this[++e]+65536*this[++e]+256*this[++e]+r;return(BigInt(a)<<BigInt(32))+BigInt(n)}),p.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e],n=1,s=0;for(;++s<t&&(n*=256);)a+=this[e+s]*n;return a>=(n*=128)&&(a-=Math.pow(2,8*t)),a},p.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=t,n=1,s=this[e+--a];for(;a>0&&(n*=256);)s+=this[e+--a]*n;return s>=(n*=128)&&(s-=Math.pow(2,8*t)),s},p.prototype.readInt8=function(e,t){return(e>>>=0,t||C(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},p.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);let r=this[e]|this[e+1]<<8;return 32768&r?0xffff0000|r:r},p.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);let r=this[e+1]|this[e]<<8;return 32768&r?0xffff0000|r:r},p.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},p.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},p.prototype.readBigInt64LE=z(function(e){B(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&D(e,this.length-8),(BigInt(this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24))<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+0x1000000*this[++e])}),p.prototype.readBigInt64BE=z(function(e){B(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&D(e,this.length-8),(BigInt((t<<24)+65536*this[++e]+256*this[++e]+this[++e])<<BigInt(32))+BigInt(0x1000000*this[++e]+65536*this[++e]+256*this[++e]+r)}),p.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!0,23,4)},p.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!1,23,4)},p.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!0,52,8)},p.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!1,52,8)},p.prototype.writeUintLE=p.prototype.writeUIntLE=function(e,t,r,a){if(e*=1,t>>>=0,r>>>=0,!a){let a=Math.pow(2,8*r)-1;T(this,e,t,r,a,0)}let n=1,s=0;for(this[t]=255&e;++s<r&&(n*=256);)this[t+s]=e/n&255;return t+r},p.prototype.writeUintBE=p.prototype.writeUIntBE=function(e,t,r,a){if(e*=1,t>>>=0,r>>>=0,!a){let a=Math.pow(2,8*r)-1;T(this,e,t,r,a,0)}let n=r-1,s=1;for(this[t+n]=255&e;--n>=0&&(s*=256);)this[t+n]=e/s&255;return t+r},p.prototype.writeUint8=p.prototype.writeUInt8=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,1,255,0),this[t]=255&e,t+1},p.prototype.writeUint16LE=p.prototype.writeUInt16LE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},p.prototype.writeUint16BE=p.prototype.writeUInt16BE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},p.prototype.writeUint32LE=p.prototype.writeUInt32LE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,4,0xffffffff,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},p.prototype.writeUint32BE=p.prototype.writeUInt32BE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,4,0xffffffff,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},p.prototype.writeBigUInt64LE=z(function(e,t=0){return S(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),p.prototype.writeBigUInt64BE=z(function(e,t=0){return I(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),p.prototype.writeIntLE=function(e,t,r,a){if(e*=1,t>>>=0,!a){let a=Math.pow(2,8*r-1);T(this,e,t,r,a-1,-a)}let n=0,s=1,o=0;for(this[t]=255&e;++n<r&&(s*=256);)e<0&&0===o&&0!==this[t+n-1]&&(o=1),this[t+n]=(e/s|0)-o&255;return t+r},p.prototype.writeIntBE=function(e,t,r,a){if(e*=1,t>>>=0,!a){let a=Math.pow(2,8*r-1);T(this,e,t,r,a-1,-a)}let n=r-1,s=1,o=0;for(this[t+n]=255&e;--n>=0&&(s*=256);)e<0&&0===o&&0!==this[t+n+1]&&(o=1),this[t+n]=(e/s|0)-o&255;return t+r},p.prototype.writeInt8=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},p.prototype.writeInt16LE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},p.prototype.writeInt16BE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},p.prototype.writeInt32LE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,4,0x7fffffff,-0x80000000),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},p.prototype.writeInt32BE=function(e,t,r){return e*=1,t>>>=0,r||T(this,e,t,4,0x7fffffff,-0x80000000),e<0&&(e=0xffffffff+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},p.prototype.writeBigInt64LE=z(function(e,t=0){return S(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),p.prototype.writeBigInt64BE=z(function(e,t=0){return I(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),p.prototype.writeFloatLE=function(e,t,r){return E(this,e,t,!0,r)},p.prototype.writeFloatBE=function(e,t,r){return E(this,e,t,!1,r)},p.prototype.writeDoubleLE=function(e,t,r){return A(this,e,t,!0,r)},p.prototype.writeDoubleBE=function(e,t,r){return A(this,e,t,!1,r)},p.prototype.copy=function(e,t,r,a){if(!p.isBuffer(e))throw TypeError("argument should be a Buffer");if(r||(r=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<r&&(a=r),a===r||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(a<0)throw RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-r&&(a=e.length-t+r);let n=a-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,a):Uint8Array.prototype.set.call(e,this.subarray(r,a),t),n},p.prototype.fill=function(e,t,r,a){let n;if("string"==typeof e){if("string"==typeof t?(a=t,t=0,r=this.length):"string"==typeof r&&(a=r,r=this.length),void 0!==a&&"string"!=typeof a)throw TypeError("encoding must be a string");if("string"==typeof a&&!p.isEncoding(a))throw TypeError("Unknown encoding: "+a);if(1===e.length){let t=e.charCodeAt(0);("utf8"===a&&t<128||"latin1"===a)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(n=t;n<r;++n)this[n]=e;else{let s=p.isBuffer(e)?e:p.from(e,a),o=s.length;if(0===o)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(n=0;n<r-t;++n)this[n+t]=s[n%o]}return this};let R={};function P(e,t,r){R[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function $(e){let t="",r=e.length,a=+("-"===e[0]);for(;r>=a+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function F(e,t,r,a,n,s){if(e>r||e<t){let a,n="bigint"==typeof t?"n":"";throw a=s>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${(s+1)*8}${n}`:`>= -(2${n} ** ${(s+1)*8-1}${n}) and < 2 ** ${(s+1)*8-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new R.ERR_OUT_OF_RANGE("value",a,e)}B(n,"offset"),(void 0===a[n]||void 0===a[n+s])&&D(n,a.length-(s+1))}function B(e,t){if("number"!=typeof e)throw new R.ERR_INVALID_ARG_TYPE(t,"number",e)}function D(e,t,r){if(Math.floor(e)!==e)throw B(e,r),new R.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new R.ERR_BUFFER_OUT_OF_BOUNDS;throw new R.ERR_OUT_OF_RANGE(r||"offset",`>= ${+!!r} and <= ${t}`,e)}P("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),P("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),P("ERR_OUT_OF_RANGE",function(e,t,r){let a=`The value of "${e}" is out of range.`,n=r;return Number.isInteger(r)&&Math.abs(r)>0x100000000?n=$(String(r)):"bigint"==typeof r&&(n=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(n=$(n)),n+="n"),a+=` It must be ${t}. Received ${n}`},RangeError);let M=/[^+/0-9A-Za-z-_]/g;function O(e,t){let r;t=t||1/0;let a=e.length,n=null,s=[];for(let o=0;o<a;++o){if((r=e.charCodeAt(o))>55295&&r<57344){if(!n){if(r>56319||o+1===a){(t-=3)>-1&&s.push(239,191,189);continue}n=r;continue}if(r<56320){(t-=3)>-1&&s.push(239,191,189),n=r;continue}r=(n-55296<<10|r-56320)+65536}else n&&(t-=3)>-1&&s.push(239,191,189);if(n=null,r<128){if((t-=1)<0)break;s.push(r)}else if(r<2048){if((t-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return s}function L(e){return o.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(M,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function _(e,t,r,a){let n;for(n=0;n<a&&!(n+r>=t.length)&&!(n>=e.length);++n)t[n+r]=e[n];return n}function V(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}let G=function(){let e="0123456789abcdef",t=Array(256);for(let r=0;r<16;++r){let a=16*r;for(let n=0;n<16;++n)t[a+n]=e[r]+e[n]}return t}();function z(e){return"undefined"==typeof BigInt?W:e}function W(){throw Error("BigInt not supported")}}),o("kuxul",function(t,r){e(t.exports,"toByteArray",()=>a,e=>a=e),e(t.exports,"fromByteArray",()=>n,e=>n=e);for(var a=function(e){var t,r,a=function(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");-1===r&&(r=t);var a=r===t?0:4-r%4;return[r,a]}(e),n=a[0],s=a[1],l=new i((n+s)*3/4-s),u=0,p=s>0?n-4:n;for(r=0;r<p;r+=4)t=o[e.charCodeAt(r)]<<18|o[e.charCodeAt(r+1)]<<12|o[e.charCodeAt(r+2)]<<6|o[e.charCodeAt(r+3)],l[u++]=t>>16&255,l[u++]=t>>8&255,l[u++]=255&t;return 2===s&&(t=o[e.charCodeAt(r)]<<2|o[e.charCodeAt(r+1)]>>4,l[u++]=255&t),1===s&&(t=o[e.charCodeAt(r)]<<10|o[e.charCodeAt(r+1)]<<4|o[e.charCodeAt(r+2)]>>2,l[u++]=t>>8&255,l[u++]=255&t),l},n=function(e){for(var t,r=e.length,a=r%3,n=[],o=0,i=r-a;o<i;o+=16383)n.push(function(e,t,r){for(var a,n=[],o=t;o<r;o+=3)a=(e[o]<<16&0xff0000)+(e[o+1]<<8&65280)+(255&e[o+2]),n.push(s[a>>18&63]+s[a>>12&63]+s[a>>6&63]+s[63&a]);return n.join("")}(e,o,o+16383>i?i:o+16383));return 1===a?n.push(s[(t=e[r-1])>>2]+s[t<<4&63]+"=="):2===a&&n.push(s[(t=(e[r-2]<<8)+e[r-1])>>10]+s[t>>4&63]+s[t<<2&63]+"="),n.join("")},s=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,p=l.length;u<p;++u)s[u]=l[u],o[l.charCodeAt(u)]=u;o[45]=62,o[95]=63}),o("9NvM5",function(t,r){var a,n;e(t.exports,"read",()=>a,e=>a=e),e(t.exports,"write",()=>n,e=>n=e),a=function(e,t,r,a,n){var s,o,i=8*n-a-1,l=(1<<i)-1,u=l>>1,p=-7,d=r?n-1:0,c=r?-1:1,h=e[t+d];for(d+=c,s=h&(1<<-p)-1,h>>=-p,p+=i;p>0;s=256*s+e[t+d],d+=c,p-=8);for(o=s&(1<<-p)-1,s>>=-p,p+=a;p>0;o=256*o+e[t+d],d+=c,p-=8);if(0===s)s=1-u;else{if(s===l)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,a),s-=u}return(h?-1:1)*o*Math.pow(2,s-a)},n=function(e,t,r,a,n,s){var o,i,l,u=8*s-n-1,p=(1<<u)-1,d=p>>1,c=5960464477539062e-23*(23===n),h=a?0:s-1,f=a?1:-1,m=+(t<0||0===t&&1/t<0);for(isNaN(t=Math.abs(t))||t===1/0?(i=+!!isNaN(t),o=p):(o=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-o))<1&&(o--,l*=2),o+d>=1?t+=c/l:t+=c*Math.pow(2,1-d),t*l>=2&&(o++,l/=2),o+d>=p?(i=0,o=p):o+d>=1?(i=(t*l-1)*Math.pow(2,n),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,n),o=0));n>=8;e[r+h]=255&i,h+=f,i/=256,n-=8);for(o=o<<n|i,u+=n;u>0;e[r+h]=255&o,h+=f,o/=256,u-=8);e[r+h-f]|=128*m}}),o("9RUNn",function(t,r){e(t.exports,"IORouterRegistry",()=>a),e(t.exports,"registerSaveRouter",()=>n),e(t.exports,"registerLoadRouter",()=>s),e(t.exports,"getSaveHandlers",()=>o),e(t.exports,"getLoadHandlers",()=>i);class a{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==a.instance&&(a.instance=new a),a.instance}static registerSaveRouter(e){a.getInstance().saveRouters.push(e)}static registerLoadRouter(e){a.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return a.getHandlers(e,"save")}static getLoadHandlers(e,t){return a.getHandlers(e,"load",t)}static getHandlers(e,t,r){let n=[];return("load"===t?a.getInstance().loadRouters:a.getInstance().saveRouters).forEach(t=>{let a=t(e,r);null!==a&&n.push(a)}),n}}let n=e=>a.registerSaveRouter(e),s=e=>a.registerLoadRouter(e),o=e=>a.getSaveHandlers(e),i=(e,t)=>a.getLoadHandlers(e,t)}),o("h6KCl",function(t,r){e(t.exports,"BrowserLocalStorage",()=>h),e(t.exports,"BrowserLocalStorageManager",()=>m),s("dcHSK");var a=s("ibsdL"),n=s("8cCb2"),o=s("4FRLN"),i=s("hBb8J"),l=s("9RUNn");let u="tensorflowjs_models",p="info";function d(e){return{info:[u,e,p].join("/"),topology:[u,e,"model_topology"].join("/"),weightSpecs:[u,e,"weight_specs"].join("/"),weightData:[u,e,"weight_data"].join("/"),modelMetadata:[u,e,"model_metadata"].join("/")}}function c(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class h{constructor(e){if(!(0,a.env)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=d(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=(0,o.getModelArtifactsInfoForJSON)(e),n=i.CompositeArrayBuffer.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,o.arrayBufferToBase64String)(n));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:a}}catch(e){throw c(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let n=this.LS.getItem(this.keys.modelMetadata);if(null!=n){let e=JSON.parse(n);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,o.base64StringToArrayBuffer)(s),t}}h.URL_SCHEME="localstorage://";let f=e=>{var t;return(0,a.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(h.URL_SCHEME)?(t=e.slice(h.URL_SCHEME.length),new h(t)):null};l.IORouterRegistry.registerSaveRouter(f),l.IORouterRegistry.registerLoadRouter(f);class m{constructor(){(0,n.assert)((0,a.env)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,n.assert)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=u+"/",r="/"+p;for(let a=0;a<this.LS.length;++a){let n=this.LS.key(a);n.startsWith(t)&&n.endsWith(r)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(n)]=JSON.parse(this.LS.getItem(n)))}return e}async removeModel(e){var t;let r=d(e=(t=e).startsWith(h.URL_SCHEME)?t.slice(h.URL_SCHEME.length):t);if(null==this.LS.getItem(r.info))throw Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(r.info));return c(r),a}}}),o("1PMKz",function(t,r){e(t.exports,"ModelStoreManagerRegistry",()=>o),e(t.exports,"listModels",()=>u),e(t.exports,"removeModel",()=>p),e(t.exports,"copyModel",()=>d),e(t.exports,"moveModel",()=>c);var a=s("8cCb2"),n=s("9RUNn");class o{constructor(){this.managers={}}static getInstance(){return null==o.instance&&(o.instance=new o),o.instance}static registerManager(e,t){(0,a.assert)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),(0,a.assert)(e.length>0,()=>"scheme must not be an empty string.");let r=o.getInstance();(0,a.assert)(null==r.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){let t=o.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(o.getInstance().managers)}}function i(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${o.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function l(e,t,r=!1){(0,a.assert)(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=n.IORouterRegistry.getLoadHandlers(e);(0,a.assert)(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),(0,a.assert)(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let u=s[0],p=n.IORouterRegistry.getSaveHandlers(t);(0,a.assert)(p.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),(0,a.assert)(p.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let d=p[0],c=i(e).scheme,h=i(e).path,f=c===i(e).scheme,m=await u.load();r&&f&&await o.getManager(c).removeModel(h);let g=await d.save(m);return r&&!f&&await o.getManager(c).removeModel(h),g.modelArtifactsInfo}async function u(){let e=o.getSchemes(),t={};for(let r of e){let e=await o.getManager(r).listModels();for(let a in e)t[r+"://"+a]=e[a]}return t}async function p(e){let t=i(e);return o.getManager(t.scheme).removeModel(t.path)}async function d(e,t){return l(e,t,!1)}async function c(e,t){return l(e,t,!0)}}),o("lhiTQ",function(e,t){let r;var a=s("ibsdL"),n=s("hPtJY");let o={importFetch:()=>s("kjyEk")};(0,a.env)().get("IS_NODE")&&!(0,a.env)().get("IS_BROWSER")&&(0,a.env)().setPlatform("node",new class{constructor(){this.util=s("kjyEk"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,a.env)().global.fetch?(0,a.env)().global.fetch(e,t):(null==r&&(r=o.importFetch()),r(e,t))}now(){let e=n.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}})}),o("kjyEk",function(e,t){}),o("iG87S",function(t,r){e(t.exports,"buffer",()=>o);var a=s("9jCh7"),n=s("8cCb2");function o(e,t="float32",r){return t=t||"float32",n.assertNonNegativeIntegerDimensions(e),new(0,a.TensorBuffer)(e,t,r)}}),o("inFmq",function(t,r){e(t.exports,"cast",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({cast_:function(e,t){let r=(0,o.convertToTensor)(e,"x","cast");if(!i.isValidDtype(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==r.dtype||"string"!==t&&"string"===r.dtype)throw Error("Only strings can be casted to strings");return a.ENGINE.runKernel(n.Cast,{x:r},{dtype:t})}})}),o("5TuCW",function(t,r){e(t.exports,"clone",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({clone_:function(e){let t=(0,o.convertToTensor)(e,"x","clone","string_or_numeric");return a.ENGINE.runKernel(n.Identity,{x:t})}})}),o("bSp5U",function(t,r){e(t.exports,"print",()=>a);function a(e,t=!1){console.log(e.toString(t))}}),o("5KHy0",function(t,r){e(t.exports,"registerOptimizers",()=>h);var a=s("Haryc"),n=s("7740A"),o=s("cdIoP"),i=s("9sl63"),l=s("7GJGN"),u=s("7qglv"),p=s("hR6PP"),d=s("5IZxH");let c=[a.AdadeltaOptimizer,n.AdagradOptimizer,o.AdamOptimizer,i.AdamaxOptimizer,l.MomentumOptimizer,u.RMSPropOptimizer,p.SGDOptimizer];function h(){for(let e of c)(0,d.registerClass)(e)}}),o("Haryc",function(t,r){e(t.exports,"AdadeltaOptimizer",()=>h);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("1QPqB"),l=s("jZc0w"),u=s("iAb3z"),p=s("iDd8d"),d=s("8EjnK"),c=s("kULIJ");class h extends c.Optimizer{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=a.ENGINE.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let s=a.ENGINE.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:(0,n.tidy)(()=>(0,d.zerosLike)(s).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:(0,n.tidy)(()=>(0,d.zerosLike)(s).variable(!1))});let c=Array.isArray(e)?e[r].tensor:e[t];if(null==c)return;let h=this.accumulatedGrads[r].variable,f=this.accumulatedUpdates[r].variable;(0,n.tidy)(()=>{let e=(0,o.add)((0,l.mul)(h,this.rho),(0,l.mul)((0,p.square)(c),1-this.rho)),t=(0,l.mul)((0,i.div)((0,u.sqrt)((0,o.add)(f,this.epsilon)),(0,u.sqrt)((0,o.add)(h,this.epsilon))),c),r=(0,o.add)((0,l.mul)(f,this.rho),(0,l.mul)((0,p.square)(t),1-this.rho));h.assign(e),f.assign(r);let a=(0,o.add)((0,l.mul)(t,-this.learningRate),s);s.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,n.dispose)(this.accumulatedGrads.map(e=>e.variable)),(0,n.dispose)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}}),o("hgacW",function(t,r){e(t.exports,"add",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({add_:function(e,t){let r=(0,i.convertToTensor)(e,"a","add"),s=(0,i.convertToTensor)(t,"b","add");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Add,l)}})}),o("1QPqB",function(t,r){e(t.exports,"div",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("6a2Ft");let u=(0,s("jqSCG").op)({div_:function(e,t){let r=(0,i.convertToTensor)(e,"a","div"),s=(0,i.convertToTensor)(t,"b","div");if([r,s]=(0,o.makeTypesMatch)(r,s),"int32"===r.dtype&&"int32"===s.dtype)return(0,l.floorDiv)(r,s);let u={a:r,b:s};return a.ENGINE.runKernel(n.RealDiv,u,{})}})}),o("6a2Ft",function(t,r){e(t.exports,"floorDiv",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({floorDiv_:function(e,t){let r=(0,i.convertToTensor)(e,"a","floorDiv"),s=(0,i.convertToTensor)(t,"b","floorDiv");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.FloorDiv,l)}})}),o("jZc0w",function(t,r){e(t.exports,"mul",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({mul_:function(e,t){let r=(0,i.convertToTensor)(e,"a","mul"),s=(0,i.convertToTensor)(t,"b","mul");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Multiply,l)}})}),o("iAb3z",function(t,r){e(t.exports,"sqrt",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sqrt_:function(e){let t=(0,o.convertToTensor)(e,"x","sqrt","float32");return a.ENGINE.runKernel(n.Sqrt,{x:t})}})}),o("iDd8d",function(t,r){e(t.exports,"square",()=>o);var a=s("38WwN"),n=s("5xBLk");let o=(0,s("jqSCG").op)({square_:function(e){let t=(0,n.convertToTensor)(e,"x","square");return a.ENGINE.runKernel("Square",{x:t},{})}})}),o("8EjnK",function(t,r){e(t.exports,"zerosLike",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({zerosLike_:function(e){let t=(0,o.convertToTensor)(e,"x","zerosLike");return a.ENGINE.runKernel(n.ZerosLike,{x:t})}})}),o("kULIJ",function(t,r){e(t.exports,"Optimizer",()=>l);var a=s("c2DT1"),n=s("92fpA"),o=s("3xp7o"),i=s("5IZxH");class l extends i.Serializable{minimize(e,t=!1,r){let{value:n,grads:s}=this.computeGradients(e,r);if(null!=r){let e=r.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return((0,a.dispose)(s),t)?n:(n.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,n.variableGrads)(e,t)}dispose(){null!=this.iterations_&&(0,a.dispose)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,o.scalar)(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(l,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients})}),o("92fpA",function(t,r){e(t.exports,"grad",()=>l),e(t.exports,"grads",()=>u),e(t.exports,"valueAndGrad",()=>p),e(t.exports,"valueAndGrads",()=>d),e(t.exports,"variableGrads",()=>c),e(t.exports,"customGrad",()=>h);var a=s("38WwN"),n=s("9jCh7"),o=s("5xBLk"),i=s("8cCb2");function l(e){return i.assert(i.isFunction(e),()=>"The f passed in grad(f) must be a function"),(t,r)=>{let n=(0,o.convertToTensor)(t,"x","tf.grad","string_or_numeric"),s=null!=r?(0,o.convertToTensor)(r,"dy","tf.grad"):null;return a.ENGINE.tidy(()=>{let{value:t,grads:r}=a.ENGINE.gradients(()=>e(n),[n],s);return null!=s&&i.assertShapesMatch(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),f(r),r[0]})}}function u(e){return i.assert(i.isFunction(e),()=>"The f passed in grads(f) must be a function"),(t,r)=>{i.assert(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=(0,o.convertToTensorArray)(t,"args","tf.grads","string_or_numeric"),s=null!=r?(0,o.convertToTensor)(r,"dy","tf.grads"):null;return a.ENGINE.tidy(()=>{let{value:t,grads:r}=a.ENGINE.gradients(()=>e(...n),n,s);return null!=s&&i.assertShapesMatch(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),f(r),r})}}function p(e){return i.assert(i.isFunction(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,r)=>{i.assert(t instanceof n.Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i.assert(null==r||r instanceof n.Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:o}=a.ENGINE.gradients(()=>e(t),[t],r);return f(s),{grad:s[0],value:o}}}function d(e){return i.assert(i.isFunction(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,r)=>{i.assert(Array.isArray(t)&&t.every(e=>e instanceof n.Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i.assert(null==r||r instanceof n.Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=a.ENGINE.gradients(()=>e(...t),t,r);return null!=r&&i.assertShapesMatch(s.value.shape,r.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),f(s.grads),s}}function c(e,t){i.assert(i.isFunction(e),()=>"The f passed in variableGrads(f) must be a function"),i.assert(null==t||Array.isArray(t)&&t.every(e=>e instanceof n.Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let r=null!=t;if(!r)for(let e in t=[],a.ENGINE.registeredVariables)t.push(a.ENGINE.registeredVariables[e]);let s=r?t.filter(e=>!e.trainable):null,o=t.length;t=t.filter(e=>e.trainable),i.assert(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let{value:l,grads:u}=a.ENGINE.gradients(e,t,null,!0);i.assert(u.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.assert(0===l.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`);let p={};return t.forEach((e,t)=>{null!=u[t]&&(p[e.name]=u[t])}),null!=s&&s.forEach(e=>p[e.name]=null),{value:l,grads:p}}function h(e){return a.ENGINE.customGrad(e)}function f(e){if(e.filter(e=>null==e).length>0)throw Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}}),o("3xp7o",function(t,r){e(t.exports,"scalar",()=>o);var a=s("jjNRA"),n=s("dKr4X");function o(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,n.makeTensor)(e,[],[],t)}}),o("5IZxH",function(t,r){e(t.exports,"Serializable",()=>i),e(t.exports,"SerializationMap",()=>l),e(t.exports,"registerClass",()=>u),e(t.exports,"getRegisteredName",()=>p);var a=s("8cCb2");let n=new Map,o=new Map;class i{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class l{constructor(){this.classNameMap={}}static getMap(){return null==l.instance&&(l.instance=new l),l.instance}static register(e){l.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function u(e,t,r){(0,a.assert)(null!=e.className,()=>"Class being registered does not have the static className property defined."),(0,a.assert)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),(0,a.assert)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===r&&(r=e.className);let s=t+">"+r;return l.register(e),n.set(s,e),o.set(e,s),e}function p(e){return o.has(e)?o.get(e):e.className}}),o("7740A",function(t,r){e(t.exports,"AdagradOptimizer",()=>h);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("1QPqB"),l=s("gYive"),u=s("jZc0w"),p=s("iAb3z"),d=s("iDd8d"),c=s("kULIJ");class h extends c.Optimizer{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let s=a.ENGINE.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:(0,n.tidy)(()=>(0,l.fill)(s.shape,this.initialAccumulatorValue).variable(!1))});let c=Array.isArray(e)?e[r].tensor:e[t];if(null==c)return;let h=this.accumulatedGrads[r].variable;(0,n.tidy)(()=>{let e=(0,o.add)(h,(0,d.square)(c));h.assign(e);let t=(0,o.add)((0,u.mul)((0,i.div)(c,(0,p.sqrt)((0,o.add)(e,a.ENGINE.backend.epsilon()))),-this.learningRate),s);s.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,n.dispose)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}}),o("gYive",function(t,r){e(t.exports,"fill",()=>i);var a=s("38WwN"),n=s("hl418"),o=(s("8cCb2"),s("8cCb2"));function i(e,t,r){(0,o.assertNonNegativeIntegerDimensions)(e),r=r||(0,o.inferDtype)(t);let s={shape:e,value:t,dtype:r};return a.ENGINE.runKernel(n.Fill,{},s)}}),o("cdIoP",function(t,r){e(t.exports,"AdamOptimizer",()=>g);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("1QPqB"),l=s("jZc0w"),u=s("ad1of"),p=s("3xp7o"),d=s("iAb3z"),c=s("iDd8d"),h=s("7kouu"),f=s("8EjnK"),m=s("kULIJ");class g extends m.Optimizer{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,n.tidy)(()=>{this.accBeta1=(0,p.scalar)(t).variable(),this.accBeta2=(0,p.scalar)(r).variable()}),null==s&&(this.epsilon=a.ENGINE.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,n.tidy)(()=>{let r=(0,h.sub)(1,this.accBeta1),s=(0,h.sub)(1,this.accBeta2);t.forEach((t,u)=>{let p=a.ENGINE.registeredVariables[t];null==this.accumulatedFirstMoment[u]&&(this.accumulatedFirstMoment[u]={originalName:`${t}/m`,variable:(0,n.tidy)(()=>(0,f.zerosLike)(p).variable(!1))}),null==this.accumulatedSecondMoment[u]&&(this.accumulatedSecondMoment[u]={originalName:`${t}/v`,variable:(0,n.tidy)(()=>(0,f.zerosLike)(p).variable(!1))});let h=Array.isArray(e)?e[u].tensor:e[t];if(null==h)return;let m=this.accumulatedFirstMoment[u].variable,g=this.accumulatedSecondMoment[u].variable,x=(0,o.add)((0,l.mul)(m,this.beta1),(0,l.mul)(h,1-this.beta1)),y=(0,o.add)((0,l.mul)(g,this.beta2),(0,l.mul)((0,c.square)(h),1-this.beta2)),b=(0,i.div)(x,r),v=(0,i.div)(y,s);m.assign(x),g.assign(y);let k=(0,o.add)((0,l.mul)((0,i.div)(b,(0,o.add)((0,d.sqrt)(v),this.epsilon)),-this.learningRate),p);p.assign(k)}),this.accBeta1.assign((0,l.mul)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,l.mul)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,n.dispose)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&(0,n.dispose)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),(0,n.tidy)(()=>{this.accBeta1.assign((0,u.pow)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,u.pow)(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}}),o("ad1of",function(t,r){e(t.exports,"pow",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({pow_:function(e,t){let r=(0,i.convertToTensor)(e,"base","pow"),s=(0,i.convertToTensor)(t,"exp","pow");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Pow,l)}})}),o("7kouu",function(t,r){e(t.exports,"sub",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({sub_:function(e,t){let r=(0,i.convertToTensor)(e,"a","sub"),s=(0,i.convertToTensor)(t,"b","sub");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Sub,l)}})}),o("9sl63",function(t,r){e(t.exports,"AdamaxOptimizer",()=>m);var a=s("38WwN"),n=s("c2DT1"),o=s("7j49I"),i=s("hgacW"),l=s("1QPqB"),u=s("g5Jt1"),p=s("jZc0w"),d=s("3xp7o"),c=s("7kouu"),h=s("8EjnK"),f=s("kULIJ");class m extends f.Optimizer{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,n.tidy)(()=>{this.iteration=(0,d.scalar)(0).variable(),this.accBeta1=(0,d.scalar)(t).variable()}),null==s&&(this.epsilon=a.ENGINE.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,n.tidy)(()=>{let r=(0,c.sub)(1,this.accBeta1),n=(0,l.div)(-this.learningRate,(0,i.add)((0,p.mul)(this.iteration,this.decay),1));t.forEach((t,s)=>{let d=a.ENGINE.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,h.zerosLike)(d).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,h.zerosLike)(d).variable(!1)});let c=Array.isArray(e)?e[s].tensor:e[t];if(null==c)return;let f=this.accumulatedFirstMoment[s].variable,m=this.accumulatedWeightedInfNorm[s].variable,g=(0,i.add)((0,p.mul)(f,this.beta1),(0,p.mul)(c,1-this.beta1)),x=(0,p.mul)(m,this.beta2),y=(0,o.abs)(c),b=(0,u.maximum)(x,y);f.assign(g),m.assign(b);let v=(0,i.add)((0,p.mul)((0,l.div)(n,r),(0,l.div)(g,(0,i.add)(b,this.epsilon))),d);d.assign(v)}),this.iteration.assign((0,i.add)(this.iteration,1)),this.accBeta1.assign((0,p.mul)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,n.dispose)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&(0,n.dispose)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}}),o("7j49I",function(t,r){e(t.exports,"abs",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({abs_:function(e){let t=(0,o.convertToTensor)(e,"x","abs");return"complex64"===t.dtype?a.ENGINE.runKernel(n.ComplexAbs,{x:t}):a.ENGINE.runKernel(n.Abs,{x:t})}})}),o("g5Jt1",function(t,r){e(t.exports,"maximum",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO"),u=s("inFmq");let p=(0,s("jqSCG").op)({maximum_:function(e,t){let r=(0,i.convertToTensor)(e,"a","maximum"),s=(0,i.convertToTensor)(t,"b","maximum");[r,s]=(0,o.makeTypesMatch)(r,s),"bool"===r.dtype&&(r=(0,u.cast)(r,"int32"),s=(0,u.cast)(s,"int32")),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let p={a:r,b:s};return a.ENGINE.runKernel(n.Maximum,p)}})}),o("8BaGO",function(t,r){function a(e,t){let r=e.length,a=[];for(let n=0;n<r;n++){let s=r-1-n,o=e[s]||1;(t[t.length-1-n]||1)>1&&1===o&&a.unshift(s)}return a}function n(e,t){let r=[];for(let a=0;a<t.length;a++){let n=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==n||1===n&&o>1)&&r.unshift(s)}return r}function s(e,t){let r=Math.max(e.length,t.length),a=Array(r);for(let n=0;n<r;n++){let s=e[e.length-n-1];null==s&&(s=1);let o=t[t.length-n-1];if(null==o&&(o=1),1===s)a[r-n-1]=o;else if(1===o)a[r-n-1]=s;else if(s!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else a[r-n-1]=s}return a}e(t.exports,"getBroadcastDims",()=>a),e(t.exports,"getReductionAxes",()=>n),e(t.exports,"assertAndGetBroadcastShape",()=>s)}),o("7GJGN",function(t,r){e(t.exports,"MomentumOptimizer",()=>d);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("jZc0w"),l=s("3xp7o"),u=s("8EjnK"),p=s("hR6PP");class d extends p.SGDOptimizer{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=(0,l.scalar)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let s=a.ENGINE.registeredVariables[t];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:(0,n.tidy)(()=>(0,u.zerosLike)(s).variable(!1))});let l=this.accumulations[r].variable,p=Array.isArray(e)?e[r].tensor:e[t];null!=p&&(0,n.tidy)(()=>{let e,t=(0,o.add)((0,i.mul)(this.m,l),p);e=this.useNesterov?(0,o.add)((0,i.mul)(this.c,(0,o.add)(p,(0,i.mul)(t,this.m))),s):(0,o.add)((0,i.mul)(this.c,t),s),l.assign(t),s.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,n.dispose)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}}),o("hR6PP",function(t,r){e(t.exports,"SGDOptimizer",()=>p);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("jZc0w"),l=s("3xp7o"),u=s("kULIJ");class p extends u.Optimizer{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let l=a.ENGINE.registeredVariables[t];(0,n.tidy)(()=>{let e=(0,o.add)((0,i.mul)(this.c,s),l);l.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,n.keep)((0,l.scalar)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}}),o("7qglv",function(t,r){e(t.exports,"RMSPropOptimizer",()=>f);var a=s("38WwN"),n=s("c2DT1"),o=s("hgacW"),i=s("1QPqB"),l=s("jZc0w"),u=s("iAb3z"),p=s("iDd8d"),d=s("7kouu"),c=s("8EjnK"),h=s("kULIJ");class f extends h.Optimizer{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,n=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==n&&(this.epsilon=a.ENGINE.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let s=a.ENGINE.registeredVariables[t];null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:(0,n.tidy)(()=>(0,c.zerosLike)(s).variable(!1))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:(0,n.tidy)(()=>(0,c.zerosLike)(s).variable(!1))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:(0,n.tidy)(()=>(0,c.zerosLike)(s).variable(!1))});let h=Array.isArray(e)?e[r].tensor:e[t];if(null==h)return;let f=this.accumulatedMeanSquares[r].variable,m=this.accumulatedMoments[r].variable;(0,n.tidy)(()=>{let e=(0,o.add)((0,l.mul)(f,this.decay),(0,l.mul)((0,p.square)(h),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[r].variable,a=(0,o.add)((0,l.mul)(t,this.decay),(0,l.mul)(h,1-this.decay)),n=(0,i.div)((0,l.mul)(h,this.learningRate),(0,u.sqrt)((0,d.sub)(e,(0,o.add)((0,p.square)(a),this.epsilon)))),c=(0,o.add)((0,l.mul)(m,this.momentum),n);f.assign(e),t.assign(a),m.assign(c);let g=(0,d.sub)(s,c);s.assign(g)}else{let e=(0,o.add)((0,l.mul)(f,this.decay),(0,l.mul)((0,p.square)(h),1-this.decay)),t=(0,o.add)((0,l.mul)(m,this.momentum),(0,i.div)((0,l.mul)(h,this.learningRate),(0,u.sqrt)((0,o.add)(e,this.epsilon))));f.assign(e),m.assign(t);let r=(0,d.sub)(s,t);s.assign(r)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,n.dispose)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,n.dispose)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&(0,n.dispose)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}}),o("6th4t",function(r,a){e(r.exports,"AdadeltaOptimizer",()=>s("Haryc").AdadeltaOptimizer),e(r.exports,"AdagradOptimizer",()=>s("7740A").AdagradOptimizer),e(r.exports,"AdamOptimizer",()=>s("cdIoP").AdamOptimizer),e(r.exports,"AdamaxOptimizer",()=>s("9sl63").AdamaxOptimizer),e(r.exports,"MomentumOptimizer",()=>s("7GJGN").MomentumOptimizer),e(r.exports,"Optimizer",()=>s("kULIJ").Optimizer),e(r.exports,"OptimizerConstructors",()=>s("bO4Xu").OptimizerConstructors),e(r.exports,"RMSPropOptimizer",()=>s("7qglv").RMSPropOptimizer),e(r.exports,"SGDOptimizer",()=>s("hR6PP").SGDOptimizer),e(r.exports,"Tensor",()=>s("9jCh7").Tensor),e(r.exports,"TensorBuffer",()=>s("9jCh7").TensorBuffer),e(r.exports,"Variable",()=>s("9jCh7").Variable),e(r.exports,"Rank",()=>s("2MDja").Rank),e(r.exports,"sumOutType",()=>s("2MDja").sumOutType),e(r.exports,"upcastType",()=>s("2MDja").upcastType),e(r.exports,"Reduction",()=>s("i8gZm").Reduction),e(r.exports,"customGrad",()=>s("92fpA").customGrad),e(r.exports,"grad",()=>s("92fpA").grad),e(r.exports,"grads",()=>s("92fpA").grads),e(r.exports,"valueAndGrad",()=>s("92fpA").valueAndGrad),e(r.exports,"valueAndGrads",()=>s("92fpA").valueAndGrads),e(r.exports,"variableGrads",()=>s("92fpA").variableGrads),e(r.exports,"Environment",()=>s("ibsdL").Environment),e(r.exports,"env",()=>s("ibsdL").env),e(r.exports,"ENV",()=>s("ibsdL").ENV),e(r.exports,"version_core",()=>s("kWDmn").version),e(r.exports,"nextFrame",()=>s("9LtVT").nextFrame),e(r.exports,"browser",()=>s("cpgue")),e(r.exports,"io",()=>s("9ELKf")),e(r.exports,"math",()=>s("9soOW")),e(r.exports,"serialization",()=>s("5IZxH")),e(r.exports,"test_util",()=>s("6thPa")),e(r.exports,"util",()=>s("jjNRA")),e(r.exports,"backend_util",()=>s("7MaPk")),e(r.exports,"broadcast_util",()=>s("8BaGO")),e(r.exports,"tensor_util",()=>s("3w4Rg")),e(r.exports,"slice_util",()=>s("bszZn")),e(r.exports,"gather_util",()=>s("4EvS9")),e(r.exports,"scatter_util",()=>s("7wQGW")),e(r.exports,"device_util",()=>s("4GTZ3")),e(r.exports,"kernel_impls",()=>s("lzjc8")),e(r.exports,"KernelBackend",()=>s("fJqML").KernelBackend),e(r.exports,"DataStorage",()=>s("fJqML").DataStorage),s("9ELKf"),s("9soOW"),s("8BaGO"),s("cpgue"),s("4EvS9"),s("7wQGW"),s("bszZn"),s("5IZxH"),s("3w4Rg"),s("6thPa"),s("jjNRA"),s("kWDmn"),s("Haryc"),s("7740A"),s("cdIoP"),s("9sl63"),s("7GJGN"),s("kULIJ"),s("bO4Xu"),s("7qglv"),s("hR6PP"),s("9jCh7"),s("2MDja");var n=s("aosGd");s("i8gZm");var o=s("dXS8M"),i=s("c2DT1"),l=s("eky5o");s("92fpA"),s("ibsdL"),s("9LtVT"),s("7MaPk"),s("4GTZ3"),s("lzjc8"),s("fJqML");var u=s("hl418");t(r.exports,n),t(r.exports,o),t(r.exports,i),t(r.exports,l),t(r.exports,u)}),o("9ELKf",function(t,r){e(t.exports,"copyModel",()=>s("1PMKz").copyModel),e(t.exports,"listModels",()=>s("1PMKz").listModels),e(t.exports,"moveModel",()=>s("1PMKz").moveModel),e(t.exports,"removeModel",()=>s("1PMKz").removeModel),e(t.exports,"browserFiles",()=>s("GOEuS").browserFiles),e(t.exports,"browserHTTPRequest",()=>s("jbPC7").browserHTTPRequest),e(t.exports,"CompositeArrayBuffer",()=>s("hBb8J").CompositeArrayBuffer),e(t.exports,"concatenateArrayBuffers",()=>s("4FRLN").concatenateArrayBuffers),e(t.exports,"decodeWeights",()=>s("4FRLN").decodeWeights),e(t.exports,"decodeWeightsStream",()=>s("4FRLN").decodeWeightsStream),e(t.exports,"encodeWeights",()=>s("4FRLN").encodeWeights),e(t.exports,"fromMemory",()=>s("hfd1o").fromMemory),e(t.exports,"fromMemorySync",()=>s("hfd1o").fromMemorySync),e(t.exports,"getLoadHandlers",()=>s("9RUNn").getLoadHandlers),e(t.exports,"getModelArtifactsForJSON",()=>s("4FRLN").getModelArtifactsForJSON),e(t.exports,"getModelArtifactsForJSONSync",()=>s("4FRLN").getModelArtifactsForJSONSync),e(t.exports,"getModelArtifactsInfoForJSON",()=>s("4FRLN").getModelArtifactsInfoForJSON),e(t.exports,"getSaveHandlers",()=>s("9RUNn").getSaveHandlers),e(t.exports,"getWeightSpecs",()=>s("4FRLN").getWeightSpecs),e(t.exports,"http",()=>s("jbPC7").http),e(t.exports,"isHTTPScheme",()=>s("jbPC7").isHTTPScheme),e(t.exports,"loadWeights",()=>s("wfkqW").loadWeights),e(t.exports,"registerLoadRouter",()=>s("9RUNn").registerLoadRouter),e(t.exports,"registerSaveRouter",()=>s("9RUNn").registerSaveRouter),e(t.exports,"weightsLoaderFactory",()=>s("wfkqW").weightsLoaderFactory),e(t.exports,"withSaveHandler",()=>s("hfd1o").withSaveHandler),e(t.exports,"withSaveHandlerSync",()=>s("hfd1o").withSaveHandlerSync),s("caMdQ"),s("h6KCl"),s("GOEuS"),s("jbPC7"),s("4FRLN"),s("hfd1o"),s("9RUNn"),s("wfkqW"),s("hBb8J"),s("1PMKz")}),o("GOEuS",function(t,r){e(t.exports,"browserFiles",()=>d),s("dcHSK");var a=s("ibsdL"),n=s("4FRLN"),o=s("9RUNn"),i=s("hBb8J");function l(e){return new Promise(e=>setTimeout(e)).then(e)}class u{constructor(e){if(!(0,a.env)().getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(u.URL_SCHEME)&&(e=e.slice(u.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=i.CompositeArrayBuffer.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,n.getModelJSONForModelArtifacts)(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=s,await l(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=r,await l(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,n.getModelArtifactsInfoForJSON)(e)}}}}u.URL_SCHEME="downloads://";class p{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;return null==s?void t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`)):null==a.weightsManifest?void t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`)):0===this.weightsFiles.length?void e({modelTopology:s}):void e((0,n.getModelArtifactsForJSON)(a,e=>this.loadWeights(e)))},r.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let a of e)t.push(...a.weights),r.push(...a.paths);let a=this.checkManifestAndWeightFiles(e);return Promise.all(r.map(e=>this.loadWeightsFile(e,a[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((r,a)=>{let n=new FileReader;n.onload=e=>{r(e.target.result)},n.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),n.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(e=>(0,n.basename)(e.name)),a={};for(let s of e)s.paths.forEach(e=>{let s=(0,n.basename)(e);if(-1!==t.indexOf(s))throw Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===r.indexOf(s))throw Error(`Weight file with basename '${s}' is not provided.`);a[e]=this.weightsFiles[r.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}function d(e){return new p(e)}o.IORouterRegistry.registerSaveRouter(e=>(0,a.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(u.URL_SCHEME)?function(e="model"){return new u(e)}(e.slice(u.URL_SCHEME.length)):null)}),o("jbPC7",function(t,r){e(t.exports,"isHTTPScheme",()=>d),e(t.exports,"http",()=>h),e(t.exports,"browserHTTPRequest",()=>f);var a=s("ibsdL"),n=s("8cCb2"),o=s("4FRLN"),i=s("hBb8J"),l=s("9RUNn"),u=s("wfkqW");class p{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,n.assert)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=(0,a.env)().platform.fetch,(0,n.assert)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&(0,n.assert)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,o.getModelJSONForModelArtifacts)(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){let r=i.CompositeArrayBuffer.join(e.weightData);t.body.append("model.weights.bin",new Blob([r],{type:"application/octet-stream"}),"model.weights.bin")}let n=await this.fetch(this.path,t);if(n.ok)return{modelArtifactsInfo:(0,o.getModelArtifactsInfoForJSON)(e),responses:[n]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${n.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let r=e.modelTopology,a=e.weightsManifest;if(null==r&&null==a)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return(0,o.getModelArtifactsForJSON)(e,e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=(0,o.getWeightSpecs)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:()=>(0,u.streamWeights)(t,this.loadOptions)})}async getWeightUrls(e){let[t,r]=function(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?");return[e.substring(0,t)+"/",r>t?e.substring(r):""]}(Array.isArray(this.path)?this.path[1]:this.path),a=this.weightPathPrefix||t,n=[],s=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):n.push(a+e+r);return this.weightUrlConverter&&n.push(...await Promise.all(s)),n}async loadWeights(e){let t=await this.getWeightUrls(e);return[(0,o.getWeightSpecs)(e),await (0,u.loadWeightsAsArrayBuffer)(t,this.loadOptions)]}}function d(e){return null!=e.match(p.URL_SCHEME_REGEX)}p.URL_SCHEME_REGEX=/^https?:\/\//;let c=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else{let r=!0;if(Array.isArray(e)?e.every(e=>d(e)):d(e))return h(e,t)}return null};function h(e,t){return new p(e,t)}function f(e,t){return h(e,t)}l.IORouterRegistry.registerSaveRouter(c),l.IORouterRegistry.registerLoadRouter(c)}),o("wfkqW",function(t,r){e(t.exports,"loadWeightsAsArrayBuffer",()=>p),e(t.exports,"streamWeights",()=>d),e(t.exports,"loadWeights",()=>c),e(t.exports,"weightsLoaderFactory",()=>h);var a=s("ibsdL"),n=s("8cCb2"),o=s("hBb8J"),i=s("4FRLN"),l=s("cYV5g"),u=s("2bXta");async function p(e,t){null==t&&(t={});let r=null==t.fetchFunc?(0,a.env)().platform.fetch:t.fetchFunc,n=e.map(e=>r(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(n):await (0,l.monitorPromisesProgress)(n,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await (0,l.monitorPromisesProgress)(s,t.onProgress,.5,1)}function d(e,t){var r;let n,s=null==t.fetchFunc?(0,a.env)().platform.fetch:t.fetchFunc,o=0;return null==(r=t.onProgress)||r.call(t,0),new ReadableStream({pull:async r=>{for(var a;o<e.length;){n||(n=(await s(e[o],t.requestInit,{isBinary:!0})).body.getReader());let{done:i,value:l}=await n.read();if(i){o++,n=void 0,null==(a=t.onProgress)||a.call(t,o/e.length);continue}r.enqueue(l);return}r.close()}})}async function c(e,t="",r,a){return h(e=>p(e,{requestInit:a}))(e,t,r)}function h(e){return async(t,r="",a)=>{let s=t.map(()=>!1),l={},p=null!=a?a.map(()=>!1):[],d=[];if(t.forEach((e,t)=>{let r=0;e.weights.forEach(e=>{let o="quantization"in e?e.quantization.dtype:e.dtype,i=u.DTYPE_VALUE_SIZE_MAP[o]*n.sizeFromShape(e.shape),c=()=>{s[t]=!0,null==l[t]&&(l[t]=[]),l[t].push({manifestEntry:e,groupOffset:r,sizeBytes:i})};null!=a?a.forEach((t,r)=>{t===e.name&&(c(),p[r]=!0)}):c(),d.push(e.name),r+=i})}),!p.every(e=>e)){let e=a.filter((e,t)=>!p[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${d.join(", ")}.`)}let c=s.reduce((e,t,r)=>(t&&e.push(r),e),[]),h=[];c.forEach(e=>{t[e].paths.forEach(e=>{let t=r+(r.endsWith("/")?"":"/")+e;h.push(t)})});let f=await e(h),m={},g=0;return c.forEach(e=>{let r=t[e].paths.length,a=new(0,o.CompositeArrayBuffer)(f.slice(g,g+r));l[e].forEach(e=>{let t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),r=(0,i.decodeWeights)(t,[e.manifestEntry]);for(let e in r)m[e]=r[e]}),g+=r}),m}}}),o("cYV5g",function(t,r){e(t.exports,"monitorPromisesProgress",()=>n);var a=s("8cCb2");function n(e,t,r,n){var s,o,i;s=e,(0,a.assert)(null!=s&&Array.isArray(s)&&s.length>0,()=>"promises must be a none empty array"),o=r=null==r?0:r,i=n=null==n?1:n,(0,a.assert)(o>=0&&o<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${o}`),(0,a.assert)(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),(0,a.assert)(i>=o,()=>`startFraction must be no more than endFraction, but got startFraction ${o} and endFraction ${i}`);let l=0;return Promise.all(e.map(a=>(a.then(a=>(t(r+ ++l/e.length*(n-r)),a)),a)))}}),o("hfd1o",function(t,r){e(t.exports,"fromMemory",()=>o),e(t.exports,"fromMemorySync",()=>i),e(t.exports,"withSaveHandler",()=>l),e(t.exports,"withSaveHandlerSync",()=>u);class a{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class n{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class s{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function o(e,t,r,a){let n=arguments;return new s(i(...n))}function i(e,t,r,n){return 1!=arguments.length?(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new a({modelTopology:e,weightSpecs:t,weightData:r,trainingConfig:n})):null!=e.modelTopology||null!=e.weightSpecs?new a(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new a({modelTopology:e}))}function l(e){return new n(e)}function u(e){return new n(e)}}),o("9soOW",function(t,r){e(t.exports,"confusionMatrix",()=>s("4UAJF").confusionMatrix),s("4UAJF")}),o("4UAJF",function(t,r){e(t.exports,"confusionMatrix",()=>d);var a=s("5xBLk"),n=s("8cCb2"),o=s("inFmq"),i=s("aUFou"),l=s("i3U4j"),u=s("jqSCG"),p=s("aDHKy");let d=(0,u.op)({confusionMatrix_:function(e,t,r){let s=(0,a.convertToTensor)(e,"labels","confusionMatrix"),u=(0,a.convertToTensor)(t,"predictions","confusionMatrix");n.assert(null==r||r>0&&Number.isInteger(r),()=>`If provided, numClasses must be a positive integer, but got ${r}`),n.assert(1===s.rank,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),n.assert(1===u.rank,()=>`Expected the rank of predictions to be 1, but got ${u.rank}`),n.assert(s.shape[0]===u.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${u.shape[0]}. Labels and predictions should have the same number of elements.`),n.assert(r>0&&Number.isInteger(r),()=>`numClasses is required to be a positive integer, but got ${r}`);let d=(0,l.oneHot)((0,o.cast)(s,"int32"),r),c=(0,l.oneHot)((0,o.cast)(u,"int32"),r),h=(0,p.transpose)(d),f=(0,i.matMul)(h,c);return(0,o.cast)(f,"int32")}})}),o("aUFou",function(t,r){e(t.exports,"matMul",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({matMul_:function(e,t,r=!1,s=!1){let l=(0,i.convertToTensor)(e,"a","matMul"),u=(0,i.convertToTensor)(t,"b","matMul");[l,u]=(0,o.makeTypesMatch)(l,u);let p={a:l,b:u};return a.ENGINE.runKernel(n.BatchMatMul,p,{transposeA:r,transposeB:s})}})}),o("i3U4j",function(t,r){e(t.exports,"oneHot",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({oneHot_:function(e,t,r=1,s=0,i="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let l=(0,o.convertToTensor)(e,"indices","oneHot","int32");return a.ENGINE.runKernel(n.OneHot,{indices:l},{dtype:i,depth:t,onValue:r,offValue:s})}})}),o("aDHKy",function(t,r){e(t.exports,"transpose",()=>f);var a=s("38WwN"),n=s("c2DT1"),o=s("hl418"),i=s("5xBLk"),l=s("8cCb2"),u=s("20oDZ"),p=s("1d8KH"),d=s("15cGp"),c=s("jqSCG"),h=s("b7x1G");let f=(0,c.op)({transpose_:function(e,t,r){let s=(0,i.convertToTensor)(e,"x","transpose");if(null==t&&(t=s.shape.map((e,t)=>t).reverse()),l.assert(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(e=>{l.assert(e>=0&&e<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let c={perm:t};return"complex64"===s.dtype?(0,n.tidy)(()=>{let e=(0,h.real)(s),t=(0,p.imag)(s);return e=a.ENGINE.runKernel(o.Transpose,{x:e},c),t=a.ENGINE.runKernel(o.Transpose,{x:t},c),r&&(t=(0,d.neg)(t)),(0,u.complex)(e,t)}):a.ENGINE.runKernel(o.Transpose,{x:s},c)}})}),o("1d8KH",function(t,r){e(t.exports,"imag",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({imag_:function(e){let t=(0,o.convertToTensor)(e,"input","imag");return a.ENGINE.runKernel(n.Imag,{input:t})}})}),o("15cGp",function(t,r){e(t.exports,"neg",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({neg_:function(e){let t=(0,o.convertToTensor)(e,"x","neg");return a.ENGINE.runKernel(n.Neg,{x:t})}})}),o("b7x1G",function(t,r){e(t.exports,"real",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({real_:function(e){let t=(0,o.convertToTensor)(e,"input","real");return a.ENGINE.runKernel(n.Real,{input:t})}})}),o("cpgue",function(t,r){let a;e(t.exports,"fromPixelsAsync",()=>g),e(t.exports,"toPixels",()=>y),e(t.exports,"draw",()=>b),e(t.exports,"fromPixels",()=>v);var n=s("38WwN"),o=s("ibsdL"),i=s("hl418"),l=s("eky5o"),u=s("9jCh7"),p=s("5xBLk"),d=s("inFmq"),c=s("jqSCG"),h=s("6Fl9Q");let f=!1;function m(e,t=3){let r,s;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let o=!1,u=!1,p=!1,d=!1,c=!1,f=!1;if(e.data instanceof Uint8Array)o=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)u=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)p=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)d=!0;else if(null!=e.getContext)c=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)f=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=(0,l.getKernel)(i.FromPixels,n.ENGINE.backendName))return n.ENGINE.runKernel(i.FromPixels,{pixels:e},{numChannels:t});let[g,x]=p?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(c)r=e.getContext("2d").getImageData(0,0,g,x).data;else if(u||o)r=e.data;else if(d||p||f){if(null==a)if("undefined"==typeof document)if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)a=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else a=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});a.canvas.width=g,a.canvas.height=x,a.drawImage(e,0,0,g,x),r=a.getImageData(0,0,g,x).data}if(4===t)s=new Int32Array(r);else{let e=g*x;s=new Int32Array(e*t);for(let a=0;a<e;a++)for(let e=0;e<t;++e)s[a*t+e]=r[4*a+e]}let y=[x,g,t];return(0,h.tensor3d)(s,y,"int32")}async function g(e,t=3){var r;let a=null;if((0,o.env)().getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(r=e)&&0!==r.width&&0!==r.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}a=null!=t&&t.width===e.width&&t.height===e.height?t:e}else a=e;return m(a,t)}function x(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function y(e,t){let r=(0,p.convertToTensor)(e,"img","toPixels");if(!(e instanceof u.Tensor)){let e=r;r=(0,d.cast)(e,"int32"),e.dispose()}x(r);let[a,s]=r.shape.slice(0,2),o=2===r.rank?1:r.shape[2],c=await r.data(),h="float32"===r.dtype?255:1,m=new Uint8ClampedArray(s*a*4);for(let e=0;e<a*s;++e){let t=[0,0,0,255];for(let a=0;a<o;a++){let n=c[e*o+a];if("float32"===r.dtype){if(n<0||n>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${n}.`)}else if("int32"===r.dtype&&(n<0||n>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${n}.`);1===o?(t[0]=n*h,t[1]=n*h,t[2]=n*h):t[a]=n*h}let a=4*e;m[a+0]=Math.round(t[0]),m[a+1]=Math.round(t[1]),m[a+2]=Math.round(t[2]),m[a+3]=Math.round(t[3])}if(null!=t){f||null!=(0,l.getKernel)(i.Draw,n.ENGINE.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),f=!0),t.width=s,t.height=a;let e=t.getContext("2d"),r=new ImageData(m,s,a);e.putImageData(r,0,0)}return r!==e&&r.dispose(),m}function b(e,t,r){let a=(0,p.convertToTensor)(e,"img","draw");if(!(e instanceof u.Tensor)){let e=a;a=(0,d.cast)(e,"int32"),e.dispose()}x(a);var s=null==r?void 0:r.imageOptions;let o=(null==s?void 0:s.alpha)||1;if(o>1||o<0)throw Error(`Alpha value ${o} is suppoed to be in range [0 - 1].`);let l={image:a};n.ENGINE.runKernel(i.Draw,l,{canvas:t,options:r})}let v=(0,c.op)({fromPixels_:m})}),o("6Fl9Q",function(t,r){e(t.exports,"tensor3d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t,r){if((0,n.assertNonNull)(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let s=(0,a.inferShape)(e,r);if(3!==s.length&&1!==s.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,o.makeTensor)(e,t,s,r)}}),o("4EvS9",function(t,r){e(t.exports,"prepareAndValidate",()=>n);var a=s("8cCb2");function n(e,t){let r=e.shape.length,n=t.shape.length;if(r<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${r}.`);if(n<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>r)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${r}`);if(0===(0,a.sizeFromShape)(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let s=t.shape,o=s[s.length-1],i=1;for(let e=0;e<s.length-1;++e)i*=s[e];let l=e.shape,u=s.slice();u.pop();let p=1;for(let e=o;e<r;++e)p*=l[e],u.push(l[e]);let d=[...(0,a.computeStrides)(e.shape).map(e=>e/p),1].slice(0,o);return[u,i,p,d]}}),o("7wQGW",function(t,r){e(t.exports,"validateUpdateShape",()=>n),e(t.exports,"validateInput",()=>o),e(t.exports,"calculateShapes",()=>i);var a=s("8cCb2");function n(e,t,r){let a=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${n}.`;if(r.rank<n)throw Error(s+` update.rank < ${n}. `);if(e.length<a+(r.rank-n))throw Error(s+` Output shape length < ${a+(r.rank-n)}`);if(r.rank!==n+e.length-a)throw Error(s+` update.rank != ${n+e.length-a}`);for(let e=0;e<n;++e)if(r.shape[e]!==t.shape[e])throw Error(s+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<r.rank-n;++t)if(r.shape[t+n]!==e[t+a])throw Error(s+` updates.shape[${t+n}] (${r.shape[t+n]}) != shape[${t+n}] (${e[t+n]})`)}function o(e,t,r){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(0===r.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}n(r,t,e)}function i(e,t,r){let n=t.shape.length,s=n>1?t.shape[n-1]:1,o=r.length,i=1;for(let e=s;e<o;++e)i*=r[e];let l=s<1?1:s,u=(0,a.sizeFromShape)(t.shape)/l,p=[...(0,a.computeStrides)(r.slice(0,s)),1];return{sliceRank:s,numUpdates:u,sliceSize:i,strides:p,outputSize:(0,a.sizeFromShape)(r)}}}),o("bszZn",function(t,r){e(t.exports,"assertParamsValid",()=>n),e(t.exports,"maskToAxes",()=>o),e(t.exports,"computeOutShape",()=>i),e(t.exports,"stridesWithElidedDims",()=>l),e(t.exports,"getNormalizedAxes",()=>d),e(t.exports,"startIndicesWithElidedDims",()=>c),e(t.exports,"stopIndicesWithElidedDims",()=>h),e(t.exports,"startForAxis",()=>m),e(t.exports,"stopForAxis",()=>g),e(t.exports,"stridesForAxis",()=>f),e(t.exports,"isSliceContinous",()=>x),e(t.exports,"computeFlatOffset",()=>y),e(t.exports,"parseSliceParams",()=>b),e(t.exports,"sliceInfo",()=>v);var a=s("8cCb2");function n(e,t,r){let n=e.shape.length;a.assert(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),a.assert(n===r.length,()=>`Error in slice${n}D: Length of size ${r} must match the rank of the array (${n}).`);for(let s=0;s<n;++s)a.assert(t[s]+r[s]<=e.shape[s],()=>`Error in slice${n}D: begin[${s}] + size[${s}] (${t[s]+r[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function o(e){let t=[],r=0;for(;e>0;)1&e&&t.push(r),e/=2,r++;return t}function i(e,t,r){let a=[];for(let n=0;n<e.length;n++)a[n]=Math.ceil((t[n]-e[n])/r[n]);return a}function l(e,t,r,a){let n=[...e];for(let e=n.length;e<a.length;e++)n.push(1);for(let e=0;e<r;e++)0===e?n[t]=1:(n.splice(t,0,1),n.pop());return n}function u(e,t,r){return r<=e?r:r-(t-1)}function p(e,t){let r=[];for(let a=0;a<e;a++)r.push(t+a);return r}function d(e,t,r,a,n,s,o,i,u){let p=e.length,d=Array(p),x=Array(p),y=Array(p);if(t.length&&r>0){let u=t[0],p=r+1;d=c(o,u,p,a,e),x=h(i,u,p,n,e),y=l(s,u,p,e)}else for(let t=0;t<p;t++)d[t]=m(o,a,s,e,t,u),x[t]=g(i,n,s,e,t,u),y[t]=f(s,t,u);return{begin:d,end:x,strides:y}}function c(e,t,r,a,n){let s=[...n],o=p(r,t);for(let n=0;n<s.length;n++)if(o.indexOf(n)>-1)s[n]=0;else{var i,l,u;let o=(i=t,l=r,(u=n)<=i?u:u-(l-1)),p=a[o];e&1<<o&&(p=0),s[n]=p}return s}function h(e,t,r,n,s){let o=[...s],i=p(r,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{var l,u,d;let s=(l=t,u=r,(d=a)<=l?d:d-(u-1)),i=n[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let e=0;e<o.length;e++){let t=s[e];o[e]<0&&(o[e]+=t),o[e]=a.clamp(0,o[e],s[e])}return o}function f(e,t,r){let a=e[t];return(r&1<<t||null==a)&&(a=1),a}function m(e,t,r,n,s,o){let i=t[s],l=r[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let u=n[s];return i<0&&(i+=u),i=a.clamp(0,i,u-1)}function g(e,t,r,n,s,o){let i=t[s],l=r[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let u=n[s];return i<0&&(i+=u),i=l>0?a.clamp(0,i,u):a.clamp(-1,i,u-1)}function x(e,t,r){let a=r.length;for(let e=0;e<r.length;e++)if(r[e]>1){a=e;break}for(let n=a+1;n<r.length;n++)if(t[n]>0||r[n]!==e[n])return!1;return!0}function y(e,t){let r=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)r+=e[a]*t[a];return r}function b(e,t,r){let n,s,o=e.shape.length;return(n="number"==typeof t?[t,...Array(o-1).fill(0)]:t.length<o?t.concat(Array(o-t.length).fill(0)):t.slice()).forEach(e=>{a.assert(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=(s=null==r?Array(o).fill(-1):"number"==typeof r?[r,...Array(o-1).fill(-1)]:r.length<o?r.concat(Array(o-r.length).fill(-1)):r).map((t,r)=>t>=0?t:(a.assert(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${r}.`),e.shape[r]-n[r])),[n,s]}function v(e,t,r,a,n,s,o,i,l){let u;if(null==a?(u=Array(t.length)).fill(1):u=a,null!=o&&(o&o-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");let p=!1,d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:u.slice(),beginMask:n,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)p&&(1<<e&i)!=0&&d.numAddAxisAfterEllipsis++,1<<e&o&&(p=!0);!p&&(d.ellipsisMask|=1<<d.dims,d.dims++);let c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};var h=d,f=c;f.beginMask=0,f.endMask=0,f.shrinkAxisMask=0;let m=0;f.beginValid=null!=h.begin,f.endValid=null!=h.end,f.begin=Array(f.dims),f.end=Array(f.dims),f.strides=Array(f.dims),f.finalShapeGatherIndices=[],f.finalShapeGatherIndicesSparse=[],f.inputShapeGatherIndicesSparse=Array(f.dims);for(let e=0;e<h.dims;e++)if(1<<e&h.ellipsisMask){let t=Math.min(f.dims-(h.dims-e)+1+h.numAddAxisAfterEllipsis,f.dims);for(;m<t;m++)f.begin[m]=0,f.end[m]=0,f.strides[m]=1,f.beginMask|=1<<m,f.endMask|=1<<m,f.finalShapeGatherIndices.push(m),f.finalShapeGatherIndicesSparse.push(-1),f.inputShapeGatherIndicesSparse[m]=e}else if(1<<e&h.newAxisMask)f.finalShapeGatherIndices.push(-2),f.finalShapeGatherIndicesSparse.push(-1);else{if(m===f.begin.length)throw Error(`Index out of range using input dim ${m}; input has only ${f.dims} dims, ${f.begin.length}.`);null!=h.begin&&(f.begin[m]=h.begin[e]),null!=h.end&&(f.end[m]=h.end[e]),f.strides[m]=h.strides[e],h.beginMask&1<<e&&(f.beginMask|=1<<m),h.endMask&1<<e&&(f.endMask|=1<<m),h.shrinkAxisMask&1<<e?(f.finalShapeGatherIndices.push(-1),f.finalShapeGatherIndicesSparse.push(-1),f.shrinkAxisMask|=1<<m):(f.finalShapeGatherIndices.push(m),f.finalShapeGatherIndicesSparse.push(e)),f.inputShapeGatherIndicesSparse[m]=e,m++}let g=!0,x=!0,y=!0,b=[],v=[];for(let t=0;t<e.length;++t){let r;if(0===c.strides[t])throw Error(`strides[${t}] must be non-zero`);let a=!!(c.shrinkAxisMask&1<<t),n=e[t];if(-1===n){b.push(a?1:-1);continue}let s=[c.beginMask&1<<t,c.endMask&1<<t],o=[c.strides[t]>0?0:-1,c.strides[t]>0?n:n-1];if(a&&c.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===c.strides[t];let i=!!(c.beginMask&1<<t&&c.endMask&1<<t);if(c.beginValid&&c.endValid){if(a){let e=c.begin[t]<0?n+c.begin[t]:c.begin[t];if(c.begin[t]=e,c.end[t]=c.begin[t]+1,e<0||e>=n)throw Error(`slice index ${c.begin[t]} of dimension ${t} out of bounds.`)}else c.begin[t]=k(c.begin[t],0,c.strides[t],n,s,o),c.end[t]=k(c.end[t],1,c.strides[t],n,s,o);let e=1===c.strides[t]&&0===c.begin[t]&&c.end[t]===n;g=g&&e,x=x&&(0===t&&1===c.strides[t]||e)}else g=g&&1===c.strides[t]&&i,x=x&&(0===t&&1===c.strides[t]||i);let l=!1;if(c.beginValid&&c.endValid?(r=c.end[t]-c.begin[t],l=!0):a?(r=1,l=!0):i&&n>=0&&(r=c.strides[t]<0?-n:n,l=!0),l){let e;e=0===r||r<0!=c.strides[t]<0?0:Math.trunc(r/c.strides[t])+ +(r%c.strides[t]!=0),b.push(e)}else b.push(-1)}for(let e=0;e<c.finalShapeGatherIndices.length;++e){let t=c.finalShapeGatherIndices[e];t>=0?v.push(b[t]):-2===t&&v.push(1)}return{finalShapeSparse:v.filter((e,t)=>-2!==c.finalShapeGatherIndices[t]),finalShape:v,isIdentity:g,sliceDim0:x,isSimpleSlice:y,begin:c.begin,end:c.end,strides:c.strides}}function k(e,t,r,a,n,s){if(n[t])return r>0?s[t]:s[t+1&1];{let t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}}),o("6thPa",function(t,r){e(t.exports,"TEST_EPSILON_FLOAT16",()=>l),e(t.exports,"expectArraysClose",()=>u),e(t.exports,"testEpsilon",()=>p),e(t.exports,"expectPromiseToFail",()=>c),e(t.exports,"expectArraysEqual",()=>h),e(t.exports,"expectNumbersClose",()=>f),e(t.exports,"expectValuesInRange",()=>g),e(t.exports,"expectArrayBuffersEqual",()=>x),e(t.exports,"encodeStrings",()=>function e(t){for(let r=0;r<t.length;r++){let a=t[r];Array.isArray(a)?e(a):t[r]=(0,i.encodeString)(a)}return t}),e(t.exports,"createVideoElement",()=>y),e(t.exports,"play",()=>b);var a=s("38WwN"),n=s("5xBLk"),o=s("8cCb2"),i=s("jjNRA");let l=.1;function u(e,t,r){return null==r&&(r=p()),d(e,t,(e,t)=>m(e,t,r))}function p(){return 32===a.ENGINE.backend.floatPrecision()?.001:l}function d(e,t,r){let a=!0;if(((0,i.isTypedArray)(e)||(0,i.isTypedArray)(t))&&(a=!1),(0,i.isTypedArray)(e)&&(0,i.isTypedArray)(t)&&(a=!0),a){let r=e.constructor.name,a=t.constructor.name;if(r!==a)throw Error(`Arrays are of different type. Actual: ${r}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){let r=(0,n.inferShape)(e),a=(0,n.inferShape)(t);if(!(0,o.arraysEqual)(r,a))throw Error(`Arrays have different shapes. Actual: [${r}]. Expected: [${a}]`)}let s=(0,i.isTypedArray)(e)?e:(0,i.flatten)(e),l=(0,i.isTypedArray)(t)?t:(0,i.flatten)(t);if(s.length!==l.length)throw Error(`Arrays have different lengths actual: ${s.length} vs expected: ${l.length}.
Actual:   ${s}.
Expected: ${l}.`);for(let e=0;e<l.length;++e){let t=s[e],a=l[e];if(!r(t,a))throw Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${a}.
Actual:   ${s}.
Expected: ${l}.`)}"undefined"!=typeof expect&&expect().nothing()}function c(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function h(e,t){let r="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,o.isString)(e)||(0,o.isString)(e[0])||(0,o.isString)(t)||(0,o.isString)(t[0])?d(e,r,(e,t)=>e==t):d(e,t,(e,t)=>m(e,t,0))}function f(e,t,r){if(null==r&&(r=p()),!m(e,t,r))throw Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function m(e,t,r){return!(isFinite(e)||isFinite(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>r)}function g(e,t,r){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>r)throw Error(`Value out of range:${e[a]} low: ${t}, high: ${r}`)}function x(e,t){let r=new Float32Array(e),a=new Float32Array(t);if(r.length!==a.length)throw Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${r.length}`);for(let e=0;e<a.length;e++)if(r[e]!==a[e])throw Error(`Expected ArrayBuffer value at ${e} to be ${a[e]} but got ${r[e]} instead`)}function y(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",r=>e(t)),t.load()})}async function b(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}}),o("kWDmn",function(t,r){e(t.exports,"version",()=>a);let a="4.22.0"}),o("bO4Xu",function(t,r){e(t.exports,"OptimizerConstructors",()=>d);var a=s("Haryc"),n=s("7740A"),o=s("cdIoP"),i=s("9sl63"),l=s("7GJGN"),u=s("7qglv"),p=s("hR6PP");class d{static sgd(e){return new(0,p.SGDOptimizer)(e)}static momentum(e,t,r=!1){return new(0,l.MomentumOptimizer)(e,t,r)}static rmsprop(e,t=.9,r=0,a=null,n=!1){return new(0,u.RMSPropOptimizer)(e,t,r,a,n)}static adam(e=.001,t=.9,r=.999,a=null){return new(0,o.AdamOptimizer)(e,t,r,a)}static adadelta(e=.001,t=.95,r=null){return new(0,a.AdadeltaOptimizer)(e,t,r)}static adamax(e=.002,t=.9,r=.999,a=null,n=0){return new(0,i.AdamaxOptimizer)(e,t,r,a,n)}static adagrad(e,t=.1){return new(0,n.AdagradOptimizer)(e,t)}}}),o("aosGd",function(r,a){e(r.exports,"spectral",()=>es),e(r.exports,"signal",()=>eo),e(r.exports,"image",()=>ei),e(r.exports,"linalg",()=>el),e(r.exports,"losses",()=>eu),e(r.exports,"sparse",()=>ep),e(r.exports,"string",()=>ed),e(r.exports,"abs",()=>s("7j49I").abs),e(r.exports,"acos",()=>s("lhgWX").acos),e(r.exports,"acosh",()=>s("c0yr6").acosh),e(r.exports,"add",()=>s("hgacW").add),e(r.exports,"addN",()=>s("rRJGt").addN),e(r.exports,"all",()=>s("baxp3").all),e(r.exports,"any",()=>s("3cXYO").any),e(r.exports,"argMax",()=>s("jctS7").argMax),e(r.exports,"argMin",()=>s("hNrdr").argMin),e(r.exports,"asin",()=>s("8ZwsA").asin),e(r.exports,"asinh",()=>s("9a9km").asinh),e(r.exports,"atan",()=>s("PYQvk").atan),e(r.exports,"atan2",()=>s("8ikBQ").atan2),e(r.exports,"atanh",()=>s("5vfVv").atanh),e(r.exports,"avgPool",()=>s("j4oHC").avgPool),e(r.exports,"avgPool3d",()=>s("ku2lx").avgPool3d),e(r.exports,"basicLSTMCell",()=>s("eHiMt").basicLSTMCell),e(r.exports,"batchToSpaceND",()=>s("31sZ7").batchToSpaceND),e(r.exports,"batchNorm",()=>s("5ULLz").batchNorm),e(r.exports,"batchNorm2d",()=>s("kKS8R").batchNorm2d),e(r.exports,"batchNorm3d",()=>s("3KWPF").batchNorm3d),e(r.exports,"batchNorm4d",()=>s("34sL5").batchNorm4d),e(r.exports,"bincount",()=>s("f3UMy").bincount),e(r.exports,"bitwiseAnd",()=>s("dmptO").bitwiseAnd),e(r.exports,"broadcastArgs",()=>s("k4fG6").broadcastArgs),e(r.exports,"broadcastTo",()=>s("aeB3Z").broadcastTo),e(r.exports,"buffer",()=>s("iG87S").buffer),e(r.exports,"cast",()=>s("inFmq").cast),e(r.exports,"ceil",()=>s("jDrkY").ceil),e(r.exports,"clipByValue",()=>s("cOWuO").clipByValue),e(r.exports,"clone",()=>s("5TuCW").clone),e(r.exports,"complex",()=>s("20oDZ").complex),e(r.exports,"concat",()=>s("iTu6j").concat),e(r.exports,"concat1d",()=>s("4TU82").concat1d),e(r.exports,"concat2d",()=>s("7PZdE").concat2d),e(r.exports,"concat3d",()=>s("ljqPW").concat3d),e(r.exports,"concat4d",()=>s("9Grxx").concat4d),e(r.exports,"conv1d",()=>s("ebPOp").conv1d),e(r.exports,"conv2d",()=>s("5Nkm1").conv2d),e(r.exports,"conv2dTranspose",()=>s("5rn1J").conv2dTranspose),e(r.exports,"conv3d",()=>s("kj7tM").conv3d),e(r.exports,"conv3dTranspose",()=>s("7Zgyq").conv3dTranspose),e(r.exports,"cos",()=>s("3BU7G").cos),e(r.exports,"cosh",()=>s("bTdqT").cosh),e(r.exports,"cumprod",()=>s("bhhSS").cumprod),e(r.exports,"cumsum",()=>s("7lqwF").cumsum),e(r.exports,"denseBincount",()=>s("8maH5").denseBincount),e(r.exports,"depthToSpace",()=>s("lIVEL").depthToSpace),e(r.exports,"depthwiseConv2d",()=>s("182Rc").depthwiseConv2d),e(r.exports,"diag",()=>s("4VHSw").diag),e(r.exports,"dilation2d",()=>s("leKzP").dilation2d),e(r.exports,"div",()=>s("1QPqB").div),e(r.exports,"divNoNan",()=>s("3pBq5").divNoNan),e(r.exports,"dot",()=>s("67T3W").dot),e(r.exports,"einsum",()=>s("1mzpU").einsum),e(r.exports,"elu",()=>s("7UQTl").elu),e(r.exports,"ensureShape",()=>s("8jXAt").ensureShape),e(r.exports,"equal",()=>s("7R9HC").equal),e(r.exports,"erf",()=>s("3q8h0").erf),e(r.exports,"euclideanNorm",()=>s("4PmMp").euclideanNorm),e(r.exports,"exp",()=>s("2PcQK").exp),e(r.exports,"expandDims",()=>s("iPDWZ").expandDims),e(r.exports,"expm1",()=>s("cUuFo").expm1),e(r.exports,"eye",()=>s("9gIZb").eye),e(r.exports,"fill",()=>s("gYive").fill),e(r.exports,"floor",()=>s("4ZUCz").floor),e(r.exports,"floorDiv",()=>s("6a2Ft").floorDiv),e(r.exports,"gather",()=>s("3qUjU").gather),e(r.exports,"greater",()=>s("bRRKf").greater),e(r.exports,"greaterEqual",()=>s("l0Zxl").greaterEqual),e(r.exports,"imag",()=>s("1d8KH").imag),e(r.exports,"isFinite",()=>s("eaZNC").isFinite),e(r.exports,"isInf",()=>s("ahjR1").isInf),e(r.exports,"isNaN",()=>s("5FmUe").isNaN),e(r.exports,"leakyRelu",()=>s("3XskU").leakyRelu),e(r.exports,"less",()=>s("jTDVJ").less),e(r.exports,"lessEqual",()=>s("7LQ38").lessEqual),e(r.exports,"linspace",()=>s("9ntOC").linspace),e(r.exports,"localResponseNormalization",()=>s("k8D3u").localResponseNormalization),e(r.exports,"log",()=>s("dcoCo").log),e(r.exports,"log1p",()=>s("5QUXI").log1p),e(r.exports,"logSigmoid",()=>s("7hYeW").logSigmoid),e(r.exports,"logSoftmax",()=>s("2NPdY").logSoftmax),e(r.exports,"logSumExp",()=>s("9dGIC").logSumExp),e(r.exports,"logicalAnd",()=>s("kg1Wp").logicalAnd),e(r.exports,"logicalNot",()=>s("7NVSX").logicalNot),e(r.exports,"logicalOr",()=>s("iok2K").logicalOr),e(r.exports,"logicalXor",()=>s("iIobM").logicalXor),e(r.exports,"lowerBound",()=>s("jAFVi").lowerBound),e(r.exports,"matMul",()=>s("aUFou").matMul),e(r.exports,"max",()=>s("05cMR").max),e(r.exports,"maxPool",()=>s("gscJF").maxPool),e(r.exports,"maxPool3d",()=>s("gF4tm").maxPool3d),e(r.exports,"maxPoolWithArgmax",()=>s("9K0B1").maxPoolWithArgmax),e(r.exports,"maximum",()=>s("g5Jt1").maximum),e(r.exports,"mean",()=>s("67GCc").mean),e(r.exports,"meshgrid",()=>s("e6A1c").meshgrid),e(r.exports,"min",()=>s("fySTI").min),e(r.exports,"minimum",()=>s("6V8xR").minimum),e(r.exports,"mirrorPad",()=>s("ejlRR").mirrorPad),e(r.exports,"mod",()=>s("jR4my").mod),e(r.exports,"moments",()=>s("jV1KY").moments),e(r.exports,"mul",()=>s("jZc0w").mul),e(r.exports,"multiRNNCell",()=>s("culYm").multiRNNCell),e(r.exports,"multinomial",()=>s("b2OB7").multinomial),e(r.exports,"neg",()=>s("15cGp").neg),e(r.exports,"notEqual",()=>s("8WSnu").notEqual),e(r.exports,"oneHot",()=>s("i3U4j").oneHot),e(r.exports,"ones",()=>s("fOBRA").ones),e(r.exports,"onesLike",()=>s("67iid").onesLike),e(r.exports,"outerProduct",()=>s("8lsKt").outerProduct),e(r.exports,"pad",()=>s("fSZF6").pad),e(r.exports,"pad1d",()=>s("d3x5E").pad1d),e(r.exports,"pad2d",()=>s("lbRCf").pad2d),e(r.exports,"pad3d",()=>s("kZSbJ").pad3d),e(r.exports,"pad4d",()=>s("ghY1H").pad4d),e(r.exports,"pool",()=>s("9PaVS").pool),e(r.exports,"pow",()=>s("ad1of").pow),e(r.exports,"prelu",()=>s("a3pvF").prelu),e(r.exports,"print",()=>s("bSp5U").print),e(r.exports,"prod",()=>s("bWQC3").prod),e(r.exports,"raggedGather",()=>s("3MjiG").raggedGather),e(r.exports,"raggedRange",()=>s("6df7Q").raggedRange),e(r.exports,"raggedTensorToTensor",()=>s("hRiiN").raggedTensorToTensor),e(r.exports,"rand",()=>s("bTXL0").rand),e(r.exports,"randomGamma",()=>s("SB4J3").randomGamma),e(r.exports,"randomNormal",()=>s("h2Vnz").randomNormal),e(r.exports,"randomStandardNormal",()=>s("kVqJN").randomStandardNormal),e(r.exports,"randomUniform",()=>s("j8sic").randomUniform),e(r.exports,"randomUniformInt",()=>s("edlzT").randomUniformInt),e(r.exports,"range",()=>s("80Ety").range),e(r.exports,"real",()=>s("b7x1G").real),e(r.exports,"reciprocal",()=>s("3aqJ6").reciprocal),e(r.exports,"relu",()=>s("8wbQq").relu),e(r.exports,"relu6",()=>s("fvNYr").relu6),e(r.exports,"reshape",()=>s("4sqA7").reshape),e(r.exports,"reverse",()=>s("6act6").reverse),e(r.exports,"reverse1d",()=>s("2KcE1").reverse1d),e(r.exports,"reverse2d",()=>s("8EvRg").reverse2d),e(r.exports,"reverse3d",()=>s("c9r0k").reverse3d),e(r.exports,"reverse4d",()=>s("bFrHw").reverse4d),e(r.exports,"round",()=>s("9YKoa").round),e(r.exports,"rsqrt",()=>s("5pj7R").rsqrt),e(r.exports,"scalar",()=>s("3xp7o").scalar),e(r.exports,"selu",()=>s("b636r").selu),e(r.exports,"separableConv2d",()=>s("8uLn4").separableConv2d),e(r.exports,"setdiff1dAsync",()=>s("d05b8").setdiff1dAsync),e(r.exports,"sigmoid",()=>s("jvtSq").sigmoid),e(r.exports,"sign",()=>s("3zBCT").sign),e(r.exports,"sin",()=>s("4xqM7").sin),e(r.exports,"sinh",()=>s("fAOzm").sinh),e(r.exports,"slice",()=>s("79KOG").slice),e(r.exports,"slice1d",()=>s("5vfHb").slice1d),e(r.exports,"slice2d",()=>s("gKBEV").slice2d),e(r.exports,"slice3d",()=>s("22oMq").slice3d),e(r.exports,"slice4d",()=>s("8hEpb").slice4d),e(r.exports,"softmax",()=>s("dnEu5").softmax),e(r.exports,"softplus",()=>s("4Udpd").softplus),e(r.exports,"spaceToBatchND",()=>s("ePI8Y").spaceToBatchND),e(r.exports,"fft",()=>s("1Lg9u").fft),e(r.exports,"ifft",()=>s("3l9Cr").ifft),e(r.exports,"irfft",()=>s("hrsi6").irfft),e(r.exports,"rfft",()=>s("cafDa").rfft),e(r.exports,"split",()=>s("9fmAX").split),e(r.exports,"sqrt",()=>s("iAb3z").sqrt),e(r.exports,"square",()=>s("iDd8d").square),e(r.exports,"squaredDifference",()=>s("ay2Nw").squaredDifference),e(r.exports,"squeeze",()=>s("kX8Hd").squeeze),e(r.exports,"stack",()=>s("8BrLX").stack),e(r.exports,"step",()=>s("lWdx1").step),e(r.exports,"stridedSlice",()=>s("dqRnt").stridedSlice),e(r.exports,"sub",()=>s("7kouu").sub),e(r.exports,"sum",()=>s("9NgTx").sum),e(r.exports,"tan",()=>s("l8Hok").tan),e(r.exports,"tanh",()=>s("etcYL").tanh),e(r.exports,"tensor",()=>s("erbmM").tensor),e(r.exports,"tensor1d",()=>s("lalFM").tensor1d),e(r.exports,"tensor2d",()=>s("gmMlv").tensor2d),e(r.exports,"tensor3d",()=>s("6Fl9Q").tensor3d),e(r.exports,"tensor4d",()=>s("6BSQ6").tensor4d),e(r.exports,"tensor5d",()=>s("fjd6b").tensor5d),e(r.exports,"tensor6d",()=>s("gCuDf").tensor6d),e(r.exports,"tensorScatterUpdate",()=>s("4om7p").tensorScatterUpdate),e(r.exports,"tile",()=>s("61ay4").tile),e(r.exports,"topk",()=>s("cRAvI").topk),e(r.exports,"truncatedNormal",()=>s("dE1HO").truncatedNormal),e(r.exports,"unique",()=>s("aEpp6").unique),e(r.exports,"unsortedSegmentSum",()=>s("djGEF").unsortedSegmentSum),e(r.exports,"unstack",()=>s("gBOC6").unstack),e(r.exports,"upperBound",()=>s("igCyu").upperBound),e(r.exports,"variable",()=>s("eoViB").variable),e(r.exports,"where",()=>s("l2P14").where),e(r.exports,"whereAsync",()=>s("5t2or").whereAsync),e(r.exports,"zeros",()=>s("hxi4c").zeros),e(r.exports,"zerosLike",()=>s("8EjnK").zerosLike),e(r.exports,"op",()=>s("jqSCG").op),e(r.exports,"OP_SCOPE_SUFFIX",()=>s("jqSCG").OP_SCOPE_SUFFIX),e(r.exports,"fused",()=>s("jDZRN")),s("7j49I"),s("lhgWX"),s("c0yr6"),s("hgacW"),s("rRJGt"),s("baxp3"),s("3cXYO"),s("jctS7"),s("hNrdr"),s("8ZwsA"),s("9a9km"),s("PYQvk"),s("8ikBQ"),s("5vfVv"),s("j4oHC"),s("ku2lx"),s("eHiMt"),s("31sZ7"),s("5ULLz"),s("kKS8R"),s("3KWPF"),s("34sL5"),s("f3UMy"),s("dmptO"),s("k4fG6"),s("aeB3Z"),s("iG87S"),s("inFmq"),s("jDrkY"),s("cOWuO"),s("5TuCW"),s("20oDZ"),s("iTu6j"),s("4TU82"),s("7PZdE"),s("ljqPW"),s("9Grxx"),s("ebPOp"),s("5Nkm1"),s("5rn1J"),s("kj7tM"),s("7Zgyq"),s("3BU7G"),s("bTdqT"),s("bhhSS"),s("7lqwF"),s("8maH5"),s("lIVEL"),s("182Rc"),s("4VHSw"),s("leKzP"),s("1QPqB"),s("3pBq5"),s("67T3W"),s("1mzpU"),s("7UQTl"),s("8jXAt"),s("7R9HC"),s("3q8h0"),s("4PmMp"),s("2PcQK"),s("iPDWZ"),s("cUuFo"),s("9gIZb"),s("gYive"),s("4ZUCz"),s("6a2Ft"),s("3qUjU"),s("bRRKf"),s("l0Zxl"),s("1d8KH"),s("eaZNC"),s("ahjR1"),s("5FmUe"),s("3XskU"),s("jTDVJ"),s("7LQ38"),s("9ntOC"),s("k8D3u"),s("dcoCo"),s("5QUXI"),s("7hYeW"),s("2NPdY"),s("9dGIC"),s("kg1Wp"),s("7NVSX"),s("iok2K"),s("iIobM"),s("jAFVi"),s("aUFou"),s("05cMR"),s("gscJF"),s("gF4tm"),s("9K0B1"),s("g5Jt1"),s("67GCc"),s("e6A1c"),s("fySTI"),s("6V8xR"),s("ejlRR"),s("jR4my"),s("jV1KY"),s("jZc0w"),s("culYm"),s("b2OB7"),s("15cGp"),s("8WSnu"),s("i3U4j"),s("fOBRA"),s("67iid"),s("8lsKt"),s("fSZF6"),s("d3x5E"),s("lbRCf"),s("kZSbJ"),s("ghY1H"),s("9PaVS"),s("ad1of"),s("a3pvF"),s("bSp5U"),s("bWQC3"),s("3MjiG"),s("6df7Q"),s("hRiiN"),s("bTXL0"),s("SB4J3"),s("h2Vnz"),s("kVqJN"),s("j8sic"),s("edlzT"),s("80Ety"),s("b7x1G"),s("3aqJ6"),s("8wbQq"),s("fvNYr"),s("4sqA7"),s("6act6"),s("2KcE1"),s("8EvRg"),s("c9r0k"),s("bFrHw"),s("9YKoa"),s("5pj7R"),s("3xp7o"),s("b636r"),s("8uLn4"),s("d05b8"),s("jvtSq"),s("3zBCT"),s("4xqM7"),s("fAOzm"),s("79KOG"),s("5vfHb"),s("gKBEV"),s("22oMq"),s("8hEpb"),s("dnEu5"),s("4Udpd"),s("ePI8Y");var n=s("1Lg9u"),o=s("3l9Cr"),i=s("hrsi6"),l=s("cafDa");s("9fmAX"),s("iAb3z"),s("iDd8d"),s("ay2Nw"),s("kX8Hd"),s("8BrLX"),s("lWdx1"),s("dqRnt"),s("7kouu"),s("9NgTx"),s("l8Hok"),s("etcYL"),s("erbmM"),s("lalFM"),s("gmMlv"),s("6Fl9Q"),s("6BSQ6"),s("fjd6b"),s("gCuDf"),s("4om7p"),s("61ay4"),s("cRAvI"),s("dE1HO"),s("aEpp6"),s("djGEF"),s("gBOC6"),s("igCyu"),s("eoViB"),s("l2P14"),s("5t2or"),s("hxi4c"),s("8EjnK");var u=s("4xhB2"),p=s("aDHKy"),d=s("7k6dx"),c=s("gIiMY"),h=s("4wiJQ"),f=s("6PrVj"),m=s("kMXcY"),g=s("5FwF9"),x=s("5kLyC"),y=s("j5jow"),b=s("8mg8Q");s("jqSCG"),s("jDZRN");var v=s("dGKlF"),k=s("gicu0"),N=s("lLT0m"),C=s("hGoJt"),T=s("jLoMm"),S=s("jAPwM"),I=s("7xYxa"),w=s("iStMK"),E=s("gF4CQ"),A=s("3Dhm5"),R=s("ihqU7"),P=s("gxykK"),$=s("8357p"),F=s("gzUbZ"),B=s("bq0nG"),D=s("6zgXB"),M=s("ek5OW"),O=s("2uj2A"),L=s("53uSk"),_=s("kGYDg"),V=s("bI4CH"),G=s("ipM8K"),z=s("beFbS"),W=s("aQ3Nu"),U=s("315ft"),j=s("aqAKz"),q=s("2lNlw"),H=s("8Bzf4"),K=s("2Tkqe"),X=s("7tTB0"),Y=s("5FlUs"),Z=s("gXzaa"),Q=s("fMgdQ"),J=s("22SmX"),ee=s("6wGr9"),et=s("brFzl"),er=s("VUiwf"),ea=s("g7F6x"),en=s("bZL8f");let es={fft:n.fft,ifft:o.ifft,rfft:l.rfft,irfft:i.irfft},eo={hammingWindow:v.hammingWindow,hannWindow:k.hannWindow,frame:N.frame,stft:C.stft},ei={flipLeftRight:S.flipLeftRight,grayscaleToRGB:I.grayscaleToRGB,resizeNearestNeighbor:M.resizeNearestNeighbor,resizeBilinear:D.resizeBilinear,rgbToGrayscale:w.rgbToGrayscale,rotateWithOffset:E.rotateWithOffset,cropAndResize:T.cropAndResize,nonMaxSuppression:A.nonMaxSuppression,nonMaxSuppressionAsync:R.nonMaxSuppressionAsync,nonMaxSuppressionWithScore:P.nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync:$.nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded:F.nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync:B.nonMaxSuppressionPaddedAsync,threshold:O.threshold,transform:L.transform},el={bandPart:_.bandPart,gramSchmidt:V.gramSchmidt,qr:G.qr},eu={absoluteDifference:z.absoluteDifference,computeWeightedLoss:W.computeWeightedLoss,cosineDistance:U.cosineDistance,hingeLoss:j.hingeLoss,huberLoss:q.huberLoss,logLoss:H.logLoss,meanSquaredError:K.meanSquaredError,sigmoidCrossEntropy:X.sigmoidCrossEntropy,softmaxCrossEntropy:Y.softmaxCrossEntropy},ep={sparseFillEmptyRows:Z.sparseFillEmptyRows,sparseReshape:Q.sparseReshape,sparseSegmentMean:J.sparseSegmentMean,sparseSegmentSum:ee.sparseSegmentSum},ed={stringNGrams:et.stringNGrams,stringSplit:er.stringSplit,stringToHashBucketFast:ea.stringToHashBucketFast,staticRegexReplace:en.staticRegexReplace};t(r.exports,u),t(r.exports,p),t(r.exports,d),t(r.exports,c),t(r.exports,h),t(r.exports,f),t(r.exports,m),t(r.exports,g),t(r.exports,x),t(r.exports,y),t(r.exports,b)}),o("lhgWX",function(t,r){e(t.exports,"acos",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({acos_:function(e){let t=(0,o.convertToTensor)(e,"x","acos");return a.ENGINE.runKernel(n.Acos,{x:t})}})}),o("c0yr6",function(t,r){e(t.exports,"acosh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({acosh_:function(e){let t=(0,o.convertToTensor)(e,"x","acosh");return a.ENGINE.runKernel(n.Acosh,{x:t})}})}),o("rRJGt",function(t,r){e(t.exports,"addN",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({addN_:function(e){i.assert(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),i.assert(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>(0,o.convertToTensor)(e,`tensors${t}`,"addN")),r=t[0];return t.forEach(e=>{if(e.dtype!==r.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!i.arraysEqual(e.shape,r.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),a.ENGINE.runKernel(n.AddN,t)}})}),o("baxp3",function(t,r){e(t.exports,"all",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({all_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","all","bool");return a.ENGINE.runKernel(n.All,{x:s},{axis:t,keepDims:r})}})}),o("3cXYO",function(t,r){e(t.exports,"any",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({any_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","any","bool");return a.ENGINE.runKernel(n.Any,{x:s},{axis:t,keepDims:r})}})}),o("jctS7",function(t,r){e(t.exports,"argMax",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({argMax_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","argMax");return a.ENGINE.runKernel(n.ArgMax,{x:r},{axis:t})}})}),o("hNrdr",function(t,r){e(t.exports,"argMin",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({argMin_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","argMin");return a.ENGINE.runKernel(n.ArgMin,{x:r},{axis:t})}})}),o("8ZwsA",function(t,r){e(t.exports,"asin",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({asin_:function(e){let t=(0,o.convertToTensor)(e,"x","asin");return a.ENGINE.runKernel(n.Asin,{x:t})}})}),o("9a9km",function(t,r){e(t.exports,"asinh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({asinh_:function(e){let t=(0,o.convertToTensor)(e,"x","asinh");return a.ENGINE.runKernel(n.Asinh,{x:t})}})}),o("PYQvk",function(t,r){e(t.exports,"atan",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({atan_:function(e){let t=(0,o.convertToTensor)(e,"x","atan");return a.ENGINE.runKernel(n.Atan,{x:t})}})}),o("8ikBQ",function(t,r){e(t.exports,"atan2",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({atan2_:function(e,t){let r=(0,i.convertToTensor)(e,"a","atan2"),s=(0,i.convertToTensor)(t,"b","atan2");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Atan2,l)}})}),o("5vfVv",function(t,r){e(t.exports,"atanh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({atanh_:function(e){let t=(0,o.convertToTensor)(e,"x","atanh");return a.ENGINE.runKernel(n.Atanh,{x:t})}})}),o("j4oHC",function(t,r){e(t.exports,"avgPool",()=>c);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("inFmq"),u=s("frznq"),p=s("jqSCG"),d=s("4sqA7");let c=(0,p.op)({avgPool_:function(e,t,r,s,p){let c=(0,o.convertToTensor)(e,"x","avgPool","float32");i.assert(u.eitherStridesOrDilationsAreOne(r,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);let h=c,f=!1;3===c.rank&&(f=!0,h=(0,d.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),i.assert(4===h.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`),u.checkPadOnDimRoundingMode("avgPool",s,p);let m={x:h},g=a.ENGINE.runKernel(n.AvgPool,m,{filterSize:t,strides:r,pad:s,dimRoundingMode:p});return(g=(0,l.cast)(g,c.dtype),f)?(0,d.reshape)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})}),o("frznq",function(t,r){e(t.exports,"computeDilation2DInfo",()=>n),e(t.exports,"convertConv2DDataFormat",()=>y),e(t.exports,"computeConv2DInfo",()=>l),e(t.exports,"computePool2DInfo",()=>o),e(t.exports,"computePool3DInfo",()=>i),e(t.exports,"computeConv3DInfo",()=>u),e(t.exports,"computeDefaultPad",()=>p),e(t.exports,"tupleValuesAreOne",()=>m),e(t.exports,"eitherStridesOrDilationsAreOne",()=>g),e(t.exports,"stridesOrDilationsArePositive",()=>x),e(t.exports,"checkPadOnDimRoundingMode",()=>b);var a=s("8cCb2");function n(e,t,r,a,s="NHWC",o){let i=[...t,e[3]];return l(e,i,r,o,a,null,null,y(s))}function o(e,t,r,a,n,s,i="channelsLast"){let u,[p,c]=d(t);if("channelsLast"===i)u=[p,c,e[3],e[3]];else if("channelsFirst"===i)u=[p,c,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return l(e,u,r,a,n,s,!1,i)}function i(e,t,r,a,n,s,o="NDHWC"){let l,p,[d,h,f]=c(t);if("NDHWC"===o)p="channelsLast",l=[d,h,f,e[4],e[4]];else if("NCDHW"===o)p="channelsFirst",l=[d,h,f,e[1],e[1]];else throw Error(`Unknown dataFormat ${o}`);return u(e,l,r,a,n,!1,p,s)}function l(e,t,r,a,n,s,o=!1,i="channelsLast"){let u,[c,m,g,x]=[-1,-1,-1,-1];if("channelsLast"===i)[c,m,g,x]=e;else if("channelsFirst"===i)[c,x,m,g]=e;else throw Error(`Unknown dataFormat ${i}`);let[y,b,,v]=t,[k,N]=d(r),[C,T]=d(a),S=h(y,C),I=h(b,T),{padInfo:w,outHeight:E,outWidth:A}=function(e,t,r,a,n,s,o,i,l){let u,d,c;if("number"==typeof e){let n=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,type:n};let o=function(e,t,r,a,n){null==a&&(a=p(e,t,r));let s=e[0],o=e[1];return[f((s-t+2*a)/r+1,n),f((o-t+2*a)/r+1,n)]}([t,r],s,a,e,i);d=o[0],c=o[1]}else if("same"===e){let e=Math.max(0,((d=Math.ceil(t/a))-1)*a+s-t),i=Math.max(0,((c=Math.ceil(r/n))-1)*n+o-r),l=Math.floor(e/2),p=Math.floor(i/2);u={top:l,bottom:e-l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),c=Math.ceil((r-o+1)/n);else if("object"==typeof e){let p="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:h,left:m,right:g,type:0===p&&0===h&&0===m&&0===g?"VALID":"EXPLICIT"},d=f((t-s+p+h)/a+1,i),c=f((r-o+m+g)/n+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:d,outWidth:c}}(n,m,g,k,N,S,I,s,i),R=o?v*x:v;return"channelsFirst"===i?u=[c,R,E,A]:"channelsLast"===i&&(u=[c,E,A,R]),{batchSize:c,dataFormat:i,inHeight:m,inWidth:g,inChannels:x,outHeight:E,outWidth:A,outChannels:R,padInfo:w,strideHeight:k,strideWidth:N,filterHeight:y,filterWidth:b,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:C,dilationWidth:T,inShape:e,outShape:u,filterShape:t}}function u(e,t,r,a,n,s=!1,o="channelsLast",i){let l,[d,m,g,x,y]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[d,m,g,x,y]=e;else if("channelsFirst"===o)[d,y,m,g,x]=e;else throw Error(`Unknown dataFormat ${o}`);let[b,v,k,,N]=t,[C,T,S]=c(r),[I,w,E]=c(a),A=h(b,I),R=h(v,w),P=h(k,E),{padInfo:$,outDepth:F,outHeight:B,outWidth:D}=function(e,t,r,a,n,s,o,i,l,u,d){let c,h,m,g;if("valid"===e&&(e=0),"number"==typeof e){let x=0===e?"VALID":"NUMBER";c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:x};let y=function(e,t,r,a,n,s){null==n&&(n=p(e,t[0],a[0]));let o=[0,0,0,1];for(let r=0;r<3;r++)e[r]+2*n>=t[r]&&(o[r]=f((e[r]-t[r]+2*n)/a[r]+1,s));return o}([t,r,a,1],[i,l,u],0,[n,s,o],e,d);h=y[0],m=y[1],g=y[2]}else if("same"===e){let e=((h=Math.ceil(t/n))-1)*n+i-t,p=((m=Math.ceil(r/s))-1)*s+l-r,d=((g=Math.ceil(a/o))-1)*o+u-a,f=Math.floor(e/2),x=Math.floor(p/2),y=Math.floor(d/2);c={top:x,bottom:p-x,left:y,right:d-y,front:f,back:e-f,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outDepth:h,outHeight:m,outWidth:g}}(n,m,g,x,C,T,S,A,R,P,i),M=s?N*y:N;return"channelsFirst"===o?l=[d,M,F,B,D]:"channelsLast"===o&&(l=[d,F,B,D,M]),{batchSize:d,dataFormat:o,inDepth:m,inHeight:g,inWidth:x,inChannels:y,outDepth:F,outHeight:B,outWidth:D,outChannels:M,padInfo:$,strideDepth:C,strideHeight:T,strideWidth:S,filterDepth:b,filterHeight:v,filterWidth:k,effectiveFilterDepth:A,effectiveFilterHeight:R,effectiveFilterWidth:P,dilationDepth:I,dilationHeight:w,dilationWidth:E,inShape:e,outShape:l,filterShape:t}}function p(e,t,r,a=1){let n=h(t,a);return Math.floor((e[0]*(r-1)-r+n)/2)}function d(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function f(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function m(e){let[t,r,a]=d(e);return 1===t&&1===r&&1===a}function g(e,t){return m(e)||m(t)}function x(e){return d(e).every(e=>e>0)}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function b(e,t,r){if(null!=r)if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if("number"==typeof t)a.assert(a.isInt(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{a.assert(a.isInt(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}),o("4sqA7",function(t,r){e(t.exports,"reshape",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({reshape_:function(e,t){let r=(0,o.convertToTensor)(e,"x","reshape","string_or_numeric");return a.ENGINE.runKernel(n.Reshape,{x:r},{shape:t})}})}),o("ku2lx",function(t,r){e(t.exports,"avgPool3d",()=>c);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("inFmq"),u=s("frznq"),p=s("jqSCG"),d=s("4sqA7");let c=(0,p.op)({avgPool3d_:function(e,t,r,s,p,c="NDHWC"){let h=(0,o.convertToTensor)(e,"x","avgPool3d","float32"),f=h,m=!1;4===h.rank&&(m=!0,f=(0,d.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.assert(5===f.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`),i.assert("NDHWC"===c,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`),i.assert("number"==typeof r&&r>0||Array.isArray(r)&&r[0]>0&&r[1]>0&&r[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${r}'`),(0,u.checkPadOnDimRoundingMode)("avgPool3d",s,p);let g={x:f},x=a.ENGINE.runKernel(n.AvgPool3D,g,{filterSize:t,strides:r,pad:s,dimRoundingMode:p,dataFormat:c});return(x=(0,l.cast)(x,f.dtype),m)?(0,d.reshape)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})}),o("eHiMt",function(t,r){e(t.exports,"basicLSTMCell",()=>h);var a=s("5xBLk"),n=s("hgacW"),o=s("iTu6j"),i=s("aUFou"),l=s("jZc0w"),u=s("jqSCG"),p=s("jvtSq"),d=s("79KOG"),c=s("etcYL");let h=(0,u.op)({basicLSTMCell_:function(e,t,r,s,u,h){let f=(0,a.convertToTensor)(e,"forgetBias","basicLSTMCell"),m=(0,a.convertToTensor)(t,"lstmKernel","basicLSTMCell"),g=(0,a.convertToTensor)(r,"lstmBias","basicLSTMCell"),x=(0,a.convertToTensor)(s,"data","basicLSTMCell"),y=(0,a.convertToTensor)(u,"c","basicLSTMCell"),b=(0,a.convertToTensor)(h,"h","basicLSTMCell"),v=(0,o.concat)([x,b],1),k=(0,i.matMul)(v,m),N=(0,n.add)(k,g),C=N.shape[0],T=N.shape[1]/4,S=[C,T],I=(0,d.slice)(N,[0,0],S),w=(0,d.slice)(N,[0,T],S),E=(0,d.slice)(N,[0,2*T],S),A=(0,d.slice)(N,[0,3*T],S),R=(0,n.add)((0,l.mul)((0,p.sigmoid)(I),(0,c.tanh)(w)),(0,l.mul)(y,(0,p.sigmoid)((0,n.add)(f,E)))),P=(0,l.mul)((0,c.tanh)(R),(0,p.sigmoid)(A));return[R,P]}})}),o("iTu6j",function(t,r){e(t.exports,"concat",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("5TuCW");let u=(0,s("jqSCG").op)({concat_:function(e,t=0){(0,i.assert)(e.length>=1,()=>"Pass at least one tensor to concat");let r=(0,o.convertToTensorArray)(e,"tensors","concat","string_or_numeric");return("complex64"===r[0].dtype&&r.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===r.length)?(0,l.clone)(r[0]):a.ENGINE.runKernel(n.Concat,r,{axis:t})}})}),o("jvtSq",function(t,r){e(t.exports,"sigmoid",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sigmoid_:function(e){let t=(0,o.convertToTensor)(e,"x","sigmoid","float32");return a.ENGINE.runKernel(n.Sigmoid,{x:t})}})}),o("79KOG",function(t,r){e(t.exports,"slice",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({slice_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","slice","string_or_numeric");if(0===s.rank)throw Error("Slicing scalar is not possible");return a.ENGINE.runKernel(n.Slice,{x:s},{begin:t,size:r})}})}),o("etcYL",function(t,r){e(t.exports,"tanh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({tanh_:function(e){let t=(0,o.convertToTensor)(e,"x","tanh","float32");return a.ENGINE.runKernel(n.Tanh,{x:t})}})}),o("31sZ7",function(t,r){e(t.exports,"batchToSpaceND",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({batchToSpaceND_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","batchToSpaceND"),l=t.reduce((e,t)=>e*t);return i.assert(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),i.assert(r.length===t.length,()=>`crops.length is ${r.length} but should be equal to blockShape.length  ${t.length}`),i.assert(s.shape[0]%l==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`),a.ENGINE.runKernel(n.BatchToSpaceND,{x:s},{blockShape:t,crops:r})}})}),o("5ULLz",function(t,r){e(t.exports,"batchNorm",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("1EYew"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({batchNorm_:function(e,t,r,s,u,d){let c,h;null==d&&(d=.001);let f=(0,o.convertToTensor)(e,"x","batchNorm"),m=(0,o.convertToTensor)(t,"mean","batchNorm"),g=(0,o.convertToTensor)(r,"variance","batchNorm");null!=u&&(c=(0,o.convertToTensor)(u,"scale","batchNorm")),null!=s&&(h=(0,o.convertToTensor)(s,"offset","batchNorm")),i.assert(m.rank===g.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.assert(null==h||m.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.assert(null==c||m.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let x={x:(0,l.xAs4D)(f),scale:c,offset:h,mean:m,variance:g},y={varianceEpsilon:d},b=a.ENGINE.runKernel(n.FusedBatchNorm,x,y);return(0,p.reshape)(b,f.shape)}})}),o("1EYew",function(t,r){e(t.exports,"xAs4D",()=>n);var a=s("4sqA7");function n(e){let t;return 0===e.rank||1===e.rank?(0,a.reshape)(e,[1,1,1,e.size]):2===e.rank?(0,a.reshape)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,a.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}}),o("kKS8R",function(t,r){e(t.exports,"batchNorm2d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("5ULLz");let i=(0,s("jqSCG").op)({batchNorm2d_:function(e,t,r,s,i,l){let u,p,d=(0,a.convertToTensor)(e,"x","batchNorm"),c=(0,a.convertToTensor)(t,"mean","batchNorm"),h=(0,a.convertToTensor)(r,"variance","batchNorm");return null!=i&&(u=(0,a.convertToTensor)(i,"scale","batchNorm")),null!=s&&(p=(0,a.convertToTensor)(s,"offset","batchNorm")),n.assert(2===d.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${d.rank}.`),n.assert(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),n.assert(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=p&&n.assert(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),(0,o.batchNorm)(d,c,h,p,u,l)}})}),o("3KWPF",function(t,r){e(t.exports,"batchNorm3d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("5ULLz");let i=(0,s("jqSCG").op)({batchNorm3d_:function(e,t,r,s,i,l){let u,p,d=(0,a.convertToTensor)(e,"x","batchNorm"),c=(0,a.convertToTensor)(t,"mean","batchNorm"),h=(0,a.convertToTensor)(r,"variance","batchNorm");return null!=i&&(u=(0,a.convertToTensor)(i,"scale","batchNorm")),null!=s&&(p=(0,a.convertToTensor)(s,"offset","batchNorm")),n.assert(3===d.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${d.rank}.`),n.assert(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),n.assert(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=p&&n.assert(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),(0,o.batchNorm)(d,c,h,p,u,l)}})}),o("34sL5",function(t,r){e(t.exports,"batchNorm4d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("5ULLz");let i=(0,s("jqSCG").op)({batchNorm4d_:function(e,t,r,s,i,l){let u,p,d=(0,a.convertToTensor)(e,"x","batchNorm"),c=(0,a.convertToTensor)(t,"mean","batchNorm"),h=(0,a.convertToTensor)(r,"variance","batchNorm");return null!=i&&(u=(0,a.convertToTensor)(i,"scale","batchNorm")),null!=s&&(p=(0,a.convertToTensor)(s,"offset","batchNorm")),n.assert(4===d.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${d.rank}.`),n.assert(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),n.assert(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=p&&n.assert(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),(0,o.batchNorm)(d,c,h,p,u,l)}})}),o("f3UMy",function(t,r){e(t.exports,"bincount",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({bincount_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","bincount"),l=(0,o.convertToTensor)(t,"weights","bincount");return i.assert("int32"===s.dtype,()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),i.assert(r>=0,()=>`size must be non-negative, but got ${r}.`),i.assert(l.size===s.size||0===l.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${l.shape}.`),a.ENGINE.runKernel(n.Bincount,{x:s,weights:l},{size:r})}})}),o("dmptO",function(t,r){e(t.exports,"bitwiseAnd",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({bitwiseAnd_:function(e,t){let r=(0,o.convertToTensor)(e,"x","bitwiseAnd"),s=(0,o.convertToTensor)(t,"y","bitwiseAnd");if(!(0,i.arraysEqual)(r.shape,s.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${r.shape}, y: ${s.shape}`);if("int32"!==r.dtype||"int32"!==s.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${r.dtype} and type of y: ${s.dtype}`);return a.ENGINE.runKernel(n.BitwiseAnd,{a:r,b:s})}})}),o("k4fG6",function(t,r){e(t.exports,"broadcastArgs",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({broadcastArgs_:function(e,t){let r=(0,o.convertToTensor)(e,"s0","broadcastArgs","int32"),s=(0,o.convertToTensor)(t,"s1","broadcastArgs","int32");if(1!==r.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${r.rank}`);if(1!==s.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);return a.ENGINE.runKernel(n.BroadcastArgs,{s0:r,s1:s})}})}),o("aeB3Z",function(t,r){e(t.exports,"broadcastTo",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("5TuCW"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({broadcastTo_:function(e,t){let r=(0,o.convertToTensor)(e,"broadcastTo","x"),s=r.shape;if((0,i.assertNonNegativeIntegerDimensions)(t),t.length<r.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${r.rank}.`);if(t.length>r.rank){let e=r.shape.slice();for(;e.length<t.length;)e.unshift(1);r=(0,p.reshape)(r,e)}let u=r.shape,d=Array.from(t);for(let e=t.length-1;e>=0;e--)if(u[e]===t[e])d[e]=1;else if(1!==r.shape[e])throw Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===d.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return(0,l.clone)(r);let c={x:r};return a.ENGINE.runKernel(n.Tile,c,{reps:d})}})}),o("jDrkY",function(t,r){e(t.exports,"ceil",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({ceil_:function(e){let t=(0,o.convertToTensor)(e,"x","ceil","float32");return a.ENGINE.runKernel(n.Ceil,{x:t})}})}),o("cOWuO",function(t,r){e(t.exports,"clipByValue",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("gYive");let u=(0,s("jqSCG").op)({clipByValue_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","clipByValue");return(i.assert(t<=r,()=>`Error in clip: min (${t}) must be less than or equal to max (${r}).`),t===r)?(0,l.fill)(s.shape,t,s.dtype):a.ENGINE.runKernel(n.ClipByValue,{x:s},{clipValueMin:t,clipValueMax:r})}})}),o("4TU82",function(t,r){e(t.exports,"concat1d",()=>n);var a=s("iTu6j");let n=(0,s("jqSCG").op)({concat1d_:function(e){return(0,a.concat)(e,0)}})}),o("7PZdE",function(t,r){e(t.exports,"concat2d",()=>n);var a=s("iTu6j");let n=(0,s("jqSCG").op)({concat2d_:function(e,t){return(0,a.concat)(e,t)}})}),o("ljqPW",function(t,r){e(t.exports,"concat3d",()=>n);var a=s("iTu6j");let n=(0,s("jqSCG").op)({concat3d_:function(e,t){return(0,a.concat)(e,t)}})}),o("9Grxx",function(t,r){e(t.exports,"concat4d",()=>n);var a=s("iTu6j");let n=(0,s("jqSCG").op)({concat4d_:function(e,t){return(0,a.concat)(e,t)}})}),o("ebPOp",function(t,r){e(t.exports,"conv1d",()=>p);var a=s("5xBLk"),n=s("8cCb2"),o=s("5Nkm1"),i=s("frznq"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({conv1d_:function(e,t,r,s,l="NWC",p=1,d){let c=(0,a.convertToTensor)(e,"x","conv1d"),h=(0,a.convertToTensor)(t,"filter","conv1d"),f=c,m=!1;2===c.rank&&(m=!0,f=(0,u.reshape)(c,[1,c.shape[0],c.shape[1]])),n.assert(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),n.assert(3===h.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`),i.checkPadOnDimRoundingMode("conv1d",s,d),n.assert(f.shape[2]===h.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`),n.assert(i.eitherStridesOrDilationsAreOne(r,p),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${r} and dilation '${p}'`),n.assert(i.stridesOrDilationsArePositive(p),()=>"Error in conv1D: Dilated rates should be larger than 0."),n.assert(i.stridesOrDilationsArePositive(r),()=>"Error in conv1D: Stride should be larger than 0."),n.assert("NWC"===l,()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`);let g=(0,u.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),x=(0,u.reshape)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=(0,o.conv2d)(x,g,[1,r],s,"NHWC",[1,p],d);return m?(0,u.reshape)(y,[y.shape[2],y.shape[3]]):(0,u.reshape)(y,[y.shape[0],y.shape[2],y.shape[3]])}})}),o("5Nkm1",function(t,r){e(t.exports,"conv2d",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("frznq"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({conv2d_:function(e,t,r,s,u="NHWC",d=[1,1],c){let h=(0,o.convertToTensor)(e,"x","conv2d","float32"),f=(0,o.convertToTensor)(t,"filter","conv2d","float32"),m=h,g=!1;3===h.rank&&(g=!0,m=(0,p.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.assert(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.assert(4===f.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`),l.checkPadOnDimRoundingMode("conv2d",s,c);let x="NHWC"===u?m.shape[3]:m.shape[1];i.assert(x===f.shape[2],()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${f.shape[2]}.`),i.assert(l.eitherStridesOrDilationsAreOne(r,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${d}'`),i.assert(l.stridesOrDilationsArePositive(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),i.assert(l.stridesOrDilationsArePositive(r),()=>"Error in conv2D: Strides should be larger than 0.");let y={x:m,filter:f},b=a.ENGINE.runKernel(n.Conv2D,y,{strides:r,pad:s,dataFormat:u,dilations:d,dimRoundingMode:c});return g?(0,p.reshape)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})}),o("5rn1J",function(t,r){e(t.exports,"conv2dTranspose",()=>o);var a=s("5xBLk"),n=s("6eptr");let o=(0,s("jqSCG").op)({conv2dTranspose_:function(e,t,r,s,o,i){let l=(0,a.convertToTensor)(e,"x","conv2dTranspose"),u=(0,a.convertToTensor)(t,"filter","conv2dTranspose");return(0,n.conv2DBackpropInput)(r,l,u,s,o,"NHWC",i)}})}),o("6eptr",function(t,r){e(t.exports,"conv2DBackpropInput",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("8cCb2"),i=s("frznq"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({conv2DBackpropInput_:function(e,t,r,s,l,p="NHWC",d){o.assert(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let c=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,u.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),c=[1,e[0],e[1],e[2]]),o.assert(4===c.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),o.assert(4===h.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`),o.assert(4===r.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${r.rank}`);let m="NHWC"===p?c[3]:c[1],g="NHWC"===p?h.shape[3]:h.shape[1];o.assert(m===r.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${r.shape[2]}.`),o.assert(g===r.shape[3],()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${r.shape[3]}.`),i.checkPadOnDimRoundingMode("conv2dDerInput",l,d);let x={dy:h,filter:r},y={strides:s,pad:l,dataFormat:p,dimRoundingMode:d,inputShape:c},b=a.ENGINE.runKernel(n.Conv2DBackpropInput,x,y);return f?(0,u.reshape)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})}),o("kj7tM",function(t,r){e(t.exports,"conv3d",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("frznq"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({conv3d_:function(e,t,r,s,u="NDHWC",d=[1,1,1]){let c=(0,o.convertToTensor)(e,"x","conv3d"),h=(0,o.convertToTensor)(t,"filter","conv3d"),f=c,m=!1;4===c.rank&&(m=!0,f=(0,p.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),i.assert(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.assert(5===h.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`),i.assert(f.shape[4]===h.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`),i.assert((0,l.eitherStridesOrDilationsAreOne)(r,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${r} and dilations '${d}'`),i.assert("NDHWC"===u,()=>`Error in conv3d: got dataFormat of ${u} but only NDHWC is currently supported.`),i.assert((0,l.stridesOrDilationsArePositive)(d),()=>"Error in conv3D: Dilated rates should be larger than 0."),i.assert((0,l.stridesOrDilationsArePositive)(r),()=>"Error in conv3D: Strides should be larger than 0.");let g={x:f,filter:h},x=a.ENGINE.runKernel(n.Conv3D,g,{strides:r,pad:s,dataFormat:u,dilations:d});return m?(0,p.reshape)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})}),o("7Zgyq",function(t,r){e(t.exports,"conv3dTranspose",()=>o);var a=s("5xBLk"),n=s("AHZ4U");let o=(0,s("jqSCG").op)({conv3dTranspose_:function(e,t,r,s,o){let i=(0,a.convertToTensor)(e,"x","conv3dTranspose"),l=(0,a.convertToTensor)(t,"filter","conv3dTranspose");return(0,n.conv3DBackpropInput)(r,i,l,s,o)}})}),o("AHZ4U",function(t,r){e(t.exports,"conv3DBackpropInput",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("8cCb2"),i=s("jqSCG"),l=s("4sqA7");let u=(0,i.op)({conv3DBackpropInput_:function(e,t,r,s,i){o.assert(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let u=e,p=t,d=!1;4===t.rank&&(d=!0,p=(0,l.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);let c=u[4],h=p.shape[4];o.assert(5===u.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`),o.assert(5===p.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${p.rank}`),o.assert(5===r.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${r.rank}`),o.assert(c===r.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${r.shape[3]}.`),o.assert(h===r.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${r.shape[4]}.`);let f={dy:p,filter:r},m={pad:i,strides:s,inputShape:u},g=a.ENGINE.runKernel(n.Conv3DBackpropInputV2,f,m);return d?(0,l.reshape)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})}),o("3BU7G",function(t,r){e(t.exports,"cos",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({cos_:function(e){let t=(0,o.convertToTensor)(e,"x","cos","float32");return a.ENGINE.runKernel(n.Cos,{x:t})}})}),o("bTdqT",function(t,r){e(t.exports,"cosh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({cosh_:function(e){let t=(0,o.convertToTensor)(e,"x","cosh","float32");return a.ENGINE.runKernel(n.Cosh,{x:t})}})}),o("bhhSS",function(t,r){e(t.exports,"cumprod",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({cumprod_:function(e,t=0,r=!1,s=!1){let i=(0,o.convertToTensor)(e,"x","cumprod");return a.ENGINE.runKernel(n.Cumprod,{x:i},{axis:t,exclusive:r,reverse:s})}})}),o("7lqwF",function(t,r){e(t.exports,"cumsum",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({cumsum_:function(e,t=0,r=!1,s=!1){let i=(0,o.convertToTensor)(e,"x","cumsum");return a.ENGINE.runKernel(n.Cumsum,{x:i},{axis:t,exclusive:r,reverse:s})}})}),o("8maH5",function(t,r){e(t.exports,"denseBincount",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({denseBincount_:function(e,t,r,s=!1){let l=(0,o.convertToTensor)(e,"x","denseBincount"),u=(0,o.convertToTensor)(t,"weights","denseBincount");return i.assert("int32"===l.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${l.dtype}`),i.assert(l.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${l.rank}.`),i.assert(r>=0,()=>`size must be non-negative, but got ${r}.`),i.assert(u.size===l.size||0===u.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${l.shape}, weights shape: ${u.shape}.`),a.ENGINE.runKernel(n.DenseBincount,{x:l,weights:u},{size:r,binaryOutput:s})}})}),o("lIVEL",function(t,r){e(t.exports,"depthToSpace",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({depthToSpace_:function(e,t,r="NHWC"){let s=(0,o.convertToTensor)(e,"x","depthToSpace","float32"),l="NHWC"===r?s.shape[1]:s.shape[2],u="NHWC"===r?s.shape[2]:s.shape[3],p="NHWC"===r?s.shape[3]:s.shape[1];return i.assert(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),i.assert(l*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${l} and ${t}  for depthToSpace with input shape
    ${s.shape}`),i.assert(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${u} and ${t} for depthToSpace with input shape
        ${s.shape}`),i.assert(p%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${p} for depthToSpace with input shape ${s.shape}`),a.ENGINE.runKernel(n.DepthToSpace,{x:s},{blockSize:t,dataFormat:r})}})}),o("182Rc",function(t,r){e(t.exports,"depthwiseConv2d",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("frznq"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({depthwiseConv2d_:function(e,t,r,s,u="NHWC",d=[1,1],c){let h=(0,o.convertToTensor)(e,"x","depthwiseConv2d","float32"),f=(0,o.convertToTensor)(t,"filter","depthwiseConv2d","float32"),m=h,g=!1;3===h.rank&&(g=!0,m=(0,p.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.assert(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),i.assert(4===f.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`);let x="NHWC"===u?m.shape[3]:m.shape[1];i.assert(x===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${x}) must match the inChannels dimension in filter ${f.shape[2]}.`),l.checkPadOnDimRoundingMode("depthwiseConv2d",s,c);let y={x:m,filter:f},b=a.ENGINE.runKernel(n.DepthwiseConv2dNative,y,{strides:r,pad:s,dataFormat:u,dilations:d,dimRoundingMode:c});return g?(0,p.reshape)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})}),o("4VHSw",function(t,r){e(t.exports,"diag",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({diag_:function(e){let t=(0,o.convertToTensor)(e,"x","diag");return a.ENGINE.runKernel(n.Diag,{x:t})}})}),o("leKzP",function(t,r){e(t.exports,"dilation2d",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({dilation2d_:function(e,t,r,s,l=[1,1],p="NHWC"){let d=(0,o.convertToTensor)(e,"x","dilation2d"),c=(0,o.convertToTensor)(t,"filter","dilation2d");i.assert(3===d.rank||4===d.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`),i.assert(3===c.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),i.assert("NHWC"===p,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${p}`);let h=d,f=!1;3===d.rank&&(h=(0,u.reshape)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),i.assert(h.shape[3]===c.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${h.shape[3]} vs ${c.shape[2]}`);let m={x:h,filter:c},g=a.ENGINE.runKernel(n.Dilation2D,m,{strides:r,pad:s,dilations:l});return f?(0,u.reshape)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})}),o("3pBq5",function(t,r){e(t.exports,"divNoNan",()=>d);var a=s("3w4Rg"),n=s("5xBLk"),o=s("1QPqB"),i=s("7R9HC"),l=s("jqSCG"),u=s("l2P14"),p=s("8EjnK");let d=(0,l.op)({divNoNan_:function(e,t){let r=(0,n.convertToTensor)(e,"a","div"),s=(0,n.convertToTensor)(t,"b","div");[r,s]=(0,a.makeTypesMatch)(r,s);let l=(0,o.div)(r,s),d=(0,p.zerosLike)(l),c=(0,i.equal)(s,d);return(0,u.where)(c,d,l)}})}),o("7R9HC",function(t,r){e(t.exports,"equal",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({equal_:function(e,t){let r=(0,i.convertToTensor)(e,"a","equal","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","equal","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.Equal,u)}})}),o("l2P14",function(t,r){e(t.exports,"where",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("aeB3Z"),l=s("8BaGO");let u=(0,s("jqSCG").op)({where_:function(e,t,r){let s=(0,o.convertToTensor)(t,"a","where"),u=(0,o.convertToTensor)(r,"b","where"),p=(0,o.convertToTensor)(e,"condition","where","bool"),d=(0,l.assertAndGetBroadcastShape)((0,l.assertAndGetBroadcastShape)(p.shape,s.shape),u.shape),c=(0,i.broadcastTo)(p,d),h=(0,i.broadcastTo)(s,d),f=(0,i.broadcastTo)(u,d);return a.ENGINE.runKernel(n.Select,{condition:c,t:h,e:f})}})}),o("67T3W",function(t,r){e(t.exports,"dot",()=>u);var a=s("5xBLk"),n=s("8cCb2"),o=s("aUFou"),i=s("jqSCG"),l=s("4sqA7");let u=(0,i.op)({dot_:function(e,t){let r=(0,a.convertToTensor)(e,"t1","dot"),s=(0,a.convertToTensor)(t,"t2","dot");n.assert((1===r.rank||2===r.rank)&&(1===s.rank||2===s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${r.rank} and ${s.rank}.`);let i=1===r.rank?r.size:r.shape[1],u=1===s.rank?s.size:s.shape[0];if(n.assert(i===u,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${u}.`),1===r.rank&&1===s.rank){let e=(0,l.reshape)(r,[1,-1]),t=(0,l.reshape)(s,[-1,1]),a=(0,o.matMul)(e,t);return(0,l.reshape)(a,[])}if(1===r.rank&&2===s.rank){let e=(0,l.reshape)(r,[1,-1]),t=(0,l.reshape)(s,[s.shape[0],s.shape[1]]),a=(0,o.matMul)(e,t);return(0,l.reshape)(a,[a.size])}if(2===r.rank&&1===s.rank){let e=(0,l.reshape)(s,[-1,1]),t=(0,o.matMul)(r,e);return(0,l.reshape)(t,[t.size])}{let e=(0,l.reshape)(s,[s.shape[0],s.shape[1]]);return(0,o.matMul)(r,e)}}})}),o("1mzpU",function(t,r){e(t.exports,"einsum",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({einsum_:function(e,...t){let r=t.map((e,t)=>(0,o.convertToTensor)(e,`tensors${t}`,"einsum"));return a.ENGINE.runKernel(n.Einsum,r,{equation:e})}})}),o("7UQTl",function(t,r){e(t.exports,"elu",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({elu_:function(e){let t=(0,o.convertToTensor)(e,"x","elu","float32");return a.ENGINE.runKernel(n.Elu,{x:t})}})}),o("8jXAt",function(t,r){e(t.exports,"ensureShape",()=>o);var a=s("5xBLk"),n=s("8cCb2");let o=(0,s("jqSCG").op)({ensureShape_:function(e,t){let r=(0,a.convertToTensor)(e,"x","ensureShape","string_or_numeric");if(!(0,n.arraysEqualWithNull)(r.shape,t))throw Error(`EnsureShape: Shape of tensor ${r.shape} is not compatible with expected shape ${t}`);return e}})}),o("3q8h0",function(t,r){e(t.exports,"erf",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("inFmq");let u=(0,s("jqSCG").op)({erf_:function(e){let t=(0,o.convertToTensor)(e,"x","erf");i.assert("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=(0,l.cast)(t,"float32"));let r={x:t};return a.ENGINE.runKernel(n.Erf,r)}})}),o("4PmMp",function(t,r){e(t.exports,"euclideanNorm",()=>n);var a=s("7k6dx");let n=(0,s("jqSCG").op)({euclideanNorm_:function(e,t=null,r=!1){return(0,a.norm)(e,"euclidean",t,r)}})}),o("7k6dx",function(t,r){e(t.exports,"norm",()=>x);var a=s("5xBLk"),n=s("8cCb2"),o=s("7j49I"),i=s("kTunp"),l=s("05cMR"),u=s("fySTI"),p=s("jqSCG"),d=s("ad1of"),c=s("4sqA7"),h=s("3xp7o"),f=s("iAb3z"),m=s("iDd8d"),g=s("9NgTx");let x=(0,p.op)({norm_:function(e,t="euclidean",r=null,s=!1){let p=function e(t,r,a=null){if(0===t.rank)return(0,o.abs)(t);if(1!==t.rank&&null===a)return e((0,c.reshape)(t,[-1]),r,a);if(1===t.rank||"number"==typeof a||Array.isArray(a)&&1===a.length){if(1===r)return(0,g.sum)((0,o.abs)(t),a);if(r===1/0)return(0,l.max)((0,o.abs)(t),a);if(r===-1/0)return(0,u.min)((0,o.abs)(t),a);if("euclidean"===r||2===r)return(0,f.sqrt)((0,g.sum)((0,d.pow)((0,o.abs)(t),(0,h.scalar)(2,"int32")),a));throw Error(`Error in norm: invalid ord value: ${r}`)}if(Array.isArray(a)&&2===a.length){if(1===r)return(0,l.max)((0,g.sum)((0,o.abs)(t),a[0]),a[1]-1);if(r===1/0)return(0,l.max)((0,g.sum)((0,o.abs)(t),a[1]),a[0]);if(r===-1/0)return(0,u.min)((0,g.sum)((0,o.abs)(t),a[1]),a[0]);if("fro"===r||"euclidean"===r)return(0,f.sqrt)((0,g.sum)((0,m.square)(t),a));throw Error(`Error in norm: invalid ord value: ${r}`)}throw Error(`Error in norm: invalid axis: ${a}`)}(e=(0,a.convertToTensor)(e,"x","norm"),t,r),x=p.shape;if(s){let t=(0,n.parseAxisParam)(r,e.shape);x=i.expandShapeToKeepDim(p.shape,t)}return(0,c.reshape)(p,x)}})}),o("kTunp",function(t,r){e(t.exports,"axesAreInnerMostDims",()=>n),e(t.exports,"combineLocations",()=>o),e(t.exports,"computeOutAndReduceShapes",()=>i),e(t.exports,"expandShapeToKeepDim",()=>l),e(t.exports,"assertAxesAreInnerMostDims",()=>u),e(t.exports,"getAxesPermutation",()=>p),e(t.exports,"getUndoAxesPermutation",()=>d),e(t.exports,"getInnerMostAxes",()=>c);var a=s("8cCb2");function n(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function o(e,t,r){let a=e.length+t.length,n=[],s=0,o=0;for(let i=0;i<a;i++)-1===r.indexOf(i)?n.push(e[s++]):n.push(t[o++]);return n}function i(e,t){let r=[],a=e.length;for(let n=0;n<a;n++)-1===t.indexOf(n)&&r.push(e[n]);return[r,t.map(t=>e[t])]}function l(e,t){return o(e,t.map(e=>1),t)}function u(e,t,r){a.assert(n(t,r),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${r} input.`)}function p(e,t){if(n(e,t))return null;let r=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&r.push(a);return e.forEach(e=>r.push(e)),r}function d(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function c(e,t){let r=[];for(let a=t-e;a<t;++a)r.push(a);return r}}),o("05cMR",function(t,r){e(t.exports,"max",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({max_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","max");return a.ENGINE.runKernel(n.Max,{x:s},{reductionIndices:t,keepDims:r})}})}),o("fySTI",function(t,r){e(t.exports,"min",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({min_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","min");return a.ENGINE.runKernel(n.Min,{x:s},{axis:t,keepDims:r})}})}),o("9NgTx",function(t,r){e(t.exports,"sum",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("inFmq");let l=(0,s("jqSCG").op)({sum_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","sum");"bool"===s.dtype&&(s=(0,i.cast)(s,"int32"));let l={x:s};return a.ENGINE.runKernel(n.Sum,l,{axis:t,keepDims:r})}})}),o("2PcQK",function(t,r){e(t.exports,"exp",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({exp_:function(e){let t=(0,o.convertToTensor)(e,"x","exp");return a.ENGINE.runKernel(n.Exp,{x:t})}})}),o("iPDWZ",function(t,r){e(t.exports,"expandDims",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({expandDims_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","expandDims","string_or_numeric");return i.assert(t<=r.rank,()=>"Axis must be <= rank of the tensor"),a.ENGINE.runKernel(n.ExpandDims,{input:r},{dim:t})}})}),o("cUuFo",function(t,r){e(t.exports,"expm1",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({expm1_:function(e){let t=(0,o.convertToTensor)(e,"x","expm1");return a.ENGINE.runKernel(n.Expm1,{x:t})}})}),o("9gIZb",function(t,r){e(t.exports,"eye",()=>u);var a=s("iG87S"),n=s("iPDWZ"),o=s("jqSCG"),i=s("4sqA7"),l=s("61ay4");let u=(0,o.op)({eye_:function(e,t,r,s="float32"){null==t&&(t=e);let o=(0,a.buffer)([e,t],s),u=e<=t?e:t;for(let e=0;e<u;++e)o.set(1,e,e);let p=(0,i.reshape)(o.toTensor(),[e,t]);if(null==r)return p;if(1===r.length)return(0,l.tile)((0,n.expandDims)(p,0),[r[0],1,1]);if(2===r.length)return(0,l.tile)((0,n.expandDims)((0,n.expandDims)(p,0),0),[r[0],r[1],1,1]);if(3===r.length)return(0,l.tile)((0,n.expandDims)((0,n.expandDims)((0,n.expandDims)(p,0),0),0),[r[0],r[1],r[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${r.length}D.`)}})}),o("61ay4",function(t,r){e(t.exports,"tile",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({tile_:function(e,t){let r=(0,o.convertToTensor)(e,"x","tile","string_or_numeric");return i.assert(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`),a.ENGINE.runKernel(n.Tile,{x:r},{reps:t})}})}),o("4ZUCz",function(t,r){e(t.exports,"floor",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({floor_:function(e){let t=(0,o.convertToTensor)(e,"x","floor","float32");return a.ENGINE.runKernel(n.Floor,{x:t})}})}),o("3qUjU",function(t,r){e(t.exports,"gather",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({gather_:function(e,t,r=0,s=0){let i=(0,o.convertToTensor)(e,"x","gather"),l=(0,o.convertToTensor)(t,"indices","gather","int32");return a.ENGINE.runKernel(n.GatherV2,{x:i,indices:l},{axis:r,batchDims:s})}})}),o("bRRKf",function(t,r){e(t.exports,"greater",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({greater_:function(e,t){let r=(0,i.convertToTensor)(e,"a","greater","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","greater","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.Greater,u)}})}),o("l0Zxl",function(t,r){e(t.exports,"greaterEqual",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({greaterEqual_:function(e,t){let r=(0,i.convertToTensor)(e,"a","greaterEqual","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","greaterEqual","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.GreaterEqual,u)}})}),o("eaZNC",function(t,r){e(t.exports,"isFinite",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({isFinite_:function(e){let t=(0,o.convertToTensor)(e,"x","isFinite");return a.ENGINE.runKernel(n.IsFinite,{x:t})}})}),o("ahjR1",function(t,r){e(t.exports,"isInf",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({isInf_:function(e){let t=(0,o.convertToTensor)(e,"x","isInf");return a.ENGINE.runKernel(n.IsInf,{x:t})}})}),o("5FmUe",function(t,r){e(t.exports,"isNaN",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({isNaN_:function(e){let t=(0,o.convertToTensor)(e,"x","isNaN");return a.ENGINE.runKernel(n.IsNan,{x:t})}})}),o("3XskU",function(t,r){e(t.exports,"leakyRelu",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({leakyRelu_:function(e,t=.2){let r=(0,o.convertToTensor)(e,"x","leakyRelu");return a.ENGINE.runKernel(n.LeakyRelu,{x:r},{alpha:t})}})}),o("jTDVJ",function(t,r){e(t.exports,"less",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({less_:function(e,t){let r=(0,i.convertToTensor)(e,"a","less","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","less","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.Less,u)}})}),o("7LQ38",function(t,r){e(t.exports,"lessEqual",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({lessEqual_:function(e,t){let r=(0,i.convertToTensor)(e,"a","lessEqual","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","lessEqual","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.LessEqual,u)}})}),o("9ntOC",function(t,r){e(t.exports,"linspace",()=>o);var a=s("38WwN"),n=s("hl418");function o(e,t,r){if(r<=0)throw Error("The number of values should be positive.");return a.ENGINE.runKernel(n.LinSpace,{},{start:e,stop:t,num:r})}}),o("k8D3u",function(t,r){e(t.exports,"localResponseNormalization",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({localResponseNormalization_:function(e,t=5,r=1,s=1,l=.5){let p=(0,o.convertToTensor)(e,"x","localResponseNormalization");i.assert(4===p.rank||3===p.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${p.rank}.`),i.assert(i.isInt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=p,c=!1;3===p.rank&&(c=!0,d=(0,u.reshape)(p,[1,p.shape[0],p.shape[1],p.shape[2]]));let h={x:d},f=a.ENGINE.runKernel(n.LRN,h,{depthRadius:t,bias:r,alpha:s,beta:l});return c?(0,u.reshape)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})}),o("dcoCo",function(t,r){e(t.exports,"log",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({log_:function(e){let t=(0,o.convertToTensor)(e,"x","log","float32");return a.ENGINE.runKernel(n.Log,{x:t})}})}),o("5QUXI",function(t,r){e(t.exports,"log1p",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({log1p_:function(e){let t=(0,o.convertToTensor)(e,"x","log1p");return a.ENGINE.runKernel(n.Log1p,{x:t})}})}),o("7hYeW",function(t,r){e(t.exports,"logSigmoid",()=>d);var a=s("92fpA"),n=s("5xBLk"),o=s("jZc0w"),i=s("15cGp"),l=s("jqSCG"),u=s("jvtSq"),p=s("4Udpd");let d=(0,l.op)({logSigmoid_:function(e){let t=(0,n.convertToTensor)(e,"x","logSigmoid");return(0,a.customGrad)(e=>({value:(0,i.neg)((0,p.softplus)((0,i.neg)(e))),gradFunc:t=>(0,o.mul)(t,(0,u.sigmoid)((0,i.neg)(e)))}))(t)}})}),o("4Udpd",function(t,r){e(t.exports,"softplus",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({softplus_:function(e){let t=(0,o.convertToTensor)(e,"x","softplus");return a.ENGINE.runKernel(n.Softplus,{x:t})}})}),o("2NPdY",function(t,r){e(t.exports,"logSoftmax",()=>f);var a=s("92fpA"),n=s("5xBLk"),o=s("inFmq"),i=s("2PcQK"),l=s("dcoCo"),u=s("05cMR"),p=s("jZc0w"),d=s("jqSCG"),c=s("7kouu"),h=s("9NgTx");let f=(0,d.op)({logSoftmax_:function(e,t=-1){let r=(0,n.convertToTensor)(e,"logits","logSoftmax");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and axis was ${t}`);return(0,a.customGrad)((e,r)=>{let a=(0,u.max)(e,t,!0),n=(0,c.sub)(e,a),s=(0,c.sub)((0,o.cast)(n,"float32"),(0,l.log)((0,h.sum)((0,i.exp)(n),t,!0)));return r([s]),{value:s,gradFunc:(e,r)=>{let[a]=r,n=(0,i.exp)(a);return(0,c.sub)(e,(0,p.mul)((0,h.sum)(e,t,!0),n))}}})(r)}})}),o("9dGIC",function(t,r){e(t.exports,"logSumExp",()=>m);var a=s("5xBLk"),n=s("8cCb2"),o=s("hgacW"),i=s("kTunp"),l=s("2PcQK"),u=s("dcoCo"),p=s("05cMR"),d=s("jqSCG"),c=s("4sqA7"),h=s("7kouu"),f=s("9NgTx");let m=(0,d.op)({logSumExp_:function(e,t=null,r=!1){let s=(0,a.convertToTensor)(e,"x","logSumExp"),d=(0,n.parseAxisParam)(t,s.shape),m=(0,p.max)(s,d,!0),g=(0,h.sub)(s,m),x=(0,l.exp)(g),y=(0,f.sum)(x,d),b=(0,u.log)(y),v=(0,o.add)((0,c.reshape)(m,b.shape),b);if(r){let e=(0,i.expandShapeToKeepDim)(v.shape,d);return(0,c.reshape)(v,e)}return v}})}),o("kg1Wp",function(t,r){e(t.exports,"logicalAnd",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8BaGO");let l=(0,s("jqSCG").op)({logicalAnd_:function(e,t){let r=(0,o.convertToTensor)(e,"a","logicalAnd","bool"),s=(0,o.convertToTensor)(t,"b","logicalAnd","bool");return(0,i.assertAndGetBroadcastShape)(r.shape,s.shape),a.ENGINE.runKernel(n.LogicalAnd,{a:r,b:s})}})}),o("7NVSX",function(t,r){e(t.exports,"logicalNot",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({logicalNot_:function(e){let t=(0,o.convertToTensor)(e,"x","logicalNot","bool");return a.ENGINE.runKernel(n.LogicalNot,{x:t})}})}),o("iok2K",function(t,r){e(t.exports,"logicalOr",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8BaGO");let l=(0,s("jqSCG").op)({logicalOr_:function(e,t){let r=(0,o.convertToTensor)(e,"a","logicalOr","bool"),s=(0,o.convertToTensor)(t,"b","logicalOr","bool");return(0,i.assertAndGetBroadcastShape)(r.shape,s.shape),a.ENGINE.runKernel(n.LogicalOr,{a:r,b:s})}})}),o("iIobM",function(t,r){e(t.exports,"logicalXor",()=>u);var a=s("5xBLk"),n=s("8BaGO"),o=s("kg1Wp"),i=s("7NVSX"),l=s("iok2K");let u=(0,s("jqSCG").op)({logicalXor_:function(e,t){let r=(0,a.convertToTensor)(e,"a","logicalXor","bool"),s=(0,a.convertToTensor)(t,"b","logicalXor","bool");return(0,n.assertAndGetBroadcastShape)(r.shape,s.shape),(0,o.logicalAnd)((0,l.logicalOr)(e,t),(0,i.logicalNot)((0,o.logicalAnd)(e,t)))}})}),o("jAFVi",function(t,r){e(t.exports,"lowerBound",()=>n);var a=s("6PrVj");function n(e,t){return(0,a.searchSorted)(e,t,"left")}}),o("6PrVj",function(t,r){e(t.exports,"searchSorted",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({searchSorted_:function(e,t,r="left"){let s=(0,o.convertToTensor)(e,"sortedSequence","searchSorted"),l=(0,o.convertToTensor)(t,"values","searchSorted"),p=s.shape[s.shape.length-1],d=l.shape[l.shape.length-1],c=(0,u.reshape)(s,[-1,p]),h=(0,u.reshape)(l,[-1,d]);if(c.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==h.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,i.sizeFromShape)(h.shape)>=0x80000000)throw Error("values tensor size must less than 2147483648");if(c.shape[1]>=0x80000000)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${c.shape[1]}`);return a.ENGINE.runKernel(n.SearchSorted,{sortedSequence:c,values:h},{side:r})}})}),o("gscJF",function(t,r){e(t.exports,"maxPool",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("frznq"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({maxPool_:function(e,t,r,s,u){let d=(0,o.convertToTensor)(e,"x","maxPool"),c=d,h=!1;3===d.rank&&(h=!0,c=(0,p.reshape)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.assert(4===c.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),i.assert(l.eitherStridesOrDilationsAreOne(r,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`),l.checkPadOnDimRoundingMode("maxPool",s,u);let f={x:c},m=a.ENGINE.runKernel(n.MaxPool,f,{filterSize:t,strides:r,pad:s,dimRoundingMode:u});return h?(0,p.reshape)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})}),o("gF4tm",function(t,r){e(t.exports,"maxPool3d",()=>d);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("frznq"),u=s("jqSCG"),p=s("4sqA7");let d=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],r,s,u,d="NDHWC"){let c=(0,o.convertToTensor)(e,"x","maxPool3d"),h=c,f=!1;4===c.rank&&(f=!0,h=(0,p.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),i.assert(5===h.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`),i.assert("NDHWC"===d,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),(0,l.checkPadOnDimRoundingMode)("maxPool3d",s,u);let m={x:h},g=a.ENGINE.runKernel(n.MaxPool3D,m,{filterSize:t,strides:r,pad:s,dimRoundingMode:u,dataFormat:d});return f?(0,p.reshape)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})}),o("9K0B1",function(t,r){e(t.exports,"maxPoolWithArgmax",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({maxPoolWithArgmax_:function(e,t,r,s,i=!1){let l=(0,o.convertToTensor)(e,"x","maxPoolWithArgmax"),u=a.ENGINE.runKernel(n.MaxPoolWithArgmax,{x:l},{filterSize:t,strides:r,pad:s,includeBatchInIndex:i});return{result:u[0],indexes:u[1]}}})}),o("67GCc",function(t,r){e(t.exports,"mean",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({mean_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","mean");return a.ENGINE.runKernel(n.Mean,{x:s},{axis:t,keepDims:r})}})}),o("e6A1c",function(t,r){e(t.exports,"meshgrid",()=>p);var a=s("aUFou"),n=s("fOBRA"),o=s("4sqA7"),i=s("9jCh7"),l=s("5xBLk"),u=s("8cCb2");function p(e,t,{indexing:r="xy"}={}){if("xy"!==r&&"ij"!==r)throw TypeError(`${r} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=(0,l.convertToTensor)(e,"x","meshgrid",e instanceof i.Tensor?e.dtype:"float32");if(void 0===t)return[s];let d=(0,l.convertToTensor)(t,"y","meshgrid",t instanceof i.Tensor?t.dtype:"float32"),c=(0,u.sizeFromShape)(s.shape),h=(0,u.sizeFromShape)(d.shape);return"xy"===r?(s=(0,o.reshape)(s,[1,-1]),d=(0,o.reshape)(d,[-1,1]),[(0,a.matMul)((0,n.ones)([h,1],s.dtype),s),(0,a.matMul)(d,(0,n.ones)([1,c],d.dtype))]):(s=(0,o.reshape)(s,[-1,1]),d=(0,o.reshape)(d,[1,-1]),[(0,a.matMul)(s,(0,n.ones)([1,h],s.dtype)),(0,a.matMul)((0,n.ones)([c,1],d.dtype),d)])}}),o("fOBRA",function(t,r){e(t.exports,"ones",()=>function e(t,r="float32"){if((0,n.assertNonNegativeIntegerDimensions)(t),"complex64"===r){let r=e(t,"float32"),a=(0,i.zeros)(t,"float32");return(0,o.complex)(r,a)}let s=(0,n.makeOnesTypedArray)((0,n.sizeFromShape)(t),r);return a.ENGINE.makeTensor(s,t,r)});var a=s("38WwN"),n=(s("8cCb2"),s("8cCb2")),o=s("20oDZ"),i=s("hxi4c")}),o("hxi4c",function(t,r){e(t.exports,"zeros",()=>function e(t,r="float32"){if((0,n.assertNonNegativeIntegerDimensions)(t),"complex64"===r){let r=e(t,"float32"),a=e(t,"float32");return(0,o.complex)(r,a)}let s=(0,n.makeZerosTypedArray)((0,n.sizeFromShape)(t),r);return a.ENGINE.makeTensor(s,t,r)});var a=s("38WwN"),n=s("8cCb2"),o=s("20oDZ")}),o("6V8xR",function(t,r){e(t.exports,"minimum",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO"),u=s("inFmq");let p=(0,s("jqSCG").op)({minimum_:function(e,t){let r=(0,i.convertToTensor)(e,"a","minimum"),s=(0,i.convertToTensor)(t,"b","minimum");[r,s]=(0,o.makeTypesMatch)(r,s),"bool"===r.dtype&&(r=(0,u.cast)(r,"int32"),s=(0,u.cast)(s,"int32")),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let p={a:r,b:s};return a.ENGINE.runKernel(n.Minimum,p)}})}),o("ejlRR",function(t,r){e(t.exports,"mirrorPad",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({mirrorPad_:function(e,t,r){i.assert("reflect"===r||"symmetric"===r,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${r}.`);let s=(0,o.convertToTensor)(e,"x","mirrorPad");if(0===s.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.assert(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let l=+("reflect"===r);for(let e=0;e<s.rank;e++)i.assert(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.assert(t[e][0]>=0&&t[e][0]<=s.shape[e]-l&&t[e][1]>=0&&t[e][1]<=s.shape[e]-l,()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-l} or less than 0 for input of shape ${s.shape}`);return a.ENGINE.runKernel(n.MirrorPad,{x:s},{paddings:t,mode:r})}})}),o("jR4my",function(t,r){e(t.exports,"mod",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk");let l=(0,s("jqSCG").op)({mod_:function(e,t){let r=(0,i.convertToTensor)(e,"a","mod"),s=(0,i.convertToTensor)(t,"b","mod");[r,s]=(0,o.makeTypesMatch)(r,s);let l={a:r,b:s};return a.ENGINE.runKernel(n.Mod,l)}})}),o("jV1KY",function(t,r){e(t.exports,"moments",()=>h);var a=s("5xBLk"),n=s("8cCb2"),o=s("kTunp"),i=s("inFmq"),l=s("67GCc"),u=s("jqSCG"),p=s("4sqA7"),d=s("iDd8d"),c=s("7kouu");let h=(0,u.op)({moments_:function(e,t=null,r=!1){e=(0,a.convertToTensor)(e,"x","moments");let s=(0,n.parseAxisParam)(t,e.shape),u=(0,l.mean)(e,s,r),h=u.shape;r||(h=(0,o.expandShapeToKeepDim)(u.shape,s));let f=(0,d.square)((0,c.sub)((0,i.cast)(e,"float32"),(0,p.reshape)(u,h)));return{mean:u,variance:(0,l.mean)(f,s,r)}}})}),o("culYm",function(t,r){e(t.exports,"multiRNNCell",()=>n);var a=s("5xBLk");let n=(0,s("jqSCG").op)({multiRNNCell_:function(e,t,r,n){let s=(0,a.convertToTensor)(t,"data","multiRNNCell"),o=(0,a.convertToTensorArray)(r,"c","multiRNNCell"),i=(0,a.convertToTensorArray)(n,"h","multiRNNCell"),l=s,u=[];for(let t=0;t<e.length;t++){let r=e[t](l,o[t],i[t]);u.push(r[0]),u.push(r[1]),l=r[1]}let p=[],d=[];for(let e=0;e<u.length;e+=2)p.push(u[e]),d.push(u[e+1]);return[p,d]}})}),o("b2OB7",function(t,r){e(t.exports,"multinomial",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("jqSCG"),l=s("4sqA7");let u=(0,i.op)({multinomial_:function(e,t,r,s=!1){let i=(0,o.convertToTensor)(e,"logits","multinomial"),u=i.size,p=i.rank;if(u<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(p>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${p}`);r=r||Math.random();let d=1===p?(0,l.reshape)(i,[1,-1]):i,c={numSamples:t,seed:r,normalized:s},h=a.ENGINE.runKernel(n.Multinomial,{logits:d},c);return 1===p?(0,l.reshape)(h,[h.size]):h}})}),o("8WSnu",function(t,r){e(t.exports,"notEqual",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({notEqual_:function(e,t){let r=(0,i.convertToTensor)(e,"a","notEqual","string_or_numeric"),s=(0,i.convertToTensor)(t,"b","notEqual","string_or_numeric");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.NotEqual,u)}})}),o("67iid",function(t,r){e(t.exports,"onesLike",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({onesLike_:function(e){let t=(0,o.convertToTensor)(e,"x","onesLike");return a.ENGINE.runKernel(n.OnesLike,{x:t})}})}),o("8lsKt",function(t,r){e(t.exports,"outerProduct",()=>u);var a=s("5xBLk"),n=s("8cCb2"),o=s("aUFou"),i=s("jqSCG"),l=s("4sqA7");let u=(0,i.op)({outerProduct_:function(e,t){let r=(0,a.convertToTensor)(e,"v1","outerProduct"),s=(0,a.convertToTensor)(t,"v2","outerProduct");n.assert(1===r.rank&&1===s.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${r.rank} and ${s.rank}.`);let i=(0,l.reshape)(r,[-1,1]),u=(0,l.reshape)(s,[1,-1]);return(0,o.matMul)(i,u)}})}),o("fSZF6",function(t,r){e(t.exports,"pad",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({pad_:function(e,t,r=0){let s=(0,o.convertToTensor)(e,"x","pad");if(0===s.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return a.ENGINE.runKernel(n.PadV2,{x:s},{paddings:t,constantValue:r})}})}),o("d3x5E",function(t,r){e(t.exports,"pad1d",()=>i);var a=s("8cCb2"),n=s("jqSCG"),o=s("fSZF6");let i=(0,n.op)({pad1d_:function(e,t,r=0){return(0,a.assert)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),(0,o.pad)(e,[t],r)}})}),o("lbRCf",function(t,r){e(t.exports,"pad2d",()=>i);var a=s("8cCb2"),n=s("jqSCG"),o=s("fSZF6");let i=(0,n.op)({pad2d_:function(e,t,r=0){return(0,a.assert)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,o.pad)(e,t,r)}})}),o("kZSbJ",function(t,r){e(t.exports,"pad3d",()=>i);var a=s("8cCb2"),n=s("jqSCG"),o=s("fSZF6");let i=(0,n.op)({pad3d_:function(e,t,r=0){return(0,a.assert)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,o.pad)(e,t,r)}})}),o("ghY1H",function(t,r){e(t.exports,"pad4d",()=>i);var a=s("8cCb2"),n=s("jqSCG"),o=s("fSZF6");let i=(0,n.op)({pad4d_:function(e,t,r=0){return(0,a.assert)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,o.pad)(e,t,r)}})}),o("9PaVS",function(t,r){e(t.exports,"pool",()=>h);var a=s("5xBLk"),n=s("8cCb2"),o=s("j4oHC"),i=s("31sZ7"),l=s("frznq"),u=s("gscJF"),p=s("jqSCG"),d=s("4sqA7"),c=s("ePI8Y");let h=(0,p.op)({pool_:function(e,t,r,s,p,h,f){let m;null==p&&(p=[1,1]),null==h&&(h=1),0===s&&(s="valid");let g=(0,a.convertToTensor)(e,"x","maxPool"),x=g,y=!1;3===g.rank&&(y=!0,x=(0,d.reshape)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),n.assert(l.eitherStridesOrDilationsAreOne(h,p),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`);let b=l.computePool2DInfo(x.shape,t,h,p,s),v=[b.dilationHeight,b.dilationWidth];m="same"===s?function(e,t){let r=e.map((e,r)=>e+(e-1)*(t[r]-1)).map(e=>e-1),a=r.map(e=>Math.floor(e/2)),n=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],n[t]])}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];let k=1===v[0]&&1===v[1],[N,C]=function(e,t,r){let a=r.map(e=>e[0]),n=r.map(e=>e[1]),s=e.concat(a,n),o=t.map((e,t)=>(e-s[t]%e)%e),i=n.map((e,t)=>e+o[t]);return[t.map((e,t)=>[a[t],i[t]]),t.map((e,t)=>[0,o[t]])]}([b.inHeight,b.inWidth],v,m),T=k?s:"valid",S=k?x:(0,c.spaceToBatchND)(x,v,N),I=("avg"===r?()=>(0,o.avgPool)(S,t,h,T,f):()=>(0,u.maxPool)(S,t,h,T,f))(),w=k?I:(0,i.batchToSpaceND)(I,v,C);return y?(0,d.reshape)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})}),o("ePI8Y",function(t,r){e(t.exports,"spaceToBatchND",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({spaceToBatchND_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","spaceToBatchND");return i.assert(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),i.assert(r.length===t.length,()=>`paddings.shape[0] ${r.length} must be equal to [blockShape] ${t.length}`),i.assert(s.shape.reduce((e,a,n)=>n>0&&n<=t.length?e&&(a+r[n-1][0]+r[n-1][1])%t[n-1]==0:e,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${r.toString()} must be divisible by blockShapes ${t.toString()}`),a.ENGINE.runKernel(n.SpaceToBatchND,{x:s},{blockShape:t,paddings:r})}})}),o("a3pvF",function(t,r){e(t.exports,"prelu",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({prelu_:function(e,t){let r=(0,o.convertToTensor)(e,"x","prelu"),s=(0,o.convertToTensor)(t,"alpha","prelu");return a.ENGINE.runKernel(n.Prelu,{x:r,alpha:s})}})}),o("bWQC3",function(t,r){e(t.exports,"prod",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("inFmq");let l=(0,s("jqSCG").op)({prod_:function(e,t=null,r=!1){let s=(0,o.convertToTensor)(e,"x","prod");"bool"===s.dtype&&(s=(0,i.cast)(s,"int32"));let l={x:s};return a.ENGINE.runKernel(n.Prod,l,{axis:t,keepDims:r})}})}),o("3MjiG",function(t,r){e(t.exports,"raggedGather",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({raggedGather_:function(e,t,r,s){let i=e.map((e,t)=>(0,o.convertToTensor)(e,`tensors${t}`,"raggedGather","int32")),l=(0,o.convertToTensor)(t,"paramsDenseValues","raggedGather"),u=(0,o.convertToTensor)(r,"indices","raggedGather","int32"),p=a.ENGINE.runKernel(n.RaggedGather,{paramsNestedSplits:i,paramsDenseValues:l,indices:u},{outputRaggedRank:s});return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}})}),o("6df7Q",function(t,r){e(t.exports,"raggedRange",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({raggedRange_:function(e,t,r){let s=(0,o.convertToTensor)(e,"starts","raggedRange"),i=(0,o.convertToTensor)(t,"limits","raggedRange",s.dtype),l=(0,o.convertToTensor)(r,"deltas","raggedRange",s.dtype),u=a.ENGINE.runKernel(n.RaggedRange,{starts:s,limits:i,deltas:l});return{rtNestedSplits:u[0],rtDenseValues:u[1]}}})}),o("hRiiN",function(t,r){e(t.exports,"raggedTensorToTensor",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({raggedTensorToTensor_:function(e,t,r,s,i){let l=(0,o.convertToTensor)(e,"shape","raggedTensorToTensor","int32"),u=(0,o.convertToTensor)(t,"values","raggedTensorToTensor"),p=(0,o.convertToTensor)(r,"defaultValue","raggedTensorToTensor",u.dtype),d=s.map((e,t)=>(0,o.convertToTensor)(e,`tensors${t}`,"raggedTensorToTensor","int32"));return a.ENGINE.runKernel(n.RaggedTensorToTensor,{shape:l,values:u,defaultValue:p,rowPartitionTensors:d},{rowPartitionTypes:i})}})}),o("bTXL0",function(t,r){e(t.exports,"rand",()=>o);var a=s("38WwN"),n=(s("8cCb2"),s("8cCb2"));let o=(0,s("jqSCG").op)({rand_:function(e,t,r){(0,n.assertNonNegativeIntegerDimensions)(e);let s=(0,n.sizeFromShape)(e),o=null;if(null==r||"float32"===r)o=new Float32Array(s);else if("int32"===r)o=new Int32Array(s);else if("bool"===r)o=new Uint8Array(s);else throw Error(`Unknown data type ${r}`);for(let e=0;e<s;e++)o[e]=t();return a.ENGINE.makeTensor(o,e,r)}})}),o("SB4J3",function(t,r){e(t.exports,"randomGamma",()=>l);var a=s("8cCb2"),n=s("iG87S"),o=s("jqSCG"),i=s("7QK6b");let l=(0,o.op)({randomGamma_:function(e,t,r=1,s="float32",o){if((0,a.assertNonNegativeIntegerDimensions)(e),null==r&&(r=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw Error(`Unsupported data type ${s}`);let l=new(0,i.RandGamma)(t,r,s,o),u=(0,n.buffer)(e,s);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),o("7QK6b",function(t,r){e(t.exports,"MPRandGauss",()=>n),e(t.exports,"RandGamma",()=>o),e(t.exports,"UniformRandom",()=>i);var a=s("3mnBW");s("6thPa");class n{constructor(e,t,r,n,s){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let o=s||Math.random();this.random=a.alea(o.toString())}nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let r=!1;for(;!r;){let a,n,s;do s=(a=2*this.random()-1)*a+(n=2*this.random()-1)*n;while(s>=1||0===s)let o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*n*o,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class o{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;let o=s||Math.random();this.randu=a.alea(o.toString()),this.randn=new n(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,a,n,s;for(;;){do a=this.randn.nextValue(),s=1+this.c*a;while(s<=0)if(s*=s*s,t=1-.331*(e=a*a)*e,r=.5*e+this.d*(1-s+Math.log(s)),(n=this.randu())<t||Math.log(n)<r)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,r,n){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=r,null==n&&(n=Math.random()),"number"==typeof n&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=a.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}}),o("3mnBW",function(e,t){var r=s("cmoHh"),a=s("euRi5"),n=s("hDsEw"),o=s("3J2Zm"),i=s("6Px8M"),l=s("lDm0S"),u=s("ixfky");u.alea=r,u.xor128=a,u.xorwow=n,u.xorshift7=o,u.xor4096=i,u.tychei=l,e.exports=u}),o("cmoHh",function(e,t){!function(e,t,r){function a(e){var t,r=this,a=(t=0xefc8249d,function(e){e=String(e);for(var r=0;r<e.length;r++){var a=.02519603282416938*(t+=e.charCodeAt(r));t=a>>>0,a-=t,a*=t,t=a>>>0,a-=t,t+=0x100000000*a}return(t>>>0)*23283064365386963e-26});r.next=function(){var e=2091639*r.s0+23283064365386963e-26*r.c;return r.s0=r.s1,r.s1=r.s2,r.s2=e-(r.c=0|e)},r.c=1,r.s0=a(" "),r.s1=a(" "),r.s2=a(" "),r.s0-=a(e),r.s0<0&&(r.s0+=1),r.s1-=a(e),r.s1<0&&(r.s1+=1),r.s2-=a(e),r.s2<0&&(r.s2+=1)}function n(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var r=new a(e),s=t&&t.state,o=r.next;return o.int32=function(){return 0x100000000*r.next()|0},o.double=function(){return o()+(2097152*o()|0)*11102230246251565e-32},o.quick=o,s&&("object"==typeof s&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.alea=s}(0,e,"function"==typeof define&&define)}),o("euRi5",function(e,t){!function(e,t,r){function a(e){var t=this,r="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:r+=e;for(var a=0;a<r.length+64;a++)t.x^=r.charCodeAt(a),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var r=new a(e),s=t&&t.state,o=function(){return(r.next()>>>0)/0x100000000};return o.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a)return a},o.int32=r.next,o.quick=o,s&&("object"==typeof s&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xor128=s}(0,e,"function"==typeof define&&define)}),o("hDsEw",function(e,t){!function(e,t,r){function a(e){var t=this,r="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:r+=e;for(var a=0;a<r.length+64;a++)t.x^=r.charCodeAt(a),a==r.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var r=new a(e),s=t&&t.state,o=function(){return(r.next()>>>0)/0x100000000};return o.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a)return a},o.int32=r.next,o.quick=o,s&&("object"==typeof s&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xorwow=s}(0,e,"function"==typeof define&&define)}),o("3J2Zm",function(e,t){!function(e,t,r){function a(e){var t=this;t.next=function(){var e,r,a=t.x,n=t.i;return e=a[n],e^=e>>>7,r=e^e<<24^((e=a[n+1&7])^e>>>10)^((e=a[n+3&7])^e>>>3)^((e=a[n+4&7])^e<<7),e=a[n+7&7],e^=e<<13,r^=e^e<<9,a[n]=r,t.i=n+1&7,r};var r,a=e,n=[];if(a===(0|a))n[0]=a;else for(r=0,a=""+a;r<a.length;++r)n[7&r]=n[7&r]<<15^a.charCodeAt(r)+n[r+1&7]<<13;for(;n.length<8;)n.push(0);for(r=0;r<8&&0===n[r];++r);for(8==r?n[7]=-1:n[r],t.x=n,t.i=0,r=256;r>0;--r)t.next()}function n(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var r=new a(e),s=t&&t.state,o=function(){return(r.next()>>>0)/0x100000000};return o.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a)return a},o.int32=r.next,o.quick=o,s&&(s.x&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xorshift7=s}(0,e,"function"==typeof define&&define)}),o("6Px8M",function(e,t){!function(e,t,r){function a(e){var t=this;t.next=function(){var e,r,a=t.w,n=t.X,s=t.i;return t.w=a=a+0x61c88647|0,r=n[s+34&127],e=n[s=s+1&127],r^=r<<13,e^=e<<17,r^=r>>>15,e^=e>>>12,r=n[s]=r^e,t.i=s,r+(a^a>>>16)|0},!function(e,t){var r,a,n,s,o,i=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),n=0,s=-32;s<l;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+0x61c88647|0,n=0==(r=i[127&s]^=a+o)?n+1:0);for(n>=128&&(i[127&(t&&t.length||0)]=-1),n=127,s=512;s>0;--s)a=i[n+34&127],r=i[n=n+1&127],a^=a<<13,r^=r<<17,a^=a>>>15,r^=r>>>12,i[n]=a^r;e.w=o,e.X=i,e.i=n}(t,e)}function n(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var r=new a(e),s=t&&t.state,o=function(){return(r.next()>>>0)/0x100000000};return o.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a)return a},o.int32=r.next,o.quick=o,s&&(s.X&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xor4096=s}(0,e,"function"==typeof define&&define)}),o("lDm0S",function(e,t){!function(e,t,r){function a(e){var t=this,r="";t.next=function(){var e=t.b,r=t.c,a=t.d,n=t.a;return e=e<<25^e>>>7^r,r=r-a|0,a=a<<24^a>>>8^n,n=n-e|0,t.b=e=e<<20^e>>>12^r,t.c=r=r-a|0,t.d=a<<16^r>>>16^n,t.a=n-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):r+=e;for(var a=0;a<r.length+20;a++)t.b^=r.charCodeAt(a),t.next()}function n(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var r=new a(e),s=t&&t.state,o=function(){return(r.next()>>>0)/0x100000000};return o.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a)return a},o.int32=r.next,o.quick=o,s&&("object"==typeof s&&n(s,r),o.state=function(){return n(r,{})}),o}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.tychei=s}(0,e,"function"==typeof define&&define)}),o("ixfky",function(e,t){!function(t,r,a){var n,o="random",i=a.pow(256,6),l=a.pow(2,52),u=2*l;function p(e,s,p){var m=[],g=h(function e(t,r){var a,n=[],s=typeof t;if(r&&"object"==s)for(a in t)try{n.push(e(t[a],r-1))}catch(e){}return n.length?n:"string"==s?t:t+"\0"}((s=!0==s?{entropy:!0}:s||{}).entropy?[e,f(r)]:null==e?function(){try{var e;return n&&(e=n.randomBytes)?e=e(256):(e=new Uint8Array(256),(t.crypto||t.msCrypto).getRandomValues(e)),f(e)}catch(e){var a=t.navigator,s=a&&a.plugins;return[+new Date,t,s,t.screen,f(r)]}}():e,3),m),x=new d(m),y=function(){for(var e=x.g(6),t=i,r=0;e<l;)e=(e+r)*256,t*=256,r=x.g(1);for(;e>=u;)e/=2,t/=2,r>>>=1;return(e+r)/t};return y.int32=function(){return 0|x.g(4)},y.quick=function(){return x.g(4)/0x100000000},y.double=y,h(f(x.S),r),(s.pass||p||function(e,t,r,n){return(n&&(n.S&&c(n,x),e.state=function(){return c(x,{})}),r)?(a[o]=e,t):e})(y,g,"global"in s?s.global:this==a,s.state)}function d(e){var t,r=e.length,a=this,n=0,s=a.i=a.j=0,o=a.S=[];for(r||(e=[r++]);n<256;)o[n]=n++;for(n=0;n<256;n++)o[n]=o[s=255&s+e[n%r]+(t=o[n])],o[s]=t;(a.g=function(e){for(var t,r=0,n=a.i,s=a.j,o=a.S;e--;)t=o[n=255&n+1],r=256*r+o[255&(o[n]=o[s=255&s+t])+(o[s]=t)];return a.i=n,a.j=s,r})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var r,a=e+"",n=0;n<a.length;)t[255&n]=255&(r^=19*t[255&n])+a.charCodeAt(n++);return f(t)}function f(e){return String.fromCharCode.apply(0,e)}if(h(a.random(),r),e.exports){e.exports=p;try{n=s("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define(function(){return p}):a["seed"+o]=p}("undefined"!=typeof self?self:e.exports,[],Math)}),o("h2Vnz",function(t,r){e(t.exports,"randomNormal",()=>l);var a=s("8cCb2"),n=s("iG87S"),o=s("jqSCG"),i=s("7QK6b");let l=(0,o.op)({randomNormal_:function(e,t=0,r=1,s,o){if((0,a.assertNonNegativeIntegerDimensions)(e),null!=s&&"bool"===s)throw Error(`Unsupported data type ${s}`);let l=new(0,i.MPRandGauss)(t,r,s,!1,o),u=(0,n.buffer)(e,s);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),o("kVqJN",function(t,r){e(t.exports,"randomStandardNormal",()=>o);var a=s("jqSCG"),n=s("h2Vnz");let o=(0,a.op)({randomStandardNormal_:function(e,t,r){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return(0,n.randomNormal)(e,0,1,t,r)}})}),o("j8sic",function(t,r){e(t.exports,"randomUniform",()=>l);var a=s("8cCb2"),n=s("iG87S"),o=s("jqSCG"),i=s("7QK6b");let l=(0,o.op)({randomUniform_:function(e,t=0,r=1,s="float32",o){(0,a.assertNonNegativeIntegerDimensions)(e);let l=(0,n.buffer)(e,s),u=new(0,i.UniformRandom)(t,r,null,o);for(let e=0;e<l.values.length;e++)l.values[e]=u.nextValue();return l.toTensor()}})}),o("edlzT",function(t,r){e(t.exports,"randomUniformInt",()=>o);var a=s("jqSCG"),n=s("j8sic");let o=(0,a.op)({randomUniformInt_:function(e,t,r,a){return(0,n.randomUniform)(e,t,r,"int32",a)}})}),o("80Ety",function(t,r){e(t.exports,"range",()=>o);var a=s("38WwN"),n=s("hl418");function o(e,t,r=1,s="float32"){if(0===r)throw Error("Cannot have a step of zero");return a.ENGINE.runKernel(n.Range,{},{start:e,stop:t,step:r,dtype:s})}}),o("3aqJ6",function(t,r){e(t.exports,"reciprocal",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({reciprocal_:function(e){let t=(0,o.convertToTensor)(e,"x","reciprocal");return a.ENGINE.runKernel(n.Reciprocal,{x:t})}})}),o("8wbQq",function(t,r){e(t.exports,"relu",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({relu_:function(e){let t=(0,o.convertToTensor)(e,"x","relu");return a.ENGINE.runKernel(n.Relu,{x:t})}})}),o("fvNYr",function(t,r){e(t.exports,"relu6",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({relu6_:function(e){let t=(0,o.convertToTensor)(e,"x","relu6");return a.ENGINE.runKernel(n.Relu6,{x:t})}})}),o("6act6",function(t,r){e(t.exports,"reverse",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({reverse_:function(e,t){let r=(0,o.convertToTensor)(e,"x","reverse");return a.ENGINE.runKernel(n.Reverse,{x:r},{dims:t})}})}),o("2KcE1",function(t,r){e(t.exports,"reverse1d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("6act6");let l=(0,o.op)({reverse1d_:function(e){let t=(0,a.convertToTensor)(e,"x","reverse");return n.assert(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),(0,i.reverse)(t,0)}})}),o("8EvRg",function(t,r){e(t.exports,"reverse2d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("6act6");let l=(0,o.op)({reverse2d_:function(e,t){let r=(0,a.convertToTensor)(e,"x","reverse");return n.assert(2===r.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${r.rank}.`),(0,i.reverse)(r,t)}})}),o("c9r0k",function(t,r){e(t.exports,"reverse3d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("6act6");let l=(0,o.op)({reverse3d_:function(e,t){let r=(0,a.convertToTensor)(e,"x","reverse");return n.assert(3===r.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${r.rank}.`),(0,i.reverse)(r,t)}})}),o("bFrHw",function(t,r){e(t.exports,"reverse4d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("6act6");let l=(0,o.op)({reverse4d_:function(e,t){let r=(0,a.convertToTensor)(e,"x","reverse");return n.assert(4===r.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${r.rank}.`),(0,i.reverse)(r,t)}})}),o("9YKoa",function(t,r){e(t.exports,"round",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({round_:function(e){let t=(0,o.convertToTensor)(e,"x","round");return a.ENGINE.runKernel(n.Round,{x:t})}})}),o("5pj7R",function(t,r){e(t.exports,"rsqrt",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({rsqrt_:function(e){let t=(0,o.convertToTensor)(e,"x","rsqrt","float32");return a.ENGINE.runKernel(n.Rsqrt,{x:t})}})}),o("b636r",function(t,r){e(t.exports,"selu",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({selu_:function(e){let t=(0,o.convertToTensor)(e,"x","selu");return a.ENGINE.runKernel(n.Selu,{x:t})}})}),o("8uLn4",function(t,r){e(t.exports,"separableConv2d",()=>p);var a=s("5xBLk"),n=s("8cCb2"),o=s("5Nkm1"),i=s("182Rc"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({separableConv2d_:function(e,t,r,s,l,p=[1,1],d="NHWC"){let c=(0,a.convertToTensor)(e,"x","separableConv2d"),h=(0,a.convertToTensor)(t,"depthwiseFilter","separableConv2d"),f=(0,a.convertToTensor)(r,"pointwiseFilter","separableConv2d"),m=c,g=!1;if(3===c.rank&&(g=!0,m=(0,u.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),"NCHW"===d)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");n.assert(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),n.assert(4===h.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`),n.assert(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`),n.assert(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),n.assert(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);let x=h.shape[2],y=h.shape[3];n.assert(f.shape[2]===x*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${x*y}, but got ${f.shape[2]}.`);let b=(0,i.depthwiseConv2d)(m,h,s,l,d,p),v=(0,o.conv2d)(b,f,1,"valid",d);return g?(0,u.reshape)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})}),o("d05b8",function(t,r){e(t.exports,"setdiff1dAsync",()=>i);var a=s("9jCh7"),n=s("5xBLk"),o=s("8cCb2");let i=async function(e,t){let r=(0,n.convertToTensor)(e,"x","setdiff1d"),s=(0,n.convertToTensor)(t,"y","setdiff1d");o.assert(r.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${r.dtype}) and y (${s.dtype}).`),o.assert(1===r.rank,()=>`x should be 1D tensor, but got x (${r.shape}).`),o.assert(1===s.rank,()=>`y should be 1D tensor, but got y (${s.shape}).`);let i=await r.data(),l=new Set(await s.data()),u=0;for(let e=0;e<i.length;e++)!l.has(i[e])&&u++;let p=new(0,a.TensorBuffer)([u],r.dtype),d=new(0,a.TensorBuffer)([u],"int32");for(let e=0,t=0;e<i.length;e++)!l.has(i[e])&&(p.values[t]=i[e],d.values[t]=e,t++);return[p.toTensor(),d.toTensor()]}}),o("3zBCT",function(t,r){e(t.exports,"sign",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sign_:function(e){let t=(0,o.convertToTensor)(e,"x","sign");return a.ENGINE.runKernel(n.Sign,{x:t})}})}),o("4xqM7",function(t,r){e(t.exports,"sin",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sin_:function(e){let t=(0,o.convertToTensor)(e,"x","sin","float32");return a.ENGINE.runKernel(n.Sin,{x:t})}})}),o("fAOzm",function(t,r){e(t.exports,"sinh",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sinh_:function(e){let t=(0,o.convertToTensor)(e,"x","sinh");return a.ENGINE.runKernel(n.Sinh,{x:t})}})}),o("5vfHb",function(t,r){e(t.exports,"slice1d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("79KOG");let l=(0,o.op)({slice1d_:function(e,t,r){let s=(0,a.convertToTensor)(e,"x","slice1d");return n.assert(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),(0,i.slice)(s,[t],[r])}})}),o("gKBEV",function(t,r){e(t.exports,"slice2d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("79KOG");let l=(0,o.op)({slice2d_:function(e,t,r){let s=(0,a.convertToTensor)(e,"x","slice2d");return n.assert(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),(0,i.slice)(s,t,r)}})}),o("22oMq",function(t,r){e(t.exports,"slice3d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("79KOG");let l=(0,o.op)({slice3d_:function(e,t,r){let s=(0,a.convertToTensor)(e,"x","slice3d");return n.assert(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),(0,i.slice)(s,t,r)}})}),o("8hEpb",function(t,r){e(t.exports,"slice4d",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("79KOG");let l=(0,o.op)({slice4d_:function(e,t,r){let s=(0,a.convertToTensor)(e,"x","slice4d");return n.assert(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),(0,i.slice)(s,t,r)}})}),o("dnEu5",function(t,r){e(t.exports,"softmax",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({softmax_:function(e,t=-1){let r=(0,o.convertToTensor)(e,"logits","softmax","float32");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and dim was ${t}`);let s={dim:t};return a.ENGINE.runKernel(n.Softmax,{logits:r},s)}})}),o("1Lg9u",function(t,r){e(t.exports,"fft",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("8cCb2");let i=(0,s("jqSCG").op)({fft_:function(e){return(0,o.assert)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),a.ENGINE.runKernel(n.FFT,{input:e})}})}),o("3l9Cr",function(t,r){e(t.exports,"ifft",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("8cCb2");let i=(0,s("jqSCG").op)({ifft_:function(e){return(0,o.assert)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),a.ENGINE.runKernel(n.IFFT,{input:e})}})}),o("hrsi6",function(t,r){e(t.exports,"irfft",()=>m);var a=s("20oDZ"),n=s("iTu6j"),o=s("1d8KH"),i=s("jZc0w"),l=s("jqSCG"),u=s("b7x1G"),p=s("4sqA7"),d=s("6act6"),c=s("3xp7o"),h=s("79KOG"),f=s("3l9Cr");let m=(0,l.op)({irfft_:function(e){let t,r=e.shape[e.shape.length-1],s=e.size/r;if(r<=2){let a=(0,p.reshape)(e,[s,r]);t=(0,f.ifft)(a)}else{let l=[s,2*(r-1)],m=(0,p.reshape)((0,u.real)(e),[s,r]),g=(0,p.reshape)((0,o.imag)(e),[s,r]),x=(0,d.reverse)((0,h.slice)(m,[0,1],[s,r-2]),1),y=(0,i.mul)((0,d.reverse)((0,h.slice)(g,[0,1],[s,r-2]),1),(0,c.scalar)(-1)),b=(0,n.concat)([m,x],1),v=(0,n.concat)([g,y],1),k=(0,p.reshape)((0,a.complex)(b,v),[l[0],l[1]]);t=(0,f.ifft)(k)}if(t=(0,u.real)(t),3===e.rank&&0!==e.shape[0]){let r=t,a=e.shape[0];t=(0,p.reshape)(t,[a,t.shape[0]/a,t.shape[1]]),r.dispose()}return t}})}),o("cafDa",function(t,r){e(t.exports,"rfft",()=>g);var a=s("8cCb2"),n=s("20oDZ"),o=s("iTu6j"),i=s("1d8KH"),l=s("jqSCG"),u=s("b7x1G"),p=s("4sqA7"),d=s("79KOG"),c=s("9fmAX"),h=s("hxi4c"),f=s("8EjnK"),m=s("1Lg9u");let g=(0,l.op)({rfft_:function(e,t){let r;(0,a.assert)("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let s=e.shape[e.shape.length-1],l=e.size/s;if(null!=t&&t<s){let a=e.shape.map(e=>0),n=e.shape.map(e=>e);n[e.shape.length-1]=t,r=(0,d.slice)(e,a,n),s=t}else if(null!=t&&t>s){let a=e.shape.map(e=>e);a[e.shape.length-1]=t-s,r=(0,o.concat)([e,(0,h.zeros)(a)],e.shape.length-1),s=t}else r=e;let g=(0,f.zerosLike)(r),x=(0,p.reshape)((0,n.complex)(r,g),[l,s]),y=(0,m.fft)(x),b=Math.floor(s/2)+1,v=(0,u.real)(y),k=(0,i.imag)(y),N=(0,c.split)(v,[b,s-b],v.shape.length-1),C=(0,c.split)(k,[b,s-b],k.shape.length-1),T=r.shape.slice();return T[r.shape.length-1]=b,(0,p.reshape)((0,n.complex)(N[0],C[0]),T)}})}),o("9fmAX",function(t,r){e(t.exports,"split",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({split_:function(e,t,r=0){let s=(0,o.convertToTensor)(e,"x","split");return a.ENGINE.runKernel(n.SplitV,{x:s},{numOrSizeSplits:t,axis:r})}})}),o("ay2Nw",function(t,r){e(t.exports,"squaredDifference",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("3w4Rg"),i=s("5xBLk"),l=s("8BaGO");let u=(0,s("jqSCG").op)({squaredDifference_:function(e,t){let r=(0,i.convertToTensor)(e,"a","squaredDifference"),s=(0,i.convertToTensor)(t,"b","squaredDifference");[r,s]=(0,o.makeTypesMatch)(r,s),(0,l.assertAndGetBroadcastShape)(r.shape,s.shape);let u={a:r,b:s};return a.ENGINE.runKernel(n.SquaredDifference,u,{})}})}),o("kX8Hd",function(t,r){e(t.exports,"squeeze",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("4sqA7");let l=(0,o.op)({squeeze_:function(e,t){let r=(0,a.convertToTensor)(e,"x","squeeze","string_or_numeric");return(0,i.reshape)(r,(0,n.squeezeShape)(r.shape,t).newShape)}})}),o("8BrLX",function(t,r){e(t.exports,"stack",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({stack_:function(e,t=0){let r=(0,o.convertToTensorArray)(e,"tensors","stack","string_or_numeric");return i.assert(r.length>=1,()=>"Pass at least one tensor to tf.stack"),r.length>0&&i.assert(t<=r[0].rank,()=>"Axis must be <= rank of the tensor"),a.ENGINE.runKernel(n.Pack,r,{axis:t})}})}),o("lWdx1",function(t,r){e(t.exports,"step",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({step_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","step");return a.ENGINE.runKernel(n.Step,{x:r},{alpha:t})}})}),o("dqRnt",function(t,r){e(t.exports,"stridedSlice",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({stridedSlice_:function(e,t,r,s,i=0,l=0,u=0,p=0,d=0){let c=(0,o.convertToTensor)(e,"x","stridedSlice","string_or_numeric");return a.ENGINE.runKernel(n.StridedSlice,{x:c},{begin:t,end:r,strides:s,beginMask:i,endMask:l,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:d})}})}),o("l8Hok",function(t,r){e(t.exports,"tan",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({tan_:function(e){let t=(0,o.convertToTensor)(e,"x","tan","float32");return a.ENGINE.runKernel(n.Tan,{x:t})}})}),o("lalFM",function(t,r){e(t.exports,"tensor1d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t){(0,n.assertNonNull)(e);let r=(0,a.inferShape)(e,t);if(1!==r.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return(0,o.makeTensor)(e,null,r,t)}}),o("gmMlv",function(t,r){e(t.exports,"tensor2d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t,r){if((0,n.assertNonNull)(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let s=(0,a.inferShape)(e,r);if(2!==s.length&&1!==s.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,o.makeTensor)(e,t,s,r)}}),o("6BSQ6",function(t,r){e(t.exports,"tensor4d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t,r){if((0,n.assertNonNull)(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let s=(0,a.inferShape)(e,r);if(4!==s.length&&1!==s.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,o.makeTensor)(e,t,s,r)}}),o("fjd6b",function(t,r){e(t.exports,"tensor5d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t,r){if((0,n.assertNonNull)(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let s=(0,a.inferShape)(e,r);if(5!==s.length&&1!==s.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,o.makeTensor)(e,t,s,r)}}),o("gCuDf",function(t,r){e(t.exports,"tensor6d",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("dKr4X");function i(e,t,r){if((0,n.assertNonNull)(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let s=(0,a.inferShape)(e,r);if(6!==s.length&&1!==s.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,(0,o.makeTensor)(e,t,s,r)}}),o("4om7p",function(t,r){e(t.exports,"tensorScatterUpdate",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("jqSCG"),l=s("7wQGW");let u=(0,i.op)({tensorScatterUpdate_:function(e,t,r){let s=(0,o.convertToTensor)(e,"tensor","tensorScatterupdate"),i=(0,o.convertToTensor)(t,"indices","tensorScatterupdate","int32"),u=(0,o.convertToTensor)(r,"updates","tensorScatterupdate");if(l.validateInput(u,i,s.shape),s.dtype!==u.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${u.dtype}.`);return a.ENGINE.runKernel(n.TensorScatterUpdate,{tensor:s,indices:i,updates:u},{})}})}),o("cRAvI",function(t,r){e(t.exports,"topk",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({topk_:function(e,t=1,r=!0){let s=(0,o.convertToTensor)(e,"x","topk");if(0===s.rank)throw Error("topk() expects the input to be of rank 1 or higher");let i=s.shape[s.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);let[l,u]=a.ENGINE.runKernel(n.TopK,{x:s},{k:t,sorted:r});return{values:l,indices:u}}})}),o("dE1HO",function(t,r){e(t.exports,"truncatedNormal",()=>l);var a=s("8cCb2"),n=s("iG87S"),o=s("jqSCG"),i=s("7QK6b");let l=(0,o.op)({truncatedNormal_:function(e,t=0,r=1,s,o){if((0,a.assertNonNegativeIntegerDimensions)(e),null!=s&&"bool"===s)throw Error("Unsupported data type $ { dtype }");let l=new(0,i.MPRandGauss)(t,r,s,!0,o),u=(0,n.buffer)(e,s);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),o("aEpp6",function(t,r){e(t.exports,"unique",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({unique_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","unique","string_or_numeric");(0,i.assert)(r.rank>0,()=>"The input tensor must be at least 1D");let[s,l]=a.ENGINE.runKernel(n.Unique,{x:r},{axis:t});return{values:s,indices:l}}})}),o("djGEF",function(t,r){e(t.exports,"unsortedSegmentSum",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({unsortedSegmentSum_:function(e,t,r){let s=(0,o.convertToTensor)(e,"x","unsortedSegmentSum"),l=(0,o.convertToTensor)(t,"segmentIds","unsortedSegmentSum","int32");return(0,i.assert)((0,i.isInt)(r),()=>"numSegments must be of dtype int"),a.ENGINE.runKernel(n.UnsortedSegmentSum,{x:s,segmentIds:l},{numSegments:r})}})}),o("gBOC6",function(t,r){e(t.exports,"unstack",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({unstack_:function(e,t=0){let r=(0,o.convertToTensor)(e,"x","unstack","string_or_numeric");return i.assert(t>=-r.shape.length&&t<r.shape.length,()=>`Axis = ${t} is not in [-${r.shape.length}, ${r.shape.length})`),a.ENGINE.runKernel(n.Unpack,{value:r},{axis:t})}})}),o("igCyu",function(t,r){e(t.exports,"upperBound",()=>n);var a=s("6PrVj");function n(e,t){return(0,a.searchSorted)(e,t,"right")}}),o("eoViB",function(t,r){e(t.exports,"variable",()=>n);var a=s("38WwN");function n(e,t=!0,r,s){return a.ENGINE.makeVariable(e,t,r,s)}}),o("5t2or",function(t,r){e(t.exports,"whereAsync",()=>o);var a=s("kNeGS"),n=s("5xBLk");let o=async function(e){let t=(0,n.convertToTensor)(e,"condition","whereAsync","bool"),r=await t.data(),s=(0,a.whereImpl)(t.shape,r);return e!==t&&t.dispose(),s}}),o("kNeGS",function(t,r){e(t.exports,"whereImpl",()=>n);var a=s("iG87S");function n(e,t){let r=[];for(let e=0;e<t.length;e++)t[e]&&r.push(e);let n=(0,a.buffer)(e,"int32"),s=(0,a.buffer)([r.length,e.length],"int32");for(let t=0;t<r.length;t++){let a=n.indexToLoc(r[t]),o=t*e.length;s.values.set(a,o)}return s.toTensor()}}),o("4xhB2",function(t,r){e(t.exports,"booleanMaskAsync",()=>p);var a=s("5xBLk"),n=s("8cCb2"),o=s("3qUjU"),i=s("4sqA7"),l=s("kX8Hd"),u=s("5t2or");let p=async function(e,t,r){let s=(0,a.convertToTensor)(e,"tensor","boolMask"),p=(0,a.convertToTensor)(t,"mask","boolMask","bool"),d=null==r?0:r,c=p.rank,h=s.shape;n.assert(c>0,()=>"mask cannot be scalar"),n.assertShapesMatch(h.slice(d,d+c),p.shape,"mask's shape must match the first K dimensions of tensor's shape,");let f=1;for(let e=d;e<d+c;e++)f*=h[e];let m=h.slice(0,d).concat([f],h.slice(d+c)),g=(0,i.reshape)(s,m),x=(0,i.reshape)(p,[-1]),y=await (0,u.whereAsync)(x),b=(0,l.squeeze)(y,[1]),v=(0,o.gather)(g,b,d);return e!==s&&s.dispose(),t!==p&&p.dispose(),b.dispose(),g.dispose(),x.dispose(),y.dispose(),v}}),o("gIiMY",function(t,r){e(t.exports,"movingAverage",()=>f);var a=s("3w4Rg"),n=s("5xBLk"),o=s("8cCb2"),i=s("hgacW"),l=s("1QPqB"),u=s("jZc0w"),p=s("jqSCG"),d=s("ad1of"),c=s("3xp7o"),h=s("7kouu");let f=(0,p.op)({movingAverage_:function(e,t,r,s,p=!0){let f=(0,n.convertToTensor)(e,"v","movingAverage"),m=(0,n.convertToTensor)(t,"x","movingAverage"),g=(0,n.convertToTensor)(r,"decay","movingAverage");(0,a.assertTypesMatch)(f,m),o.assert(o.arraysEqual(f.shape,m.shape),()=>"Shape mismatch in v and x");let x=(0,c.scalar)(1),y=(0,h.sub)(x,g),b=(0,u.mul)((0,h.sub)(m,f),y);if(p){o.assert(null!=s,()=>"When using zeroDebias: true, step is required.");let e=(0,n.convertToTensor)(s,"step","movingAverage");b=(0,l.div)(b,(0,h.sub)(x,(0,d.pow)(g,e)))}return(0,i.add)(f,b)}})}),o("4wiJQ",function(t,r){e(t.exports,"scatterND",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("7wQGW");let p=(0,l.op)({scatterND_:function(e,t,r){(0,i.assertNonNegativeIntegerDimensions)(r);let s=(0,o.convertToTensor)(e,"indices","scatterND","int32"),l=(0,o.convertToTensor)(t,"updates","scatterND");return u.validateInput(l,s,r),a.ENGINE.runKernel(n.ScatterNd,{indices:s,updates:l},{shape:r})}})}),o("kMXcY",function(t,r){e(t.exports,"sparseToDense",()=>u);var a=s("38WwN"),n=s("hl418"),o=s("ch6b2"),i=s("5xBLk"),l=s("8cCb2");let u=(0,s("jqSCG").op)({sparseToDense_:function(e,t,r,s=0){(0,l.assertNonNegativeIntegerDimensions)(r);let u=(0,i.convertToTensor)(e,"sparseIndices","sparseToDense","int32"),p=(0,i.convertToTensor)(t,"sparseValues","sparseToDense","string_or_numeric"),d=(0,i.convertToTensor)(s,"defaultValue","sparseToDense",p.dtype);return o.validateInput(u,p,r,d),a.ENGINE.runKernel(n.SparseToDense,{sparseIndices:u,sparseValues:p,defaultValue:d},{outputShape:r})}})}),o("ch6b2",function(t,r){e(t.exports,"validateInput",()=>a);function a(e,t,r,a){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let n=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(r.length!==s)throw Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${s}.`);let o=t.size;if(0!==t.rank&&(1!==t.rank||o!==n))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==a.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}}),o("5FwF9",function(t,r){e(t.exports,"gatherND",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({gatherND_:function(e,t){let r=(0,o.convertToTensor)(t,"indices","gatherND","int32"),s=(0,o.convertToTensor)(e,"x","gatherND","string_or_numeric");return a.ENGINE.runKernel(n.GatherNd,{params:s,indices:r})}})}),o("5kLyC",function(t,r){e(t.exports,"dropout",()=>f);var a=s("9jCh7"),n=s("5xBLk"),o=s("8cCb2"),i=s("hgacW"),l=s("1QPqB"),u=s("273XW"),p=s("4ZUCz"),d=s("jZc0w"),c=s("jqSCG"),h=s("j8sic");let f=(0,c.op)({dropout_:function(e,t,r,s){let c=(0,n.convertToTensor)(e,"x","dropout");if(o.assert("float32"===c.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${c.dtype} tensor instead.`),o.assert(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof a.Tensor?c.clone():c;let f=(0,u.getNoiseShape)(c,r),m=1-t,g=(0,l.div)((0,p.floor)((0,i.add)((0,h.randomUniform)(f,0,1,"float32",s),m)),m);return(0,d.mul)(c,g)}})}),o("273XW",function(t,r){e(t.exports,"getNoiseShape",()=>n);var a=s("8cCb2");function n(e,t){if(null==t)return e.shape.slice();if(a.arraysEqual(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?r.push(e.shape[a]):r.push(t[a]);return r}return t}}),o("j5jow",function(t,r){e(t.exports,"enclosingPowerOfTwo",()=>n),e(t.exports,"cosineWindow",()=>o);var a=s("lalFM");function n(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function o(e,t,r){let n=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+n-1);s[a]=t-r*Math.cos(o)}return(0,a.tensor1d)(s,"float32")}}),o("8mg8Q",function(t,r){e(t.exports,"inTopKAsync",()=>i);var a=s("5xBLk"),n=s("8cCb2"),o=s("erbmM");let i=async function(e,t,r=1){let s=(0,a.convertToTensor)(e,"predictions","inTopK"),i=(0,a.convertToTensor)(t,"targets","inTopK");(0,n.assert)(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),(0,n.assert)(s.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${i.rank}`),(0,n.assertShapesMatch)(s.shape.slice(0,s.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let l=s.shape[s.shape.length-1];(0,n.assert)(r>0&&r<=l,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${l}), but got ${r}`);let u=await s.data(),p=await i.data(),[d,c]=[u.length/l,l],h=(0,n.getTypedArrayFromDType)("bool",d);for(let e=0;e<d;e++){let t=e*c,a=u.subarray(t,t+c),n=[];for(let e=0;e<a.length;e++)n.push({value:a[e],index:e});n.sort((e,t)=>t.value-e.value),h[e]=0;for(let t=0;t<r;t++)if(n[t].index===p[e]){h[e]=1;break}}return e!==s&&s.dispose(),t!==i&&i.dispose(),(0,o.tensor)(h,i.shape,"bool")}}),o("jDZRN",function(t,r){e(t.exports,"conv2d",()=>s("6GXo4").conv2d),e(t.exports,"depthwiseConv2d",()=>s("d71bK").depthwiseConv2d),e(t.exports,"matMul",()=>s("1q6Gm").matMul),s("6GXo4"),s("d71bK"),s("1q6Gm")}),o("6GXo4",function(t,r){e(t.exports,"conv2d",()=>b);var a=s("38WwN"),n=s("92fpA"),o=s("hl418"),i=s("3w4Rg"),l=s("5xBLk"),u=s("8cCb2"),p=s("hgacW"),d=s("8BaGO"),c=s("5Nkm1"),h=s("4Tgmn"),f=s("6eptr"),m=s("frznq"),g=s("bzoAL"),x=s("jqSCG"),y=s("4sqA7");let b=(0,x.op)({fusedConv2d_:function({x:e,filter:t,strides:r,pad:s,dataFormat:x="NHWC",dilations:b=[1,1],dimRoundingMode:v,bias:k,activation:N="linear",preluActivationWeights:C,leakyreluAlpha:T}){let S,I;if(N=N||"linear",!1===(0,g.shouldFuse)(a.ENGINE.state.gradientDepth,N)){u.assert("NHWC"===x,()=>`Error in fused conv2d: got dataFormat of ${x} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let a=(0,c.conv2d)(e,t,r,s,x,b,v);return null!=k&&(a=(0,p.add)(a,k)),(0,g.applyActivation)(a,N,C,T)}let w=(0,l.convertToTensor)(e,"x","conv2d","float32"),E=(0,l.convertToTensor)(t,"filter","conv2d","float32"),A=w,R=!1;3===w.rank&&(R=!0,A=(0,y.reshape)(w,[1,w.shape[0],w.shape[1],w.shape[2]])),u.assert(4===A.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${A.rank}.`),u.assert(4===E.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${E.rank}.`),m.checkPadOnDimRoundingMode("fused conv2d",s,v);let P="NHWC"===x?A.shape[3]:A.shape[1];u.assert(E.shape[2]===P,()=>`Error in conv2d: depth of input (${P}) must match input depth for filter ${E.shape[2]}.`),u.assert(m.eitherStridesOrDilationsAreOne(r,b),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${b}'`);let $=m.computeConv2DInfo(A.shape,E.shape,r,b,s,v);if(null!=k&&(S=(0,l.convertToTensor)(k,"bias","fused conv2d"),[S]=(0,i.makeTypesMatch)(S,w),"NHWC"===x?d.assertAndGetBroadcastShape($.outShape,S.shape):(u.assert(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),u.assert(0===S.shape.length||S.shape[0]===$.outChannels||1===S.shape[0],()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${$.outChannels})`))),null!=C){let e=C.shape;if(u.assert(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)u.assert(1===e[0]||e[0]===$.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${$.outChannels}).`);else if(3===e.length)try{d.assertAndGetBroadcastShape(e,$.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${$.outShape}).`)}I=(0,l.convertToTensor)(C,"prelu weights","fused conv2d")}let F=(e,t)=>{u.assert("NHWC"===x,()=>`Error in gradient of fused conv2D: got dataFormat of ${x} but only NHWC is currently supported.`);let[a,n,o,i]=t,l=(0,g.getFusedDyActivation)(e,o,N);u.assert(m.tupleValuesAreOne(b),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${b}'`);let p=[(0,f.conv2DBackpropInput)(n.shape,l,a,r,s),(0,h.conv2DBackpropFilter)(n,l,a.shape,r,s)];if(null!=i){let e=(0,g.getFusedBiasGradient)(i,l);p.push(e)}return p},B={x:A,filter:E,bias:S,preluActivationWeights:I},D={strides:r,pad:s,dataFormat:x,dilations:b,dimRoundingMode:v,activation:N,leakyreluAlpha:T};return null==k?(0,n.customGrad)((e,t,r)=>{let n=a.ENGINE.runKernel(o.FusedConv2D,B,D);return r([t,e,n]),R&&(n=(0,y.reshape)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:F}})(A,E):(0,n.customGrad)((e,t,r,n)=>{let s=a.ENGINE.runKernel(o.FusedConv2D,B,D);return n([t,e,s,r]),R&&(s=(0,y.reshape)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:F}})(A,E,S)}})}),o("4Tgmn",function(t,r){e(t.exports,"conv2DBackpropFilter",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("8cCb2"),i=s("frznq"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({conv2DBackpropFilter_:function(e,t,r,s,l,p="NHWC",d){let c=e;3===e.rank&&(c=(0,u.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,u.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),o.assert(4===c.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),o.assert(4===h.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`),o.assert(4===r.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${r}.`);let f="NHWC"===p?c.shape[3]:c.shape[1],m="NHWC"===p?h.shape[3]:h.shape[1];o.assert(f===r[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${r[2]}.`),o.assert(m===r[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${r[3]}).`),i.checkPadOnDimRoundingMode("conv2dDerFilter",l,d);let g={x:c,dy:h};return a.ENGINE.runKernel(n.Conv2DBackpropFilter,g,{strides:s,pad:l,dataFormat:p,dimRoundingMode:d,filterShape:r})}})}),o("bzoAL",function(t,r){e(t.exports,"getFusedDyActivation",()=>m),e(t.exports,"getFusedBiasGradient",()=>g),e(t.exports,"applyActivation",()=>x),e(t.exports,"shouldFuse",()=>y);var a=s("8BaGO"),n=s("7UQTl"),o=s("3XskU"),i=s("jZc0w"),l=s("a3pvF"),u=s("8wbQq"),p=s("fvNYr"),d=s("4sqA7"),c=s("jvtSq"),h=s("lWdx1"),f=s("9NgTx");function m(e,t,r){if(null==r||"linear"===r)return e;if("relu"===r)return(0,i.mul)(e,(0,h.step)(t));throw Error(`Cannot compute gradient for fused activation ${r}.`)}function g(e,t){let r=t,n=a.getReductionAxes(e.shape,t.shape);return n.length>0&&(r=(0,f.sum)(r,n)),(0,d.reshape)(r,e.shape)}function x(e,t,r,a){if("linear"===t)return e;if("relu"===t)return(0,u.relu)(e);if("elu"===t)return(0,n.elu)(e);if("relu6"===t)return(0,p.relu6)(e);if("prelu"===t)return(0,l.prelu)(e,r);else if("leakyrelu"===t)return(0,o.leakyRelu)(e,a);else if("sigmoid"===t)return(0,c.sigmoid)(e);throw Error(`Unknown fused activation ${t}.`)}let y=(e,t)=>!(e>0)||"linear"===t}),o("d71bK",function(t,r){e(t.exports,"depthwiseConv2d",()=>b);var a=s("38WwN"),n=s("92fpA"),o=s("hl418"),i=s("3w4Rg"),l=s("5xBLk"),u=s("8cCb2"),p=s("hgacW"),d=s("8BaGO"),c=s("frznq"),h=s("182Rc"),f=s("j2Gyr"),m=s("1C2e1"),g=s("bzoAL"),x=s("jqSCG"),y=s("4sqA7");let b=(0,x.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:r,pad:s,dataFormat:x="NHWC",dilations:b=[1,1],dimRoundingMode:v,bias:k,activation:N="linear",preluActivationWeights:C,leakyreluAlpha:T}){let S,I;if(!1===(0,g.shouldFuse)(a.ENGINE.state.gradientDepth,N)){let a=(0,h.depthwiseConv2d)(e,t,r,s,x,b,v);return null!=k&&(a=(0,p.add)(a,k)),(0,g.applyActivation)(a,N,C,T)}let w=(0,l.convertToTensor)(e,"x","depthwiseConv2d","float32"),E=(0,l.convertToTensor)(t,"filter","depthwiseConv2d","float32"),A=w,R=!1;3===w.rank&&(R=!0,A=(0,y.reshape)(w,[1,w.shape[0],w.shape[1],w.shape[2]])),u.assert(4===A.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${A.rank}.`),u.assert(4===E.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${E.rank}.`),u.assert(A.shape[3]===E.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${A.shape[3]}) must match the inChannels dimension in filter ${E.shape[2]}.`),null==b&&(b=[1,1]),u.assert(c.eitherStridesOrDilationsAreOne(r,b),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${b}'`),c.checkPadOnDimRoundingMode("fused depthwiseConv2d",s,v);let P=c.computeConv2DInfo(A.shape,E.shape,r,b,s,v,!0);null!=k&&(S=(0,l.convertToTensor)(k,"bias","fused conv2d"),[S]=(0,i.makeTypesMatch)(S,w),d.assertAndGetBroadcastShape(P.outShape,S.shape)),null!=C&&(I=(0,l.convertToTensor)(C,"prelu weights","fused depthwiseConv2d"));let $=(e,t)=>{u.assert(c.tupleValuesAreOne(b),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${b}'`);let[a,n,o,i]=t,l=(0,g.getFusedDyActivation)(e,o,N),p=(0,m.depthwiseConv2dNativeBackpropInput)(n.shape,l,a,r,s,b,v),d=(0,f.depthwiseConv2dNativeBackpropFilter)(n,l,a.shape,r,s,b,v);return null!=i?[p,d,(0,g.getFusedBiasGradient)(S,l)]:[p,d]},F={x:A,filter:E,bias:S,preluActivationWeights:I},B={strides:r,pad:s,dataFormat:x,dilations:b,dimRoundingMode:v,activation:N,leakyreluAlpha:T};return null==k?(0,n.customGrad)((e,t,r)=>{let n=a.ENGINE.runKernel(o.FusedDepthwiseConv2D,F,B);return r([t,e,n]),R&&(n=(0,y.reshape)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:$}})(A,E):(0,n.customGrad)((e,t,r,n)=>{let s=a.ENGINE.runKernel(o.FusedDepthwiseConv2D,F,B);return n([t,e,s,r]),R&&(s=(0,y.reshape)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:$}})(A,E,S)}})}),o("j2Gyr",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropFilter",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("jqSCG"),i=s("4sqA7");let l=(0,o.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,r,s,o,l=[1,1],u){let p=e;3===e.rank&&(p=(0,i.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:p,dy:d};return a.ENGINE.runKernel(n.DepthwiseConv2dNativeBackpropFilter,c,{strides:s,pad:o,dimRoundingMode:u,dilations:l,filterShape:r})}})}),o("1C2e1",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropInput",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("jqSCG"),i=s("4sqA7");let l=(0,o.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,r,s,o,l=[1,1],u){let p=t,d=!1;3===t.rank&&(d=!0,p=(0,i.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:p,filter:r},h=a.ENGINE.runKernel(n.DepthwiseConv2dNativeBackpropInput,c,{strides:s,pad:o,dimRoundingMode:u,dilations:l,inputShape:e});return d?(0,i.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),o("1q6Gm",function(t,r){e(t.exports,"matMul",()=>g);var a=s("38WwN"),n=s("92fpA"),o=s("hl418"),i=s("3w4Rg"),l=s("5xBLk"),u=s("8cCb2"),p=s("hgacW"),d=s("8BaGO"),c=s("bzoAL"),h=s("aUFou"),f=s("jqSCG"),m=s("4sqA7");let g=(0,f.op)({fusedMatMul_:function({a:e,b:t,transposeA:r=!1,transposeB:s=!1,bias:f,activation:g="linear",preluActivationWeights:x,leakyreluAlpha:y=.2}){let b,v;if(!1===(0,c.shouldFuse)(a.ENGINE.state.gradientDepth,g)){let a=(0,h.matMul)(e,t,r,s);return null!=f&&(a=(0,p.add)(a,f)),(0,c.applyActivation)(a,g,x,y)}let k=(0,l.convertToTensor)(e,"a","fused matMul"),N=(0,l.convertToTensor)(t,"b","fused matMul");[k,N]=(0,i.makeTypesMatch)(k,N);let C=r?k.shape[k.rank-2]:k.shape[k.rank-1],T=s?N.shape[N.rank-1]:N.shape[N.rank-2],S=r?k.shape[k.rank-1]:k.shape[k.rank-2],I=s?N.shape[N.rank-2]:N.shape[N.rank-1],w=k.shape.slice(0,-2),E=N.shape.slice(0,-2),A=u.sizeFromShape(w),R=u.sizeFromShape(E);u.assert(C===T,()=>`Error in fused matMul: inner shapes (${C}) and (${T}) of Tensors with shapes ${k.shape} and ${N.shape} and transposeA=${r} and transposeB=${s} must match.`);let P=d.assertAndGetBroadcastShape(k.shape.slice(0,-2),N.shape.slice(0,-2)).concat([S,I]),$=r?(0,m.reshape)(k,[A,C,S]):(0,m.reshape)(k,[A,S,C]),F=s?(0,m.reshape)(N,[R,I,T]):(0,m.reshape)(N,[R,T,I]);null!=f&&(b=(0,l.convertToTensor)(f,"bias","fused matMul"),[b]=(0,i.makeTypesMatch)(b,k),d.assertAndGetBroadcastShape(P,b.shape)),null!=x&&(v=(0,l.convertToTensor)(x,"prelu weights","fused matMul"));let B=(e,t)=>{let a,n,[o,i,l,u]=t,p=(0,c.getFusedDyActivation)((0,m.reshape)(e,l.shape),l,g);return(r||s?!r&&s?(a=(0,h.matMul)(p,i,!1,!1),n=(0,h.matMul)(p,o,!0,!1)):r&&!s?(a=(0,h.matMul)(i,p,!1,!0),n=(0,h.matMul)(o,p,!1,!1)):(a=(0,h.matMul)(i,p,!0,!0),n=(0,h.matMul)(p,o,!0,!0)):(a=(0,h.matMul)(p,i,!1,!0),n=(0,h.matMul)(o,p,!0,!1)),null!=f)?[a,n,(0,c.getFusedBiasGradient)(u,p)]:[a,n]},D={a:$,b:F,bias:b,preluActivationWeights:v},M={transposeA:r,transposeB:s,activation:g,leakyreluAlpha:y};return null==f?(0,n.customGrad)((e,t,r)=>{let n=a.ENGINE.runKernel(o._FusedMatMul,D,M);return r([e,t,n]),{value:(0,m.reshape)(n,P),gradFunc:B}})($,F):(0,n.customGrad)((e,t,r,n)=>{let s=a.ENGINE.runKernel(o._FusedMatMul,D,M);return n([e,t,s,r]),{value:(0,m.reshape)(s,P),gradFunc:B}})($,F,b)}})}),o("dGKlF",function(t,r){e(t.exports,"hammingWindow",()=>o);var a=s("jqSCG"),n=s("j5jow");let o=(0,a.op)({hammingWindow_:function(e){return(0,n.cosineWindow)(e,.54,.46)}})}),o("gicu0",function(t,r){e(t.exports,"hannWindow",()=>o);var a=s("jqSCG"),n=s("j5jow");let o=(0,a.op)({hannWindow_:function(e){return(0,n.cosineWindow)(e,.5,.5)}})}),o("lLT0m",function(t,r){e(t.exports,"frame",()=>p);var a=s("iTu6j"),n=s("gYive"),o=s("jqSCG"),i=s("4sqA7"),l=s("79KOG"),u=s("gmMlv");let p=(0,o.op)({frame_:function(e,t,r,s=!1,o=0){let p=0,d=[];for(;p+t<=e.size;)d.push((0,l.slice)(e,p,t)),p+=r;if(s)for(;p<e.size;){let s=p+t-e.size,i=(0,a.concat)([(0,l.slice)(e,p,t-s),(0,n.fill)([s],o)]);d.push(i),p+=r}return 0===d.length?(0,u.tensor2d)([],[0,t]):(0,i.reshape)((0,a.concat)(d),[d.length,t])}})}),o("hGoJt",function(t,r){e(t.exports,"stft",()=>p);var a=s("jZc0w"),n=s("jqSCG"),o=s("j5jow"),i=s("cafDa"),l=s("lLT0m"),u=s("gicu0");let p=(0,n.op)({stft_:function(e,t,r,n,s=u.hannWindow){null==n&&(n=(0,o.enclosingPowerOfTwo)(t));let p=(0,l.frame)(e,t,r),d=(0,a.mul)(p,s(t));return(0,i.rfft)(d,n)}})}),o("jLoMm",function(t,r){e(t.exports,"cropAndResize",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({cropAndResize_:function(e,t,r,s,l="bilinear",u=0){let p=(0,o.convertToTensor)(e,"image","cropAndResize"),d=(0,o.convertToTensor)(t,"boxes","cropAndResize","float32"),c=(0,o.convertToTensor)(r,"boxInd","cropAndResize","int32"),h=d.shape[0];return i.assert(4===p.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${p.rank}.`),i.assert(2===d.rank&&4===d.shape[1],()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${d.shape}.`),i.assert(1===c.rank&&c.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${d.shape}.`),i.assert(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),i.assert(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),i.assert("bilinear"===l||"nearest"===l,()=>`method must be bilinear or nearest, but was ${l}`),a.ENGINE.runKernel(n.CropAndResize,{image:p,boxes:d,boxInd:c},{method:l,extrapolationValue:u,cropSize:s})}})}),o("jAPwM",function(t,r){e(t.exports,"flipLeftRight",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({flipLeftRight_:function(e){let t=(0,o.convertToTensor)(e,"image","flipLeftRight","float32");return i.assert(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),a.ENGINE.runKernel(n.FlipLeftRight,{image:t},{})}})}),o("7xYxa",function(t,r){e(t.exports,"grayscaleToRGB",()=>l);var a=s("5xBLk"),n=s("8cCb2"),o=s("jqSCG"),i=s("61ay4");let l=(0,o.op)({grayscaleToRGB_:function(e){let t=(0,a.convertToTensor)(e,"image","grayscaleToRGB"),r=t.rank-1,s=t.shape[r];n.assert(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),n.assert(1===s,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let o=Array(t.rank);return o.fill(1,0,r),o[r]=3,(0,i.tile)(t,o)}})}),o("iStMK",function(t,r){e(t.exports,"rgbToGrayscale",()=>d);var a=s("5xBLk"),n=s("8cCb2"),o=s("inFmq"),i=s("1mzpU"),l=s("iPDWZ"),u=s("jqSCG"),p=s("lalFM");let d=(0,u.op)({rgbToGrayscale_:function(e){let t,r=(0,a.convertToTensor)(e,"image","RGBToGrayscale"),s=r.rank-1,u=r.shape[s];n.assert(r.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${r.rank}.`),n.assert(3===u,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${u}.`);let d=r.dtype,c=(0,o.cast)(r,"float32"),h=(0,p.tensor1d)([.2989,.587,.114]);switch(r.rank){case 2:t=(0,i.einsum)("ij,j->i",c,h);break;case 3:t=(0,i.einsum)("ijk,k->ij",c,h);break;case 4:t=(0,i.einsum)("ijkl,l->ijk",c,h);break;case 5:t=(0,i.einsum)("ijklm,m->ijkl",c,h);break;case 6:t=(0,i.einsum)("ijklmn,n->ijklm",c,h);break;default:throw Error("Not a valid tensor rank.")}return t=(0,l.expandDims)(t,-1),(0,o.cast)(t,d)}})}),o("gF4CQ",function(t,r){e(t.exports,"rotateWithOffset",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({rotateWithOffset_:function(e,t,r=0,s=.5){let l=(0,o.convertToTensor)(e,"image","rotateWithOffset","float32");return i.assert(4===l.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${l.rank}.`),a.ENGINE.runKernel(n.RotateWithOffset,{image:l},{radians:t,fillValue:r,center:s})}})}),o("3Dhm5",function(t,r){e(t.exports,"nonMaxSuppression",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("dpIoR");let l=(0,s("jqSCG").op)({nonMaxSuppression_:function(e,t,r,s=.5,l=Number.NEGATIVE_INFINITY){let u=(0,o.convertToTensor)(e,"boxes","nonMaxSuppression","float32"),p=(0,o.convertToTensor)(t,"scores","nonMaxSuppression","float32"),d=(0,i.nonMaxSuppSanityCheck)(u,p,r,s,l);r=d.maxOutputSize;let c={maxOutputSize:r,iouThreshold:s=d.iouThreshold,scoreThreshold:l=d.scoreThreshold};return a.ENGINE.runKernel(n.NonMaxSuppressionV3,{boxes:u,scores:p},c)}})}),o("dpIoR",function(t,r){e(t.exports,"nonMaxSuppSanityCheck",()=>n);var a=s("8cCb2");function n(e,t,r,n,s,o){null==n&&(n=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);let i=e.shape[0];return r=Math.min(r,i),a.assert(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),a.assert(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),a.assert(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),a.assert(1===t.rank,()=>"scores must be a 1D tensor"),a.assert(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),a.assert(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:r,iouThreshold:n,scoreThreshold:s,softNmsSigma:o}}}),o("ihqU7",function(t,r){e(t.exports,"nonMaxSuppressionAsync",()=>l);var a=s("KPYos"),n=s("5xBLk"),o=s("dpIoR"),i=s("lalFM");let l=async function(e,t,r,s=.5,l=Number.NEGATIVE_INFINITY){let u=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),p=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),d=(0,o.nonMaxSuppSanityCheck)(u,p,r,s,l);r=d.maxOutputSize,s=d.iouThreshold,l=d.scoreThreshold;let c=await Promise.all([u.data(),p.data()]),h=c[0],f=c[1],{selectedIndices:m}=(0,a.nonMaxSuppressionV3Impl)(h,f,r,s,l);return u!==e&&u.dispose(),p!==t&&p.dispose(),(0,i.tensor1d)(m,"int32")}}),o("KPYos",function(t,r){e(t.exports,"nonMaxSuppressionV3Impl",()=>n),e(t.exports,"nonMaxSuppressionV4Impl",()=>o),e(t.exports,"nonMaxSuppressionV5Impl",()=>i);var a=s("k4JiJ");function n(e,t,r,a,n){return l(e,t,r,a,n,0)}function o(e,t,r,a,n,s){return l(e,t,r,a,n,0,!1,s,!0)}function i(e,t,r,a,n,s){return l(e,t,r,a,n,s,!0)}function l(e,t,r,n,s,o,i=!1,p=!1,d=!1){let c=[];for(let e=0;e<t.length;e++)t[e]>s&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(u);let h=o>0?-.5/o:0,f=[],m=[];for(;f.length<r&&c.length>0;){let t=c.pop(),{score:r,boxIndex:o,suppressBeginIndex:i}=t;if(r<s)break;let l=!1;for(let r=f.length-1;r>=i;--r){let a=function(e,t,r){let a=e.subarray(4*t,4*t+4),n=e.subarray(4*r,4*r+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(n[0],n[2]),p=Math.min(n[1],n[3]),d=Math.max(n[0],n[2]),c=Math.max(n[1],n[3]),h=(i-s)*(l-o),f=(d-u)*(c-p);if(h<=0||f<=0)return 0;let m=Math.max(Math.min(i,d)-Math.max(s,u),0)*Math.max(Math.min(l,c)-Math.max(o,p),0);return m/(h+f-m)}(e,o,f[r]);if(a>=n){l=!0;break}if(t.score=t.score*function(e,t,r){let a=Math.exp(t*r*r);return r<=e?a:0}(n,h,a),t.score<=s)break}t.suppressBeginIndex=f.length,!l&&(t.score===r?(f.push(o),m.push(t.score)):t.score>s&&(0,a.binaryInsert)(c,t,u))}let g=f.length,x=r-g;p&&x>0&&(f.push(...Array(x).fill(0)),m.push(...Array(x).fill(0)));let y={selectedIndices:f};return i&&(y.selectedScores=m),d&&(y.validOutputs=g),y}function u(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}}),o("k4JiJ",function(t,r){function a(e,t,r){let a=function(e,t,r){let a=0,n=e.length,s=0,o=!1;for(;a<n;){let i=r(t,e[s=a+(n-a>>>1)]);i>0?a=s+1:(n=s,o=!i)}return o?a:-a-1}(e,t,r||n);e.splice(a<0?-(a+1):a,0,t)}function n(e,t){return e>t?1:e<t?-1:0}e(t.exports,"binaryInsert",()=>a)}),o("gxykK",function(t,r){e(t.exports,"nonMaxSuppressionWithScore",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("dpIoR");let l=(0,s("jqSCG").op)({nonMaxSuppressionWithScore_:function(e,t,r,s=.5,l=Number.NEGATIVE_INFINITY,u=0){let p=(0,o.convertToTensor)(e,"boxes","nonMaxSuppression"),d=(0,o.convertToTensor)(t,"scores","nonMaxSuppression"),c=(0,i.nonMaxSuppSanityCheck)(p,d,r,s,l,u);r=c.maxOutputSize,s=c.iouThreshold,l=c.scoreThreshold;let h={maxOutputSize:r,iouThreshold:s,scoreThreshold:l,softNmsSigma:u=c.softNmsSigma},f=a.ENGINE.runKernel(n.NonMaxSuppressionV5,{boxes:p,scores:d},h);return{selectedIndices:f[0],selectedScores:f[1]}}})}),o("8357p",function(t,r){e(t.exports,"nonMaxSuppressionWithScoreAsync",()=>l);var a=s("KPYos"),n=s("5xBLk"),o=s("dpIoR"),i=s("lalFM");let l=async function(e,t,r,s=.5,l=Number.NEGATIVE_INFINITY,u=0){let p=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),d=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),c=(0,o.nonMaxSuppSanityCheck)(p,d,r,s,l,u);r=c.maxOutputSize,s=c.iouThreshold,l=c.scoreThreshold,u=c.softNmsSigma;let h=await Promise.all([p.data(),d.data()]),f=h[0],m=h[1],{selectedIndices:g,selectedScores:x}=(0,a.nonMaxSuppressionV5Impl)(f,m,r,s,l,u);return p!==e&&p.dispose(),d!==t&&d.dispose(),{selectedIndices:(0,i.tensor1d)(g,"int32"),selectedScores:(0,i.tensor1d)(x)}}}),o("gzUbZ",function(t,r){e(t.exports,"nonMaxSuppressionPadded",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("dpIoR");let l=(0,s("jqSCG").op)({nonMaxSuppressionPadded_:function(e,t,r,s=.5,l=Number.NEGATIVE_INFINITY,u=!1){let p=(0,o.convertToTensor)(e,"boxes","nonMaxSuppression"),d=(0,o.convertToTensor)(t,"scores","nonMaxSuppression"),c=(0,i.nonMaxSuppSanityCheck)(p,d,r,s,l,null),h=c.maxOutputSize,f=c.iouThreshold,m=c.scoreThreshold,g=a.ENGINE.runKernel(n.NonMaxSuppressionV4,{boxes:p,scores:d},{maxOutputSize:h,iouThreshold:f,scoreThreshold:m,padToMaxOutputSize:u});return{selectedIndices:g[0],validOutputs:g[1]}}})}),o("bq0nG",function(t,r){e(t.exports,"nonMaxSuppressionPaddedAsync",()=>u);var a=s("KPYos"),n=s("5xBLk"),o=s("dpIoR"),i=s("3xp7o"),l=s("lalFM");let u=async function(e,t,r,s=.5,u=Number.NEGATIVE_INFINITY,p=!1){let d=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),c=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),h=(0,o.nonMaxSuppSanityCheck)(d,c,r,s,u,null),f=h.maxOutputSize,m=h.iouThreshold,g=h.scoreThreshold,[x,y]=await Promise.all([d.data(),c.data()]),{selectedIndices:b,validOutputs:v}=(0,a.nonMaxSuppressionV4Impl)(x,y,f,m,g,p);return d!==e&&d.dispose(),c!==t&&c.dispose(),{selectedIndices:(0,l.tensor1d)(b,"int32"),validOutputs:(0,i.scalar)(v,"int32")}}}),o("6zgXB",function(t,r){e(t.exports,"resizeBilinear",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({resizeBilinear_:function(e,t,r=!1,s=!1){let l=(0,o.convertToTensor)(e,"images","resizeBilinear");i.assert(3===l.rank||4===l.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`),i.assert(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),i.assert(!1===s||!1===r,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let p=l,d=!1;3===l.rank&&(d=!0,p=(0,u.reshape)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));let[]=t,c={images:p},h=a.ENGINE.runKernel(n.ResizeBilinear,c,{alignCorners:r,halfPixelCenters:s,size:t});return d?(0,u.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),o("ek5OW",function(t,r){e(t.exports,"resizeNearestNeighbor",()=>p);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2"),l=s("jqSCG"),u=s("4sqA7");let p=(0,l.op)({resizeNearestNeighbor_:function(e,t,r=!1,s=!1){let l=(0,o.convertToTensor)(e,"images","resizeNearestNeighbor");i.assert(3===l.rank||4===l.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`),i.assert(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),i.assert("float32"===l.dtype||"int32"===l.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i.assert(!1===s||!1===r,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let p=l,d=!1;3===l.rank&&(d=!0,p=(0,u.reshape)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));let[]=t,c={images:p},h=a.ENGINE.runKernel(n.ResizeNearestNeighbor,c,{alignCorners:r,halfPixelCenters:s,size:t});return d?(0,u.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),o("2uj2A",function(t,r){e(t.exports,"threshold",()=>T);var a=s("lalFM"),n=s("jqSCG"),o=s("inFmq"),i=s("9fmAX"),l=s("f3UMy"),u=s("7LQ38"),p=s("bRRKf"),d=s("9NgTx"),c=s("hgacW"),h=s("jZc0w"),f=s("1QPqB"),m=s("7kouu"),g=s("9YKoa"),x=s("l2P14"),y=s("gYive"),b=s("79KOG"),v=s("80Ety"),k=s("erbmM"),N=s("8cCb2"),C=s("5xBLk");let T=(0,n.op)({threshold_:function(e,t="binary",r=!1,n=.5){let s,T,S,I,w=(0,C.convertToTensor)(e,"image","threshold"),E=w.shape[0]*w.shape[1],A=(0,h.mul)((0,a.tensor1d)([n]),255);if(N.assert(3===w.rank,()=>`Error in threshold: image must be rank 3,but got rank ${w.rank}.`),N.assert(3===w.shape[2]||1===w.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${w.shape[2]}.`),N.assert("int32"===w.dtype||"float32"===w.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${w.dtype}.`),N.assert("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===w.shape[2]){[s,T,S]=(0,i.split)(w,[1,1,1],-1);let e=(0,h.mul)(s,.2989),t=(0,h.mul)(T,.587),r=(0,h.mul)(S,.114);I=(0,c.add)((0,c.add)(e,t),r)}else I=e;"otsu"===t&&(A=function(e,t){let r,n,s,o,i,l,u=(0,a.tensor1d)([-1]),g=(0,a.tensor1d)([0]),k=(0,a.tensor1d)([0]);for(let N=0;N<e.size-1;N++){r=(0,b.slice)(e,0,N+1),n=(0,b.slice)(e,N+1),i=(0,f.div)((0,d.sum)(r),t),l=(0,f.div)((0,d.sum)(n),t);let C=(0,d.sum)((0,h.mul)(r,(0,v.range)(0,r.size)));s=(0,f.div)(C,(0,d.sum)(r));let T=(0,y.fill)(n.shape,r.size),S=(0,c.add)((0,v.range)(0,n.size),T),I=(0,h.mul)(n,S);o=(0,f.div)((0,d.sum)(I),(0,d.sum)(n));let w=(0,m.sub)(s,o),E=(0,m.sub)(s,o),A=(0,h.mul)(i,l);k=(0,h.mul)((0,h.mul)(A,w),E);let R=(0,p.greater)(k,g);g=(0,x.where)(R,k,g),u=(0,x.where)(R,(0,a.tensor1d)([N]),u)}return u}((0,l.bincount)((0,o.cast)((0,g.round)(I),"int32"),(0,k.tensor)([]),256),E));let R=r?(0,u.lessEqual)(I,A):(0,p.greater)(I,A);return(0,o.cast)((0,h.mul)(R,255),"int32")}})}),o("53uSk",function(t,r){e(t.exports,"transform",()=>l);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk"),i=s("8cCb2");let l=(0,s("jqSCG").op)({transform_:function(e,t,r="nearest",s="constant",l=0,u){let p=(0,o.convertToTensor)(e,"image","transform","float32"),d=(0,o.convertToTensor)(t,"transforms","transform","float32");return i.assert(4===p.rank,()=>`Error in transform: image must be rank 4,but got rank ${p.rank}.`),i.assert(2===d.rank&&(d.shape[0]===p.shape[0]||1===d.shape[0])&&8===d.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),i.assert(null==u||2===u.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`),a.ENGINE.runKernel(n.Transform,{image:p,transforms:d},{interpolation:r,fillMode:s,fillValue:l,outputShape:u})}})}),o("kGYDg",function(t,r){e(t.exports,"bandPart",()=>v);var a=s("5xBLk"),n=s("8cCb2"),o=s("l0Zxl"),i=s("jTDVJ"),l=s("7LQ38"),u=s("kg1Wp"),p=s("6V8xR"),d=s("15cGp"),c=s("jqSCG"),h=s("80Ety"),f=s("4sqA7"),m=s("8BrLX"),g=s("7kouu"),x=s("gBOC6"),y=s("l2P14"),b=s("hxi4c");let v=(0,c.op)({bandPart_:function(e,t,r){let s,c,v=(0,a.convertToTensor)(e,"a","bandPart");(0,n.assert)(v.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${v.rank}.`);let k=v.shape,[N,C]=v.shape.slice(-2);"number"==typeof t?((0,n.assert)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),(0,n.assert)(t<=N,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${N}).`),s=(0,a.convertToTensor)(t<0?N:t,"numLower","bandPart")):((0,n.assert)("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),s=(0,y.where)((0,i.less)(t,0),N,(0,p.minimum)(t,N))),"number"==typeof r?((0,n.assert)(r%1==0,()=>`bandPart(): numUpper must be an integer, got ${r}.`),(0,n.assert)(r<=C,()=>`bandPart(): numUpper (${r}) must not be greater than the number of columns (${C}).`),c=(0,a.convertToTensor)(r<0?C:r,"numUpper","bandPart")):((0,n.assert)("int32"===r.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),c=(0,y.where)((0,i.less)(r,0),C,(0,p.minimum)(r,C)));let T=(0,f.reshape)((0,h.range)(0,N,1,"int32"),[-1,1]),S=(0,h.range)(0,C,1,"int32"),I=(0,g.sub)(T,S),w=(0,u.logicalAnd)((0,l.lessEqual)(I,s),(0,o.greaterEqual)(I,(0,d.neg)(c))),E=(0,b.zeros)([N,C],v.dtype);return(0,f.reshape)((0,m.stack)((0,x.unstack)((0,f.reshape)(v,[-1,N,C])).map(e=>(0,y.where)(w,e,E))),k)}})}),o("bI4CH",function(t,r){e(t.exports,"gramSchmidt",()=>m);var a=s("38WwN"),n=s("8cCb2"),o=s("1QPqB"),i=s("jZc0w"),l=s("7k6dx"),u=s("jqSCG"),p=s("9fmAX"),d=s("kX8Hd"),c=s("8BrLX"),h=s("7kouu"),f=s("9NgTx");let m=(0,u.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,n.assert)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let t=1;t<e.length;++t)(0,n.assert)(e[t].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${r})`)}else t=!0,e=(0,p.split)(e,e.shape[0],0).map(e=>(0,d.squeeze)(e,[0]));(0,n.assert)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let r=[],s=e;for(let t=0;t<e.length;++t)r.push(a.ENGINE.tidy(()=>{let e=s[t];if(t>0)for(let a=0;a<t;++a){let t=(0,i.mul)((0,f.sum)((0,i.mul)(r[a],e)),r[a]);e=(0,h.sub)(e,t)}return(0,o.div)(e,(0,l.norm)(e,"euclidean"))}));return t?(0,c.stack)(r,0):r}})}),o("ipM8K",function(t,r){e(t.exports,"qr",()=>I);var a=s("38WwN"),n=s("c2DT1"),o=s("8cCb2"),i=s("5TuCW"),l=s("iTu6j"),u=s("1QPqB"),p=s("9gIZb"),d=s("bRRKf"),c=s("aUFou"),h=s("jZc0w"),f=s("15cGp"),m=s("7k6dx"),g=s("jqSCG"),x=s("4sqA7"),y=s("79KOG"),b=s("8BrLX"),v=s("7kouu"),k=s("gmMlv"),N=s("aDHKy"),C=s("gBOC6"),T=s("l2P14");function S(e,t=!1){return a.ENGINE.tidy(()=>{(0,o.assert)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let r=e.shape[0],s=e.shape[1],g=(0,p.eye)(r),x=(0,i.clone)(e),b=(0,k.tensor2d)([[1]],[1,1]),C=(0,i.clone)(b),S=r>=s?s:r;for(let e=0;e<S;++e){let t=x,o=C,p=g;[C,x,g]=a.ENGINE.tidy(()=>{let t=(0,y.slice)(x,[e,e],[r-e,1]),a=(0,m.norm)(t),n=(0,y.slice)(x,[e,e],[1,1]),o=(0,T.where)((0,d.greater)(n,0),(0,k.tensor2d)([[-1]]),(0,k.tensor2d)([[1]])),p=(0,v.sub)(n,(0,h.mul)(o,a)),S=(0,u.div)(t,p);C=1===S.shape[0]?(0,i.clone)(b):(0,l.concat)([b,(0,y.slice)(S,[1,0],[S.shape[0]-1,S.shape[1]])],0);let I=(0,f.neg)((0,u.div)((0,c.matMul)(o,p),a)),w=(0,y.slice)(x,[e,0],[r-e,s]),E=(0,h.mul)(I,C),A=(0,N.transpose)(C);if(0===e)x=(0,v.sub)(w,(0,c.matMul)(E,(0,c.matMul)(A,w)));else{let t=(0,v.sub)(w,(0,c.matMul)(E,(0,c.matMul)(A,w)));x=(0,l.concat)([(0,y.slice)(x,[0,0],[e,s]),t],0)}let R=(0,N.transpose)(E),P=(0,y.slice)(g,[0,e],[r,g.shape[1]-e]);if(0===e)g=(0,v.sub)(P,(0,c.matMul)((0,c.matMul)(P,C),R));else{let t=(0,v.sub)(P,(0,c.matMul)((0,c.matMul)(P,C),R));g=(0,l.concat)([(0,y.slice)(g,[0,0],[r,e]),t],1)}return[C,x,g]}),(0,n.dispose)([t,o,p])}return!t&&r>s&&(g=(0,y.slice)(g,[0,0],[r,s]),x=(0,y.slice)(x,[0,0],[s,s])),[g,x]})}let I=(0,g.op)({qr_:function(e,t=!1){if((0,o.assert)(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return S(e,t);{let r=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),a=(0,C.unstack)((0,x.reshape)(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),n=[],s=[];return a.forEach(e=>{let[r,a]=S(e,t);n.push(r),s.push(a)}),[(0,x.reshape)((0,b.stack)(n,0),e.shape),(0,x.reshape)((0,b.stack)(s,0),e.shape)]}}})}),o("beFbS",function(t,r){e(t.exports,"absoluteDifference",()=>d);var a=s("5xBLk"),n=s("8cCb2"),o=s("7j49I"),i=s("i8gZm"),l=s("jqSCG"),u=s("7kouu"),p=s("aQ3Nu");let d=(0,l.op)({absoluteDifference_:function(e,t,r,s=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let l=(0,a.convertToTensor)(e,"labels","absoluteDifference"),d=(0,a.convertToTensor)(t,"predictions","absoluteDifference"),c=null;null!=r&&(c=(0,a.convertToTensor)(r,"weights","absoluteDifference")),(0,n.assertShapesMatch)(l.shape,d.shape,"Error in absoluteDifference: ");let h=(0,o.abs)((0,u.sub)(l,d));return(0,p.computeWeightedLoss)(h,c,s)}})}),o("i8gZm",function(t,r){var a,n;e(t.exports,"Reduction",()=>a),(n=a||(a={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}),o("aQ3Nu",function(t,r){e(t.exports,"computeWeightedLoss",()=>m);var a=s("5xBLk"),n=s("inFmq"),o=s("1QPqB"),i=s("i8gZm"),l=s("67GCc"),u=s("jZc0w"),p=s("8WSnu"),d=s("fOBRA"),c=s("jqSCG"),h=s("3xp7o"),f=s("9NgTx");let m=(0,c.op)({computeWeightedLoss_:function(e,t,r=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=(0,a.convertToTensor)(e,"losses","computeWeightedLoss"),c=null;null!=t&&(c=(0,a.convertToTensor)(t,"weights","computeWeightedLoss"));let m=null==c?s:(0,u.mul)(s,c);if(r===i.Reduction.NONE)return m;if(r===i.Reduction.SUM)return(0,f.sum)(m);if(r===i.Reduction.MEAN)if(null==c)return(0,l.mean)(m);else{let e=s.size/c.size,t=(0,o.div)((0,f.sum)(m),(0,f.sum)(c));return e>1?(0,o.div)(t,(0,h.scalar)(e)):t}if(r===i.Reduction.SUM_BY_NONZERO_WEIGHTS)if(null==c)return(0,o.div)((0,f.sum)(m),(0,h.scalar)(s.size));else{let e=(0,u.mul)(c,(0,d.ones)(s.shape)),t=(0,n.cast)((0,f.sum)((0,p.notEqual)(e,(0,h.scalar)(0))),"float32");return(0,o.div)((0,f.sum)(m),t)}throw Error(`Unknown reduction: ${r}`)}})}),o("315ft",function(t,r){e(t.exports,"cosineDistance",()=>h);var a=s("5xBLk"),n=s("8cCb2"),o=s("i8gZm"),i=s("jZc0w"),l=s("jqSCG"),u=s("3xp7o"),p=s("7kouu"),d=s("9NgTx"),c=s("aQ3Nu");let h=(0,l.op)({cosineDistance_:function(e,t,r,s,l=o.Reduction.SUM_BY_NONZERO_WEIGHTS){let h=(0,a.convertToTensor)(e,"labels","cosineDistance"),f=(0,a.convertToTensor)(t,"predictions","cosineDistance"),m=null;null!=s&&(m=(0,a.convertToTensor)(s,"weights","cosineDistance")),(0,n.assertShapesMatch)(h.shape,f.shape,"Error in cosineDistance: ");let g=(0,u.scalar)(1),x=(0,p.sub)(g,(0,d.sum)((0,i.mul)(h,f),r,!0));return(0,c.computeWeightedLoss)(x,m,l)}})}),o("aqAKz",function(t,r){e(t.exports,"hingeLoss",()=>h);var a=s("5xBLk"),n=s("8cCb2"),o=s("i8gZm"),i=s("jZc0w"),l=s("jqSCG"),u=s("8wbQq"),p=s("3xp7o"),d=s("7kouu"),c=s("aQ3Nu");let h=(0,l.op)({hingeLoss_:function(e,t,r,s=o.Reduction.SUM_BY_NONZERO_WEIGHTS){let l=(0,a.convertToTensor)(e,"labels","hingeLoss"),h=(0,a.convertToTensor)(t,"predictions","hingeLoss"),f=null;null!=r&&(f=(0,a.convertToTensor)(r,"weights","hingeLoss")),(0,n.assertShapesMatch)(l.shape,h.shape,"Error in hingeLoss: ");let m=(0,p.scalar)(1);l=(0,d.sub)((0,i.mul)((0,p.scalar)(2),l),m);let g=(0,u.relu)((0,d.sub)(m,(0,i.mul)(l,h)));return(0,c.computeWeightedLoss)(g,f,s)}})}),o("2lNlw",function(t,r){e(t.exports,"huberLoss",()=>g);var a=s("5xBLk"),n=s("8cCb2"),o=s("7j49I"),i=s("hgacW"),l=s("i8gZm"),u=s("6V8xR"),p=s("jZc0w"),d=s("jqSCG"),c=s("3xp7o"),h=s("iDd8d"),f=s("7kouu"),m=s("aQ3Nu");let g=(0,d.op)({huberLoss_:function(e,t,r,s=1,d=l.Reduction.SUM_BY_NONZERO_WEIGHTS){let g=(0,a.convertToTensor)(e,"labels","huberLoss"),x=(0,a.convertToTensor)(t,"predictions","huberLoss"),y=null;null!=r&&(y=(0,a.convertToTensor)(r,"weights","huberLoss")),(0,n.assertShapesMatch)(g.shape,x.shape,"Error in huberLoss: ");let b=(0,c.scalar)(s),v=(0,o.abs)((0,f.sub)(x,g)),k=(0,u.minimum)(v,b),N=(0,f.sub)(v,k),C=(0,i.add)((0,p.mul)((0,c.scalar)(.5),(0,h.square)(k)),(0,p.mul)(b,N));return(0,m.computeWeightedLoss)(C,y,d)}})}),o("8Bzf4",function(t,r){e(t.exports,"logLoss",()=>m);var a=s("5xBLk"),n=s("8cCb2"),o=s("hgacW"),i=s("dcoCo"),l=s("i8gZm"),u=s("jZc0w"),p=s("15cGp"),d=s("jqSCG"),c=s("3xp7o"),h=s("7kouu"),f=s("aQ3Nu");let m=(0,d.op)({logLoss_:function(e,t,r,s=1e-7,d=l.Reduction.SUM_BY_NONZERO_WEIGHTS){let m=(0,a.convertToTensor)(e,"labels","logLoss"),g=(0,a.convertToTensor)(t,"predictions","logLoss"),x=null;null!=r&&(x=(0,a.convertToTensor)(r,"weights","logLoss")),(0,n.assertShapesMatch)(m.shape,g.shape,"Error in logLoss: ");let y=(0,c.scalar)(1),b=(0,c.scalar)(s),v=(0,p.neg)((0,u.mul)(m,(0,i.log)((0,o.add)(g,b)))),k=(0,u.mul)((0,h.sub)(y,m),(0,i.log)((0,o.add)((0,h.sub)(y,g),b))),N=(0,h.sub)(v,k);return(0,f.computeWeightedLoss)(N,x,d)}})}),o("2Tkqe",function(t,r){e(t.exports,"meanSquaredError",()=>p);var a=s("5xBLk"),n=s("8cCb2"),o=s("i8gZm"),i=s("jqSCG"),l=s("ay2Nw"),u=s("aQ3Nu");let p=(0,i.op)({meanSquaredError_:function(e,t,r,s=o.Reduction.SUM_BY_NONZERO_WEIGHTS){let i=(0,a.convertToTensor)(e,"labels","meanSquaredError"),p=(0,a.convertToTensor)(t,"predictions","meanSquaredError"),d=null;null!=r&&(d=(0,a.convertToTensor)(r,"weights","meanSquaredError")),(0,n.assertShapesMatch)(i.shape,p.shape,"Error in meanSquaredError: ");let c=(0,l.squaredDifference)(i,p);return(0,u.computeWeightedLoss)(c,d,s)}})}),o("7tTB0",function(t,r){e(t.exports,"sigmoidCrossEntropy",()=>y);var a=s("5xBLk"),n=s("8cCb2"),o=s("7j49I"),i=s("hgacW"),l=s("2PcQK"),u=s("5QUXI"),p=s("i8gZm"),d=s("jZc0w"),c=s("15cGp"),h=s("jqSCG"),f=s("8wbQq"),m=s("3xp7o"),g=s("7kouu"),x=s("aQ3Nu");let y=(0,h.op)({sigmoidCrossEntropy_:function(e,t,r,s=0,h=p.Reduction.SUM_BY_NONZERO_WEIGHTS){let y=(0,a.convertToTensor)(e,"multiClassLabels","sigmoidCrossEntropy"),b=(0,a.convertToTensor)(t,"logits","sigmoidCrossEntropy"),v=null;if(null!=r&&(v=(0,a.convertToTensor)(r,"weights","sigmoidCrossEntropy")),(0,n.assertShapesMatch)(y.shape,b.shape,"Error in sigmoidCrossEntropy: "),s>0){let e=(0,m.scalar)(s),t=(0,m.scalar)(1),r=(0,m.scalar)(.5);y=(0,i.add)((0,d.mul)(y,(0,g.sub)(t,e)),(0,d.mul)(r,e))}let k=function(e,t){let r=(0,a.convertToTensor)(e,"labels","sigmoidCrossEntropyWithLogits"),s=(0,a.convertToTensor)(t,"logits","sigmoidCrossEntropyWithLogits");(0,n.assertShapesMatch)(r.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let p=(0,f.relu)(s),h=(0,d.mul)(s,r),m=(0,u.log1p)((0,l.exp)((0,c.neg)((0,o.abs)(s))));return(0,i.add)((0,g.sub)(p,h),m)}(y,b);return(0,x.computeWeightedLoss)(k,v,h)}})}),o("5FlUs",function(t,r){e(t.exports,"softmaxCrossEntropy",()=>N);var a=s("92fpA"),n=s("5xBLk"),o=s("8cCb2"),i=s("hgacW"),l=s("kTunp"),u=s("inFmq"),p=s("1QPqB"),d=s("2PcQK"),c=s("9dGIC"),h=s("i8gZm"),f=s("jZc0w"),m=s("15cGp"),g=s("jqSCG"),x=s("4sqA7"),y=s("3xp7o"),b=s("7kouu"),v=s("9NgTx"),k=s("aQ3Nu");let N=(0,g.op)({softmaxCrossEntropy_:function(e,t,r,s=0,g=h.Reduction.SUM_BY_NONZERO_WEIGHTS){let N=(0,n.convertToTensor)(e,"onehotLabels","softmaxCrossEntropy"),C=(0,n.convertToTensor)(t,"logits","softmaxCrossEntropy"),T=null;if(null!=r&&(T=(0,n.convertToTensor)(r,"weights","softmaxCrossEntropy")),(0,o.assertShapesMatch)(N.shape,C.shape,"Error in softmaxCrossEntropy: "),s>0){let e=(0,y.scalar)(s),t=(0,y.scalar)(1),r=(0,y.scalar)(N.shape[1]);N=(0,i.add)((0,f.mul)(N,(0,b.sub)(t,e)),(0,p.div)(e,r))}let S=function(e,t,r=-1){if(-1===r&&(r=t.rank-1),r!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${r}`);return(0,a.customGrad)((e,t,a)=>{let n=(0,c.logSumExp)(t,[r],!0),s=(0,b.sub)((0,u.cast)(t,"float32"),n);a([e,s]);let o=(0,m.neg)((0,f.mul)(s,e));return{value:(0,v.sum)(o,[r]),gradFunc:(e,t)=>{let[a,n]=t,s=(0,l.expandShapeToKeepDim)(e.shape,[r]);return[(0,f.mul)((0,x.reshape)(e,s),(0,b.sub)((0,u.cast)(a,"float32"),(0,d.exp)(n))),(0,f.mul)((0,x.reshape)(e,s),(0,b.sub)((0,d.exp)(n),(0,u.cast)(a,"float32")))]}}})(e,t)}(N,C);return(0,k.computeWeightedLoss)(S,T,g)}})}),o("gXzaa",function(t,r){e(t.exports,"sparseFillEmptyRows",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sparseFillEmptyRows_:function(e,t,r,s){let i=(0,o.convertToTensor)(e,"indices","sparseFillEmptyRows","int32"),l=(0,o.convertToTensor)(t,"values","sparseFillEmptyRows"),u=(0,o.convertToTensor)(r,"denseShape","sparseFillEmptyRows","int32"),p=(0,o.convertToTensor)(s,"defaultValue","sparseFillEmptyRows",l.dtype);if(2!==i.rank)throw Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(1!==l.rank)throw Error(`Values should be Tensor1D but received shape ${l.shape}`);if(1!==u.rank)throw Error(`Dense shape should be Tensor1D but received shape ${u.shape}`);if(0!==p.rank)throw Error(`Default value should be a scalar but received shape ${p.shape}`);let d=a.ENGINE.runKernel(n.SparseFillEmptyRows,{indices:i,values:l,denseShape:u,defaultValue:p});return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}})}),o("fMgdQ",function(t,r){e(t.exports,"sparseReshape",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sparseReshape_:function(e,t,r){let s=(0,o.convertToTensor)(e,"inputIndices","sparseReshape","int32"),i=(0,o.convertToTensor)(t,"inputShape","sparseReshape","int32"),l=(0,o.convertToTensor)(r,"newShape","sparseReshape","int32");if(2!==s.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(1!==i.rank)throw Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==l.rank)throw Error(`New shape should be Tensor1D but received shape ${l.shape}`);let u=a.ENGINE.runKernel(n.SparseReshape,{inputIndices:s,inputShape:i,newShape:l});return{outputIndices:u[0],outputShape:u[1]}}})}),o("22SmX",function(t,r){e(t.exports,"sparseSegmentMean",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sparseSegmentMean_:function(e,t,r){let s=(0,o.convertToTensor)(e,"data","sparseSegmentMean"),i=(0,o.convertToTensor)(t,"indices","sparseSegmentMean","int32"),l=(0,o.convertToTensor)(r,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(1!==l.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${l.shape}`);return a.ENGINE.runKernel(n.SparseSegmentMean,{data:s,indices:i,segmentIds:l})}})}),o("6wGr9",function(t,r){e(t.exports,"sparseSegmentSum",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({sparseSegmentSum_:function(e,t,r){let s=(0,o.convertToTensor)(e,"data","sparseSegmentSum"),i=(0,o.convertToTensor)(t,"indices","sparseSegmentSum","int32"),l=(0,o.convertToTensor)(r,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(1!==l.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${l.shape}`);return a.ENGINE.runKernel(n.SparseSegmentSum,{data:s,indices:i,segmentIds:l})}})}),o("brFzl",function(t,r){e(t.exports,"stringNGrams",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({stringNGrams_:function(e,t,r,s,i,l,u,p){let d=(0,o.convertToTensor)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw Error("Data must be of datatype string");if(1!==d.shape.length)throw Error(`Data must be a vector, saw: ${d.shape}`);let c=(0,o.convertToTensor)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw Error("Data splits must be of datatype int32");let h=a.ENGINE.runKernel(n.StringNGrams,{data:d,dataSplits:c},{separator:r,nGramWidths:s,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:p});return{nGrams:h[0],nGramsSplits:h[1]}}})}),o("VUiwf",function(t,r){e(t.exports,"stringSplit",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({stringSplit_:function(e,t,r=!0){let s=(0,o.convertToTensor)(e,"input","stringSplit","string"),i=(0,o.convertToTensor)(t,"delimiter","stringSplit","string");if(1!==s.rank)throw Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==i.rank)throw Error(`Delimiter should be a scalar but received shape ${i.shape}`);let l=a.ENGINE.runKernel(n.StringSplit,{input:s,delimiter:i},{skipEmpty:r});return{indices:l[0],values:l[1],shape:l[2]}}})}),o("g7F6x",function(t,r){e(t.exports,"stringToHashBucketFast",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({stringToHashBucketFast_:function(e,t){let r=(0,o.convertToTensor)(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return a.ENGINE.runKernel(n.StringToHashBucketFast,{input:r},{numBuckets:t})}})}),o("bZL8f",function(t,r){e(t.exports,"staticRegexReplace",()=>i);var a=s("38WwN"),n=s("hl418"),o=s("5xBLk");let i=(0,s("jqSCG").op)({staticRegexReplace_:function(e,t,r,s=!0){let i=(0,o.convertToTensor)(e,"input","staticRegexReplace","string");return a.ENGINE.runKernel(n.StaticRegexReplace,{x:i},{pattern:t,rewrite:r,replaceGlobal:s})}})}),o("dXS8M",function(t,r){e(t.exports,"train",()=>a);let a=s("bO4Xu").OptimizerConstructors}),o("9LtVT",function(t,r){e(t.exports,"nextFrame",()=>n);let a="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function n(){return new Promise(e=>a(()=>e()))}}),o("7MaPk",function(r,a){e(r.exports,"fromUint8ToStringArray",()=>w),e(r.exports,"fromStringArrayToUint8",()=>E),e(r.exports,"slice_util",()=>s("bszZn")),e(r.exports,"upcastType",()=>s("2MDja").upcastType),e(r.exports,"segment_util",()=>s("fHbAS"));var n=s("jjNRA"),o=s("kTunp"),i=s("8BaGO"),l=s("chyju"),u=s("frznq"),p=s("bzoAL"),d=s("dlbe1"),c=s("kaAdl"),h=s("4ldJF");s("bszZn"),s("2MDja");var f=s("aQHa6"),m=s("4h3p6"),g=s("4EvS9"),x=s("7wQGW"),y=s("eowEY"),b=s("aMsMA"),v=s("cgHNs"),k=s("eCPD4"),N=s("izI5a"),C=s("4pqBf"),T=s("5NPez"),S=s("2A2jF"),I=s("6bLmC");function w(e){try{return e.map(e=>(0,n.decodeString)(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function E(e){return e.map(e=>(0,n.encodeString)(e))}s("fHbAS"),t(r.exports,o),t(r.exports,i),t(r.exports,l),t(r.exports,u),t(r.exports,p),t(r.exports,d),t(r.exports,c),t(r.exports,h),t(r.exports,f),t(r.exports,m),t(r.exports,g),t(r.exports,x),t(r.exports,y),t(r.exports,b),t(r.exports,v),t(r.exports,k),t(r.exports,N),t(r.exports,C),t(r.exports,T),t(r.exports,S),t(r.exports,I)}),o("chyju",function(t,r){e(t.exports,"assertParamsConsistent",()=>n),e(t.exports,"computeOutShape",()=>o);var a=s("8cCb2");function n(e,t){let r=e[0].length;e.forEach((e,t)=>{a.assert(e.length===r,()=>`Error in concat${r}D: rank of tensors[${t}] must be the same as the rank of the rest (${r})`)}),a.assert(t>=0&&t<r,()=>`Error in concat${r}D: axis must be between 0 and ${r-1}.`);let n=e[0];e.forEach((e,s)=>{for(let o=0;o<r;o++)a.assert(o===t||e[o]===n[o],()=>`Error in concat${r}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function o(e,t){let r=e[0].slice();for(let a=1;a<e.length;a++)r[t]+=e[a][t];return r}}),o("dlbe1",function(e,t){}),o("kaAdl",function(t,r){var a,n;function s(e,t,r){let a=[];if(null==r&&null==t)return a;if(null==t)for(;a.length<e+r.length;)a.push(-1);else a=t.slice();if(null==r)return a;if(e+r.length!==a.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+r.length}, but shape.rank = ${a.length}`);for(let n=1;n<r.length;++n){let s=r[n],o=a[a.length-r.length+n],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+e}] = ${s} but shape[${n+e}] = ${i}`)}else a[o]=s}return a}function o(e){let t={FIRST_DIM_SIZE:a.FIRST_DIM_SIZE,VALUE_ROWIDS:a.VALUE_ROWIDS,ROW_LENGTHS:a.ROW_LENGTHS,ROW_SPLITS:a.ROW_SPLITS,ROW_LIMITS:a.ROW_LIMITS,ROW_STARTS:a.ROW_STARTS},r=[];for(let a of e)if(a in t)r.push(t[a]);else break;return r}function i(e){return 0===e.length?0:e[0]===a.FIRST_DIM_SIZE?e.length-1:e.length}function l(e,t){if(null==e||null==t)return;let r=e.length,a=t.length;if(r>=a)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${r} must be less than ragged tensor input flatValues.rank = ${a})`);for(let n=0;n<Math.min(r,a-1);++n){let r=e[n],a=t[n+1];if(r>=0&&a>=0&&1!==r&&r!==a)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-e.length}] = ${r} but ragged tensor input.flatValues.shape[${n-e.length}] = ${a}`)}}e(t.exports,"RowPartitionType",()=>a),e(t.exports,"combineRaggedTensorToTensorShapes",()=>s),e(t.exports,"getRowPartitionTypesHelper",()=>o),e(t.exports,"getRaggedRank",()=>i),e(t.exports,"validateDefaultValueShape",()=>l),(n=a||(a={}))[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"}),o("4ldJF",function(t,r){e(t.exports,"PARALLELIZE_THRESHOLD",()=>n),e(t.exports,"computeOptimalWindowSize",()=>o);var a=s("8cCb2");let n=30;function o(e){return e<=n?e:(0,a.nearestDivisor)(e,Math.floor(Math.sqrt(e)))}}),o("aQHa6",function(t,r){e(t.exports,"getImageCenter",()=>a);function a(e,t,r){return[r*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}}),o("4h3p6",function(t,r){function a(e,t,r,n=!0){let s=[];if(n)(s=s.concat(t.slice(0))).push(e[0]/r),s=s.concat(e.slice(1));else{s=s.concat(e[0]);let r=t.length;for(let a=0;a<r;++a)s=s.concat([e[a+1]/t[a],t[a]]);s=s.concat(e.slice(r+1))}return s}function n(e,t,r=!0){let a=[];if(r){a.push(t);for(let r=t+1;r<e;++r)r<=2*t?(a.push(r),a.push(r-(t+1))):a.push(r)}else{let r=[],n=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?n.push(a):r.push(a);a.push(...r),a.push(0),a.push(...n)}return a}function s(e,t,r,a=!0){let n=[];a?n.push(e[0]/r):n.push(e[0]*r);for(let r=1;r<e.length;++r)r<=t.length?a?n.push(t[r-1]*e[r]):n.push(e[r]/t[r-1]):n.push(e[r]);return n}function o(e,t){let r=[0];for(let a=0;a<t;++a)r.push(e[a][0]);return r}function i(e,t,r){let a=e.slice(0,1);for(let n=0;n<r;++n)a.push(e[n+1]-t[n][0]-t[n][1]);return a}e(t.exports,"getReshaped",()=>a),e(t.exports,"getPermuted",()=>n),e(t.exports,"getReshapedPermuted",()=>s),e(t.exports,"getSliceBeginCoords",()=>o),e(t.exports,"getSliceSize",()=>i)}),o("eowEY",function(t,r){e(t.exports,"SELU_SCALEALPHA",()=>a),e(t.exports,"SELU_SCALE",()=>n);let a=1.7580993408473768,n=1.0507009873554805}),o("aMsMA",function(t,r){e(t.exports,"ERF_P",()=>a),e(t.exports,"ERF_A1",()=>n),e(t.exports,"ERF_A2",()=>s),e(t.exports,"ERF_A3",()=>o),e(t.exports,"ERF_A4",()=>i),e(t.exports,"ERF_A5",()=>l);let a=.3275911,n=.254829592,s=-.284496736,o=1.421413741,i=-1.453152027,l=1.061405429}),o("eCPD4",function(t,r){function a(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(2*e.length);for(let a=0;a<r.length;a+=2)r[a]=e[a/2],r[a+1]=t[a/2];return r}function n(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],r[a/2]=e[a+1];return{real:t,imag:r}}function s(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:r,imag:a}}function o(e){let t=Math.floor(e.length/4),r=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:r,imag:a}}function i(e,t){return{real:e[2*t],imag:e[2*t+1]}}function l(e,t,r,a){e[2*a]=t,e[2*a+1]=r}function u(e,t){let r=new Float32Array(e/2),a=new Float32Array(e/2);for(let n=0;n<Math.ceil(e/2);n++){let s=(t?2:-2)*Math.PI*(n/e);r[n]=Math.cos(s),a[n]=Math.sin(s)}return{real:r,imag:a}}function p(e,t,r){let a=(r?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}e(t.exports,"mergeRealAndImagArrays",()=>a),e(t.exports,"splitRealAndImagArrays",()=>n),e(t.exports,"complexWithEvenIndex",()=>s),e(t.exports,"complexWithOddIndex",()=>o),e(t.exports,"getComplexWithIndex",()=>i),e(t.exports,"assignToTypedArray",()=>l),e(t.exports,"exponents",()=>u),e(t.exports,"exponent",()=>p)}),o("izI5a",function(t,r){e(t.exports,"decodeEinsumEquation",()=>o),e(t.exports,"getEinsumPermutation",()=>i),e(t.exports,"checkEinsumDimSizes",()=>l),e(t.exports,"getEinsumComputePath",()=>u),e(t.exports,"isIdentityPermutation",()=>p);var a=s("8cCb2");let n=/->/g;function o(e,t){let r=((e=e.replace(/\s/g,"")).length-e.replace(n,"").length)/2;if(r<1)throw Error("Equations without an arrow are not supported.");if(r>1)throw Error('Equation must contain exactly one arrow ("->").');let[s,o]=e.split("->");(0,a.assert)(-1===s.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let i=s.split(","),l=i.length;if(t!==l)throw Error(`Expected ${l} input tensors, received ${t}`);if(l>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let u=[];for(let e=0;e<o.length;++e){let t=o[e];if(!i.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===u.indexOf(t)&&u.push(t)}for(let e=0;e<s.length;++e){let t=s[e];-1===u.indexOf(t)&&","!==t&&u.push(t)}let p=Array(i.length);for(let e=0;e<l;++e){if(new Set(i[e].split("")).size!==i[e].length)throw Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);p[e]=[];for(let t=0;t<i[e].length;++t)p[e].push(u.indexOf(i[e][t]))}let d=u.length,c=o.length,h=[];for(let e=c;e<d;++e)h.push(e);return{allDims:u,summedDims:h,idDims:p}}function i(e,t){let r=Array(e);r.fill(-1);for(let e=0;e<t.length;++e)r[t[e]]=e;let a=[];for(let t=0;t<e;++t)-1===r[t]&&a.push(t);return{permutationIndices:r=r.filter(e=>-1!==e),expandDims:a}}function l(e,t,r){let n=Array(e);for(let e=0;e<r.length;++e){let s=r[e].shape;for(let r=0;r<t[e].length;++r)void 0===n[t[e][r]]?n[t[e][r]]=s[r]:(0,a.assert)(n[t[e][r]]===s[r],()=>`Expected dimension ${n[t[e][r]]} at axis ${r} of input shaped ${JSON.stringify(s)}, but got dimension ${s[r]}`)}}function u(e,t){let r=[],a=0;0===e.length&&e.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let n=[];for(let a=0;a<e.length;++a)for(let s of function(e,t){let r=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&r.push(a);return r}(t,e[a]))-1===n.indexOf(s)&&(r[a].push(s),n.push(s));return{path:e,steps:r}}function p(e){return e.every((e,t)=>e===t)}}),o("4pqBf",function(t,r){e(t.exports,"prepareSplitSize",()=>n);var a=s("8cCb2");function n(e,t,r=0){let s=[];if("number"==typeof t)(0,a.assert)(e.shape[r]%t==0,()=>"Number of splits must evenly divide the axis."),s=Array(t).fill(e.shape[r]/t);else{let n=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);(0,a.assert)(n<=1,()=>"There should be only one negative value in split array.");let o=t.indexOf(-1);if(-1!==o){let a=t.reduce((e,t)=>t>0?e+t:e);t[o]=e.shape[r]-a}(0,a.assert)(e.shape[r]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}}),o("5NPez",function(t,r){function a(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function n(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function s(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}e(t.exports,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",()=>a),e(t.exports,"getSparseFillEmptyRowsNegativeIndexErrorMessage",()=>n),e(t.exports,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",()=>s)}),o("2A2jF",function(t,r){e(t.exports,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",()=>n),e(t.exports,"getSparseReshapeNegativeOutputDimErrorMessage",()=>o),e(t.exports,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",()=>i),e(t.exports,"getSparseReshapeInputOutputMultipleErrorMessage",()=>l),e(t.exports,"getSparseReshapeInputOutputMismatchErrorMessage",()=>u);var a=s("8cCb2");function n(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function o(e,t){return`size ${e} must be non-negative, not ${t}`}function i(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function l(e,t){let r=(0,a.sizeFromShape)(e),n=(0,a.sizeFromShape)(t);return`Input to reshape is a SparseTensor with ${r}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function u(e,t){let r=(0,a.sizeFromShape)(e),n=(0,a.sizeFromShape)(t);return`Input to reshape is a tensor with ${r} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}}),o("6bLmC",function(t,r){function a(){return"segment ids must be >= 0"}function n(){return"segment ids are not increasing"}function s(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function o(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}e(t.exports,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",()=>a),e(t.exports,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",()=>n),e(t.exports,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",()=>s),e(t.exports,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",()=>o)}),o("fHbAS",function(t,r){e(t.exports,"segOpComputeOptimalWindowSize",()=>o),e(t.exports,"computeOutShape",()=>i),e(t.exports,"collectGatherOpShapeInfo",()=>l);var a=s("8cCb2"),n=s("4ldJF");function o(e,t){let r,s=!1;for(e<=n.PARALLELIZE_THRESHOLD?(r=e,s=!0):r=(0,a.nearestDivisor)(e,Math.floor(Math.sqrt(e)));!s;)r>t||r===e?s=!0:r=(0,a.nearestDivisor)(e,r+1);return r}function i(e,t,r){let a=[],n=e.length;for(let s=0;s<n;s++)s!==t?a.push(e[s]):a.push(r);return a}function l(e,t,r,a){let n=t.shape.length,s=e.shape.length;if(0!==a&&(a<-n||a>n))throw Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${a}`);if(a<0&&(a+=n),a>s)throw Error(`batchDims (${a}) must be less than rank(x) (
    ${s}).`);if(r<a)throw Error(`batchDims (${a}) must be less than or equal to axis (${r}).`);for(let r=0;r<a;++r)if(e.shape[r]!==t.shape[r])throw Error(`x.shape[${r}]: ${e.shape[r]} should be equal to indices.shape[${r}]: ${t.shape[r]}.`);let o=e.shape[r],i=[],l=1,u=1,p=1;for(let t=0;t<a;++t)i.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<r;t++)i.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<n;e++)i.push(t.shape[e]);for(let t=r+1;t<s;t++)i.push(e.shape[t]),p*=e.shape[t];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:o,outputShape:i}}}),o("lzjc8",function(t,r){e(t.exports,"nonMaxSuppressionV3Impl",()=>s("KPYos").nonMaxSuppressionV3Impl),e(t.exports,"nonMaxSuppressionV4Impl",()=>s("KPYos").nonMaxSuppressionV4Impl),e(t.exports,"nonMaxSuppressionV5Impl",()=>s("KPYos").nonMaxSuppressionV5Impl),e(t.exports,"whereImpl",()=>s("kNeGS").whereImpl),s("KPYos"),s("kNeGS")}),o("bVQtG",function(t,r){e(t.exports,"GraphModel",()=>c),e(t.exports,"loadGraphModel",()=>h),e(t.exports,"loadGraphModelSync",()=>f),s("i64bB");var a=s("c2DT1"),n=s("9ELKf"),o=s("9jCh7"),i=s("jjNRA"),l=s("jRFPP"),u=s("eZl48"),p=s("kqYp1"),d=s("4FRLN");class c{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=n){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,null==t&&(this.loadOptions={}),this.resourceManager=new(0,p.ResourceManager)}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return i.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await (0,d.decodeWeightsStream)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let r=this.artifacts.modelTopology,a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new(0,u.GraphExecutor)(l.OperationMapper.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=l.OperationMapper.Instance.transformGraph(e.modelInitializer);this.initializer=new(0,u.GraphExecutor)(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof o.Tensor?[e]:e,r={};return t.forEach((e,t)=>r[this.structuredOutputKeys[t]]=e),r}return e}predict(e,t){let r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){let r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof o.Tensor)&&!Array.isArray(e)){let r=null==(t=this.signature)?void 0:t.inputs;if(null!=r)for(let t in r){let a=r[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((t,r)=>{var n,s,o;let i=null==(o=null==(s=null==(n=this.signature)?void 0:n.inputs)?void 0:s[r])?void 0:o.resourceId;return null!=i?t[r]=this.resourceIdToCapturedInput[i]:t[r]=e[a++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,r=Object.keys(t);for(let a=0;a<r.length;a++){let n=t[r[a]];this.resourceIdToCapturedInput[n.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,a.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function h(e,t={},r=n){var a;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((a=e).endsWith("/")||(a+="/"),e=`${a}model.json?tfjs-format=file`);let s=new c(e,t,r);return await s.load(),s}function f(e){let t;if(null==e)throw Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");if(e instanceof Array){let[r,a]=e;if(!r)throw Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw Error("Model JSON is missing 'weightsManifest'");let s=n.getWeightSpecs(r.weightsManifest),o=n.getModelArtifactsForJSONSync(r,s,a);t=n.fromMemorySync(o)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=n.fromMemorySync(e);else throw Error("Unknown model format");let r=new c(t);return r.load(),r}}),o("jRFPP",function(t,r){e(t.exports,"OperationMapper",()=>E),e(t.exports,"getStringParam",()=>R),e(t.exports,"getStringArrayParam",()=>V),e(t.exports,"getNumberParam",()=>$),e(t.exports,"getNumericArrayParam",()=>_),e(t.exports,"getBoolParam",()=>P),e(t.exports,"getBoolArrayParam",()=>z),e(t.exports,"getTensorShapeParam",()=>L),e(t.exports,"getTensorShapeArrayParam",()=>G),e(t.exports,"getDtypeParam",()=>D),e(t.exports,"getDtypeArrayParam",()=>M),s("i64bB");var a=s("ibsdL"),n=s("iILH2"),o=s("dWfqP"),i=s("9PnRL"),l=s("cCcNy"),u=s("6T10F"),p=s("25do8"),d=s("kQhpu"),c=s("iKevB"),h=s("gul1X"),f=s("8ADHf"),m=s("cf9s6"),g=s("agimj"),x=s("j4qIR"),y=s("gUOFE"),b=s("6seiJ"),v=s("1st1Z"),k=s("l0Shb"),N=s("eTKRE"),C=s("5vXpX"),T=s("kuUeg"),S=s("3Fxik"),I=s("3km3B"),w=s("6ZWSX").Buffer;class E{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[l,u,p,d,c,h,f,m,g,x,y,b,v,k,N,C,T,S,I].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let r=e.node,a=[],n=[],s=[],o=r.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?n.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),l=[],u=[],p={},d={};null!=t&&(p=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let c=Object.keys(o);c.forEach(e=>{let t=o[e];t.inputNames.forEach((e,r)=>{let[a,,n]=(0,i.getNodeNameAndIndex)(e),s=o[a];if(null!=s.outputs){let e=s.outputs.indexOf(n);if(-1!==e){let n=`${a}:${e}`;t.inputNames[r]=n}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(d).length?c.forEach(e=>{let t=o[e];0===t.children.length&&u.push(t)}):Object.keys(d).forEach(e=>{let[t]=(0,i.getNodeNameAndIndex)(e),r=o[t];null!=r&&(r.signatureKey=d[e],u.push(r))}),Object.keys(p).length>0?Object.keys(p).forEach(e=>{let[t]=(0,i.getNodeNameAndIndex)(e),r=o[t];r&&(r.signatureKey=p[e],l.push(r))}):l=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let f={nodes:o,inputs:l,outputs:u,weights:n,placeholders:a,signature:t,functions:h};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){let t=(0,o.getRegisteredOp)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(r.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(r.attrParams=t.attrs.reduce((t,r)=>{let a,n=r.type;switch(r.type){case"string":void 0===(a=R(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=R(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":void 0===(a=V(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=V(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":void 0===(a=$(e.attr,r.tfName,r.defaultValue||0))&&r.tfDeprecatedName&&(a=$(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":void 0===(a=_(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=_(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":void 0===(a=P(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=P(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":void 0===(a=z(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=z(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":void 0===(a=L(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=L(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":void 0===(a=G(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=G(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":void 0===(a=D(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=D(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":void 0===(a=M(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=M(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":void 0===(a=B(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=B(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return t[r.name]={value:a,type:n},t},{})),r}mapFunction(e){let t=e.nodeDef,r=[],a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let n=[],s=[];e.signature.inputArg.forEach(e=>{let[t]=(0,i.getNodeNameAndIndex)(e.name),r={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:F(e.type),type:"dtype"}},children:[]};r.signatureKey=e.name,n.push(r),a[t]=r}),Object.keys(a).forEach(e=>{let t=a[e];t.inputNames.forEach((e,r)=>{let[n,,s]=(0,i.getNodeNameAndIndex)(e),o=a[n];if(null!=o.outputs){let e=o.outputs.indexOf(s);if(-1!==e){let a=`${n}:${e}`;t.inputNames[r]=a}}t.inputs.push(o),o.children.push(t)})});let o=e.ret;e.signature.outputArg.forEach(e=>{let[t,r]=(0,i.getNodeNameAndIndex)(o[e.name]),n=a[t];null!=n&&(n.defaultOutput=r,s.push(n))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:n,outputs:s,weights:r,placeholders:[],signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return null!=t&&(r=t[r]),{name:r,dtype:e.type}}}function A(e,t){let r=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=(0,a.env)().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==w)return new w(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?r:r.toLowerCase()}function R(e,t,r,a=!1){let n=e[t];return null!=n?A(n.s,a):r}function P(e,t,r){let a=e[t];return a?a.b:r}function $(e,t,r){let a=e[t]||{},n=null!=a.i?a.i:null!=a.f?a.f:r;return"number"==typeof n?n:parseInt(n,10)}function F(e){switch("string"==typeof e&&(e=n.DataType[e]),e){case n.DataType.DT_FLOAT:case n.DataType.DT_HALF:return"float32";case n.DataType.DT_INT32:case n.DataType.DT_INT64:case n.DataType.DT_INT8:case n.DataType.DT_UINT8:return"int32";case n.DataType.DT_BOOL:return"bool";case n.DataType.DT_DOUBLE:return"float32";case n.DataType.DT_STRING:return"string";case n.DataType.DT_COMPLEX64:case n.DataType.DT_COMPLEX128:return"complex64";default:return null}}function B(e,t,r){let a=e[t];return a&&a.func?a.func.name:r}function D(e,t,r){let a=e[t];return a&&a.type?F(a.type):r}function M(e,t,r){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map(e=>F(e)):r}function O(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function L(e,t,r){let a=e[t];return a&&a.shape?O(a.shape):r}function _(e,t,r){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):r}function V(e,t,r,a=!1){let n=e[t];return n&&n.list&&n.list.s?n.list.s.map(e=>A(e,a)):r}function G(e,t,r){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(e=>O(e)):r}function z(e,t,r){let a=e[t];return a&&a.list&&a.list.b?a.list.b:r}}),o("iILH2",function(t,r){var a,n,s,o,i;e(t.exports,"DataType",()=>a),(s=a||(a={}))[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF",(i=(o=n||(n={})).CheckpointFormatVersion||(o.CheckpointFormatVersion={}))[i.LEGACY=0]="LEGACY",i[i.V1=1]="V1",i[i.V2=2]="V2"}),o("dWfqP",function(t,r){e(t.exports,"registerOp",()=>n),e(t.exports,"getRegisteredOp",()=>s),e(t.exports,"deregisterOp",()=>o);let a={};function n(e,t){a[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function s(e){return a[e]}function o(e){delete a[e]}}),o("9PnRL",function(t,r){e(t.exports,"getParamValue",()=>o),e(t.exports,"getTensor",()=>i),e(t.exports,"parseNodeName",()=>d),e(t.exports,"getTensorsForCurrentContext",()=>l),e(t.exports,"getNodeNameAndIndex",()=>u),e(t.exports,"getPadding",()=>c),e(t.exports,"cloneTensor",()=>h),s("i64bB");var a=s("5TuCW"),n=s("jjNRA");function o(e,t,r,a,s){let o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){let e=o.inputIndexStart,l=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd,u=e<0?t.inputNames.length+e:e;if("tensor"===o.type)return i(t.inputNames[u],r,a,s);if("tensors"===o.type){let n=t.inputs.slice(e,l);return t.inputNames.slice(e,l).filter((e,t)=>{var r;return(null==(r=n[t])?void 0:r.op)!=="NoOp"}).map(e=>i(e,r,a,s))}let p=i(t.inputNames[u],r,a,s),d=p.dataSync();return"number"===o.type?d[0]:n.toNestedArray(p.shape,d)}let l=t.attrParams[e];return l&&l.value}function i(e,t,r,a){let[n,s]=d(e,r);if(null!=a){let e=a.getHashTableHandleByName(n);if(null!=e)return e}let o=r.currentContextIds.find(e=>!!t[p(n,e)]);return void 0!==o?t[p(n,o)][s]:void 0}function l(e,t,r){return t[p(e,r.currentContextId)]}function u(e,t){let[r,a,n]=d(e,t);return[p(r,t&&t.currentContextId),a,n]}function p(e,t){return t?`${e}-${t}`:e}function d(e,t){let r;if(""===e)return["",0,void 0];let a=null!=t&&null!=t.parseNodeNameCache;if(a){let r=t.parseNodeNameCache.get(e);if(null!=r)return r}let n=e.split(":");if(1===n.length)r=[e,0,void 0];else{let e=n[0],t=3===n.length?n[1]:void 0;r=[e,Number(n[n.length-1]),t]}return a&&t.parseNodeNameCache.set(e,r),r}function c(e,t,r){let a=o("pad",e,t,r);if("explicit"===a){a=o("explicitPaddings",e,t,r);let n=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)n[e][0]=a[2*e],n[e][1]=a[2*e+1];return n}return a}function h(e){return e.kept?e:(0,a.clone)(e)}}),o("cCcNy",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),o("6T10F",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),o("25do8",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]}),o("kQhpu",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]}),o("iKevB",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),o("gul1X",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),o("8ADHf",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]}),o("cf9s6",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),o("agimj",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]}),o("j4qIR",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]}),o("gUOFE",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}]}),o("6seiJ",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}]}),o("1st1Z",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}]}),o("l0Shb",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]}),o("eTKRE",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]}),o("5vXpX",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]}),o("kuUeg",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),o("3Fxik",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]}),o("3km3B",function(t,r){e(t.exports,"json",()=>a);let a=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]}),o("eZl48",function(t,r){e(t.exports,"GraphExecutor",()=>d),s("i64bB");var a=s("ibsdL"),n=s("c2DT1"),o=s("jjNRA"),i=s("9PnRL"),l=s("11iKq"),u=s("hv42p"),p=s("a96bd");class d{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new d(e.functions[t],this)})}getCompilationKey(e,t){let r=e.map(e=>e.name).sort(),a=t.map(e=>e.name).sort();return r.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){let r=(0,p.getExecutionSubgraph)(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:n,syncInputs:s}=r;if(null!=n)throw Error(`This execution contains the node '${n.name}', which has the dynamic op '${n.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let r=t.map(e=>e.name),n=Object.keys(e);throw Error(`Cannot compute the outputs [${r}] from the provided inputs [${n}]. Missing the following inputs: [${a}]`)}let o=(0,p.getNodesInTopologicalOrder)(this.graph,r),i=(0,p.getNodeLiveUntilMap)(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return(0,n.keep)(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let r=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=r.map(e=>this.graph.nodes[(0,i.parseNodeName)(e)[0]]),p=t.map(e=>(0,i.parseNodeName)(e)[0]),d=new Set(p),c=p.map(e=>this.graph.nodes[e]);0===c.length&&(c=this._outputs);let h=this.getCompilationKey(s,c),f=this.compiledMap.get(h);null==f&&(f=this.compile(e,c),this.compiledMap.set(h,f));try{this.keepIntermediateTensors=(0,a.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let m={},g={};return(0,n.tidy)(()=>{let r=new(0,u.ExecutionContext)(this.weightMap,m,g,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[n,s]=(0,i.parseNodeName)(t,r),o=[];o[s]=e[t],a[n]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(o))});let n=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:p}=f;for(let e of s){if(a[e.name])continue;let t=(0,l.executeOp)(e,a,r,this._resourceManager);if(o.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,r,n,d,p.get(e.name))}return null==this.parent&&r.dispose(n),t.map(e=>(0,i.getTensor)(e,a,r))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,r,a,n,s,o){if(!((0,p.isControlFlow)(t)||s.has(e))){for(let a of r[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(let e of t.inputs){if((0,p.isControlFlow)(e))continue;let t=(0,i.getTensorsForCurrentContext)(e.name,r,a);if(null!=t)for(let e of t){if(!e||e.kept||n.has(e.id))continue;let t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,a,n,s){if(!(0,p.isControlFlow)(e)&&null!=s){for(let e of s)if(!((0,p.isControlFlow)(e)||n.has(e.name)))for(let n of(0,i.getTensorsForCurrentContext)(e.name,t,r))!n||n.kept||a.has(n.id)||n.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,n={},s={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,a.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let o=new(0,u.ExecutionContext)(this.weightMap,n,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let l=await this.executeWithControlFlow(e,o,t,r),p=t.map(e=>(0,i.getTensor)(e,l,o)),d=new Set([...p.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(l).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||d.has(e.id)||e.dispose()})}),null==this.parent&&o.dispose(d),p}async executeFunctionAsync(e,t,r){let a=e.reduce((e,t,r)=>(e[this.inputs[r].name]=t,e),{});return this._executeAsync(a,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,a){let n=Object.keys(e),s=n.map(e=>this.graph.nodes[(0,i.parseNodeName)(e)[0]]),o=r.map(e=>(0,i.parseNodeName)(e)[0]),l=new Set(o),u=o.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);let{usedNodes:d,missingInputs:c,dynamicNode:h,syncInputs:f}=(0,p.getExecutionSubgraph)(e,u,this.weightMap,this._initNodes),m=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[r,a]=(0,i.parseNodeName)(t),n=[];n[a]=e[t],g[r]=n});let x={},y=this.getFrozenTensorIds(g),b={};for(;m.length>0;){let e=this.processStack(s,m,t,g,b,y,l,x,d);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let v=u.filter(e=>!(0,p.isControlFlow)(e)&&!(0,i.getTensor)(e.name,g,t)).map(e=>e.name);if(v.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),Error(`Cannot compute the outputs [${v}] from the provided inputs [${n}]. Consider providing the following inputs: [${c}]. ${e}`)}return g}processStack(e,t,r,a,n,s,u,p,d){let c=[];for(;t.length>0;){let e=t.pop();r.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&(0,i.getParamValue)("isConstant",e.node,a,r)&&([h]=(0,i.getNodeNameAndIndex)(e.node.name,r)),null==a[e.node.name]){let f=(0,l.executeOp)(e.node,a,r,this._resourceManager);h||([h]=(0,i.getNodeNameAndIndex)(e.node.name,r));let m=r.currentContext;o.isPromise(f)?c.push(f.then(o=>(a[h]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(o)),r.currentContext=m,this.checkTensorForDisposal(h,e.node,a,r,s,u,p),this.processChildNodes(e.node,t,r,a,n,d),o))):(a[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),this.checkTensorForDisposal(h,e.node,a,r,s,u,p),this.processChildNodes(e.node,t,r,a,n,d))}else this.processChildNodes(e.node,t,r,a,n,d)}return c}processChildNodes(e,t,r,a,n,s){e.children.forEach(e=>{let[o]=(0,i.getNodeNameAndIndex)(e.name,r);!n[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!(0,i.getTensor)(e,a,r))&&(n[o]=!0,t.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!(0,i.getTensor)(e,a,r))&&(n[o]=!0,t.push({contexts:r.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[a]=(0,i.parseNodeName)(t),n=this.graph.nodes[a];if(n.attrParams.shape&&n.attrParams.shape.value){let e=n.attrParams.shape.value,t=e.length===r.shape.length&&r.shape.every((t,r)=>-1===e[r]||e[r]===t);o.assert(t,()=>`The shape of dict['${n.name}'] provided in model.execute(dict) must be [${e}], but was [${r.shape}]`)}n.attrParams.dtype&&n.attrParams.dtype.value&&o.assert(r.dtype===n.attrParams.dtype.value,()=>`The dtype of dict['${n.name}'] provided in model.execute(dict) must be ${n.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;let a={};for(let n in e){let s=null==(r=null==(t=this._signature)?void 0:t.inputs)?void 0:r[n];null!=s?a[s.name]=e[n]:a[n]=e[n]}return a}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=(0,i.parseNodeName)(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,r;let a=null==(r=null==(t=this._signature)?void 0:t.outputs)?void 0:r[e];return null!=a?a.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=(0,i.parseNodeName)(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}}),o("11iKq",function(t,r){e(t.exports,"executeOp",()=>E),s("i64bB");var a=s("c2DT1"),n=s("jjNRA"),o=s("1EcJz"),i=s("dWfqP"),l=s("cWPX8"),u=s("4c4iS"),p=s("c3X9P"),d=s("gT6Ou"),c=s("3TPMs"),h=s("c0ywX"),f=s("gPS1H"),m=s("ln7DR"),g=s("c6NzH"),x=s("dQiCM"),y=s("h1Kl3"),b=s("7TMBo"),v=s("9lSzv"),k=s("bPan9"),N=s("bHY7p"),C=s("9Buta"),T=s("3pwdq"),S=s("7RSIj"),I=s("j4Rla"),w=s("cXzgX");function E(e,t,r,s,A=a.tidy){let R=((e,t,r)=>{switch(e.category){case"arithmetic":return A(()=>l.executeOp(e,t,r));case"basic_math":return A(()=>u.executeOp(e,t,r));case"control":return p.executeOp(e,t,r);case"convolution":return A(()=>d.executeOp(e,t,r));case"creation":return A(()=>c.executeOp(e,t,r));case"dynamic":return h.executeOp(e,t,r);case"evaluation":return A(()=>f.executeOp(e,t,r));case"image":return A(()=>x.executeOp(e,t,r));case"graph":return A(()=>m.executeOp(e,t,r));case"logical":return A(()=>y.executeOp(e,t,r));case"matrices":return A(()=>b.executeOp(e,t,r));case"normalization":return A(()=>v.executeOp(e,t,r));case"ragged":return A(()=>k.executeOp(e,t,r));case"reduction":return A(()=>N.executeOp(e,t,r));case"slice_join":return A(()=>C.executeOp(e,t,r));case"sparse":return A(()=>T.executeOp(e,t,r));case"spectral":return A(()=>S.executeOp(e,t,r));case"string":return A(()=>I.executeOp(e,t,r));case"transformation":return A(()=>w.executeOp(e,t,r));case"hash_table":return g.executeOp(e,t,r,s);case"custom":let a=(0,i.getRegisteredOp)(e.op);if(a&&a.customExecutor)return a.customExecutor(new(0,o.NodeValueImpl)(e,t,r));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,r);return n.isPromise(R)?R.then(e=>[].concat(e)):[].concat(R)}}),o("1EcJz",function(t,r){e(t.exports,"NodeValueImpl",()=>o);var a=s("9PnRL"),n=s("jRFPP");class o{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return(0,a.getTensor)(e,this.tensorMap,this.context)}getAttr(e,t){let r=this.node.rawAttrs[e];if(null!=r.tensor)return(0,a.getTensor)(e,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return(0,n.getNumberParam)(this.node.rawAttrs,e,t);if(null!=r.s)return(0,n.getStringParam)(this.node.rawAttrs,e,t);if(null!=r.b)return(0,n.getBoolParam)(this.node.rawAttrs,e,t);if(null!=r.shape)return(0,n.getTensorShapeParam)(this.node.rawAttrs,e,t);if(null!=r.type)return(0,n.getDtypeParam)(this.node.rawAttrs,e,t);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return(0,n.getNumericArrayParam)(this.node.rawAttrs,e,t);if(null!=r.list.s)return(0,n.getStringArrayParam)(this.node.rawAttrs,e,t);if(null!=r.list.shape)return(0,n.getTensorShapeArrayParam)(this.node.rawAttrs,e,t);if(null!=r.list.b)return(0,n.getBoolArrayParam)(this.node.rawAttrs,e,t);if(null!=r.list.type)return(0,n.getDtypeArrayParam)(this.node.rawAttrs,e,t)}return t}}}),o("cWPX8",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"AddN":return[s.addN((0,n.getParamValue)("tensors",e,t,r))];case"FloorMod":case"Mod":return[s.mod((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Mul":return[s.mul((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"RealDiv":case"Div":return[s.div((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"DivNoNan":return[s.divNoNan((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"FloorDiv":return[s.floorDiv((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Sub":return[s.sub((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Minimum":return[s.minimum((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Maximum":return[s.maximum((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Pow":return[s.pow((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"SquaredDifference":return[s.squaredDifference((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("h8nZK",function(e,r){var a=s("aosGd");t(e.exports,a)}),o("4c4iS",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs((0,n.getParamValue)("x",e,t,r))];case"Acos":return[s.acos((0,n.getParamValue)("x",e,t,r))];case"Acosh":return[s.acosh((0,n.getParamValue)("x",e,t,r))];case"Asin":return[s.asin((0,n.getParamValue)("x",e,t,r))];case"Asinh":return[s.asinh((0,n.getParamValue)("x",e,t,r))];case"Atan":return[s.atan((0,n.getParamValue)("x",e,t,r))];case"Atan2":return[s.atan2((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("y",e,t,r))];case"Atanh":return[s.atanh((0,n.getParamValue)("x",e,t,r))];case"Ceil":return[s.ceil((0,n.getParamValue)("x",e,t,r))];case"Complex":return[s.complex((0,n.getParamValue)("real",e,t,r),(0,n.getParamValue)("imag",e,t,r))];case"Cos":return[s.cos((0,n.getParamValue)("x",e,t,r))];case"Cosh":return[s.cosh((0,n.getParamValue)("x",e,t,r))];case"Elu":return[s.elu((0,n.getParamValue)("x",e,t,r))];case"Erf":return[s.erf((0,n.getParamValue)("x",e,t,r))];case"Exp":return[s.exp((0,n.getParamValue)("x",e,t,r))];case"Expm1":return[s.expm1((0,n.getParamValue)("x",e,t,r))];case"Floor":return[s.floor((0,n.getParamValue)("x",e,t,r))];case"Log":return[s.log((0,n.getParamValue)("x",e,t,r))];case"Log1p":return[s.log1p((0,n.getParamValue)("x",e,t,r))];case"Imag":return[s.imag((0,n.getParamValue)("x",e,t,r))];case"Neg":return[s.neg((0,n.getParamValue)("x",e,t,r))];case"Reciprocal":return[s.reciprocal((0,n.getParamValue)("x",e,t,r))];case"Real":return[s.real((0,n.getParamValue)("x",e,t,r))];case"Relu":return[s.relu((0,n.getParamValue)("x",e,t,r))];case"Round":return[s.round((0,n.getParamValue)("x",e,t,r))];case"Selu":return[s.selu((0,n.getParamValue)("x",e,t,r))];case"Sigmoid":return[s.sigmoid((0,n.getParamValue)("x",e,t,r))];case"Sin":return[s.sin((0,n.getParamValue)("x",e,t,r))];case"Sign":return[s.sign((0,n.getParamValue)("x",e,t,r))];case"Sinh":return[s.sinh((0,n.getParamValue)("x",e,t,r))];case"Softplus":return[s.softplus((0,n.getParamValue)("x",e,t,r))];case"Sqrt":return[s.sqrt((0,n.getParamValue)("x",e,t,r))];case"Square":return[s.square((0,n.getParamValue)("x",e,t,r))];case"Tanh":return[s.tanh((0,n.getParamValue)("x",e,t,r))];case"Tan":return[s.tan((0,n.getParamValue)("x",e,t,r))];case"ClipByValue":return[s.clipByValue((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("clipValueMin",e,t,r),(0,n.getParamValue)("clipValueMax",e,t,r))];case"Relu6":return[s.relu6((0,n.getParamValue)("x",e,t,r))];case"Rsqrt":return[s.rsqrt((0,n.getTensor)(e.inputNames[0],t,r))];case"LeakyRelu":return[s.leakyRelu((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("alpha",e,t,r))];case"Prelu":return[s.prelu((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("alpha",e,t,r))];case"IsNan":return[s.isNaN((0,n.getTensor)(e.inputNames[0],t,r))];case"IsInf":return[s.isInf((0,n.getTensor)(e.inputNames[0],t,r))];case"IsFinite":return[s.isFinite((0,n.getTensor)(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("c3X9P",function(t,r){e(t.exports,"executeOp",()=>l),s("i64bB");var a=s("3xp7o"),n=s("gwwf3"),o=s("7TU8D"),i=s("9PnRL");let l=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{let a=(0,i.getParamValue)("thenBranch",e,t,r),n=(0,i.getParamValue)("elseBranch",e,t,r),s=(0,i.getParamValue)("cond",e,t,r),o=(0,i.getParamValue)("args",e,t,r);if((await s.data())[0])return r.functionMap[a].executeFunctionAsync(o,r.tensorArrayMap,r.tensorListMap);return r.functionMap[n].executeFunctionAsync(o,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let a=(0,i.getParamValue)("body",e,t,r),n=(0,i.getParamValue)("cond",e,t,r),s=(0,i.getParamValue)("args",e,t,r),o=await r.functionMap[n].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap),l=s.map(e=>e.id),u=await o[0].data();o.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||e.dispose()});let p=s;for(;u[0];){let e=p,t=(p=await r.functionMap[a].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let s=await r.functionMap[n].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return p}case"LoopCond":{let a=(0,i.getParamValue)("pred",e,t,r);return[(0,i.cloneTensor)(a)]}case"Switch":{let a=(0,i.getParamValue)("pred",e,t,r),n=(0,i.getParamValue)("data",e,t,r);return n.kept||(n=(0,i.cloneTensor)(n)),(await a.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let a=e.inputNames.find(e=>void 0!==(0,i.getTensor)(e,t,r));if(a){let e=(0,i.getTensor)(a,t,r);return[(0,i.cloneTensor)(e)]}return}case"Enter":{let a=(0,i.getParamValue)("frameName",e,t,r),n=(0,i.getParamValue)("tensor",e,t,r);return r.enterFrame(a),[(0,i.cloneTensor)(n)]}case"Exit":{let a=(0,i.getParamValue)("tensor",e,t,r);return r.exitFrame(),[(0,i.cloneTensor)(a)]}case"NextIteration":{let a=(0,i.getParamValue)("tensor",e,t,r);return r.nextIteration(),[(0,i.cloneTensor)(a)]}case"TensorArrayV3":{let s=(0,i.getParamValue)("size",e,t,r),o=(0,i.getParamValue)("dtype",e,t,r),l=(0,i.getParamValue)("elementShape",e,t,r),u=(0,i.getParamValue)("dynamicSize",e,t,r),p=(0,i.getParamValue)("clearAfterRead",e,t,r),d=(0,i.getParamValue)("identicalElementShapes",e,t,r),c=(0,i.getParamValue)("name",e,t,r),h=new(0,n.TensorArray)(c,o,s,l,d,u,p);return r.addTensorArray(h),[h.idTensor,(0,a.scalar)(1)]}case"TensorArrayWriteV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=(0,i.getParamValue)("index",e,t,r),s=(0,i.getParamValue)("tensor",e,t,r),o=r.getTensorArray(a.id);return o.write(n,s),[o.idTensor]}case"TensorArrayReadV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=(0,i.getParamValue)("index",e,t,r);return[r.getTensorArray(a.id).read(n)]}case"TensorArrayGatherV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=(0,i.getParamValue)("indices",e,t,r),s=(0,i.getParamValue)("dtype",e,t,r);return[r.getTensorArray(a.id).gather(n,s)]}case"TensorArrayScatterV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=(0,i.getParamValue)("indices",e,t,r),s=(0,i.getParamValue)("tensor",e,t,r),o=r.getTensorArray(a.id);return o.scatter(n,s),[o.idTensor]}case"TensorArrayConcatV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=r.getTensorArray(a.id),s=(0,i.getParamValue)("dtype",e,t,r);return[n.concat(s)]}case"TensorArraySplitV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=(0,i.getParamValue)("tensor",e,t,r),s=(0,i.getParamValue)("lengths",e,t,r),o=r.getTensorArray(a.id);return o.split(s,n),[o.idTensor]}case"TensorArraySizeV3":{let n=(0,i.getParamValue)("tensorArrayId",e,t,r),s=r.getTensorArray(n.id);return[(0,a.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{let a=(0,i.getParamValue)("tensorArrayId",e,t,r),n=r.getTensorArray(a.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("index",e,t,r),s=(0,i.getParamValue)("tensor",e,t,r),o=r.getTensorList(a.id);return o.setItem(n,s),[o.idTensor]}case"TensorListGetItem":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("index",e,t,r),s=(0,i.getParamValue)("elementShape",e,t,r),o=(0,i.getParamValue)("elementDType",e,t,r);return[r.getTensorList(a.id).getItem(n,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{let a=(0,i.getParamValue)("indices",e,t,r),n=(0,i.getParamValue)("tensor",e,t,r),s=(0,i.getParamValue)("elementShape",e,t,r),l=(0,i.getParamValue)("numElements",e,t,r),u=(0,o.scatter)(n,a,s,l);return r.addTensorList(u),[u.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a,n=(0,i.getParamValue)("elementShape",e,t,r),s=(0,i.getParamValue)("elementDType",e,t,r);a="TensorListReserve"===e.op?"numElements":"maxNumElements";let l=(0,i.getParamValue)(a,e,t,r),u="TensorListReserve"===e.op?-1:l,p=(0,o.reserve)(n,s,l,u);return r.addTensorList(p),[p.idTensor]}case"TensorListGather":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("indices",e,t,r),s=(0,i.getParamValue)("elementShape",e,t,r),o=(0,i.getParamValue)("elementDType",e,t,r);return[r.getTensorList(a.id).gather(n,o,s)]}case"TensorListStack":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("elementShape",e,t,r),s=(0,i.getParamValue)("elementDType",e,t,r),o=(0,i.getParamValue)("numElements",e,t,r);return[r.getTensorList(a.id).stack(n,s,o)]}case"TensorListFromTensor":{let a=(0,i.getParamValue)("tensor",e,t,r),n=(0,i.getParamValue)("elementShape",e,t,r),s=(0,i.getParamValue)("elementDType",e,t,r),l=(0,o.fromTensor)(a,n,s);return r.addTensorList(l),[l.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=r.getTensorList(a.id),s=(0,i.getParamValue)("dtype",e,t,r),o=(0,i.getParamValue)("elementShape",e,t,r);return[n.concat(s,o)]}case"TensorListPushBack":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("tensor",e,t,r),s=r.getTensorList(a.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("elementShape",e,t,r),s=(0,i.getParamValue)("elementDType",e,t,r);return[r.getTensorList(a.id).popBack(n,s)]}case"TensorListSplit":{let a=(0,i.getParamValue)("tensor",e,t,r),n=(0,i.getParamValue)("elementShape",e,t,r),s=(0,i.getParamValue)("lengths",e,t,r),l=(0,o.split)(a,s,n);return r.addTensorList(l),[l.idTensor]}case"TensorListLength":{let n=(0,i.getParamValue)("tensorListId",e,t,r),s=r.getTensorList(n.id);return[(0,a.scalar)(s.size(),"int32")]}case"TensorListResize":{let a=(0,i.getParamValue)("tensorListId",e,t,r),n=(0,i.getParamValue)("size",e,t,r),s=r.getTensorList(a.id).resize(n);return r.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("gwwf3",function(t,r){e(t.exports,"TensorArray",()=>h),s("i64bB");var a=s("iTu6j"),n=s("c2DT1"),o=s("4sqA7"),i=s("3xp7o"),l=s("79KOG"),u=s("8BrLX"),p=s("erbmM"),d=s("gBOC6"),c=s("cC9h5");class h{constructor(e,t,r,a,s,o,l){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=(0,i.scalar)(0),(0,n.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,(0,n.keep)(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,r)=>this.write(e,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,p.tensor)([],[0].concat(this.elementShape));let r=this.readMany(e);return(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),(0,u.stack)(r,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,p.tensor)([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let r=this.readMany(t);return(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),(0,a.concat)(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,(0,d.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,a=e.map(e=>r+=e);if(r!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=0===r?0:t.size/r,i=[];(0,n.tidy)(()=>{t=(0,o.reshape)(t,[1,r,s]);for(let r=0;r<e.length;++r){let n=[0,0===r?0:a[r-1],0],u=[1,e[r],s];i[r]=(0,o.reshape)((0,l.slice)(t,n,u),this.elementShape)}return i});let u=[];for(let t=0;t<e.length;t++)u[t]=t;this.writeMany(u,i)}}}),o("cC9h5",function(t,r){e(t.exports,"assertShapesMatchAllowUndefinedSize",()=>n),e(t.exports,"inferElementShape",()=>i),e(t.exports,"mergeElementShape",()=>l),s("i64bB");var a=s("jjNRA");function n(e,t,r=""){if("number"!=typeof e&&"number"!=typeof t){a.assert(e.length===t.length,()=>r+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let s=e[n],o=t[n];a.assert(s<0||o<0||s===o,()=>r+` Shapes ${e} and ${t} must match`)}}}function o(e){return!("number"==typeof e||e.some(e=>e<0))}function i(e,t,r){let a=l(e,r),n=!o(a);if(n&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(n&&t.forEach(e=>{a=l(e.shape,a)}),!o(a))throw Error(`Non-fully-defined elementShape: ${a}`);return a}function l(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let a=0;a<e.length;++a){let n=e[a],s=t[a];if(n>=0&&s>=0&&n!==s)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[a]=n>=0?n:s}return r}}),o("7TU8D",function(t,r){e(t.exports,"fromTensor",()=>f),e(t.exports,"reserve",()=>m),e(t.exports,"scatter",()=>g),e(t.exports,"split",()=>x),s("i64bB");var a=s("iTu6j"),n=s("c2DT1"),o=s("4sqA7"),i=s("3xp7o"),l=s("79KOG"),u=s("8BrLX"),p=s("erbmM"),d=s("gBOC6"),c=s("cC9h5");class h{get id(){return this.idTensor.id}constructor(e,t,r,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,null!=e&&e.forEach(e=>{if(r!==e.dtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${e.dtype}`);(0,c.assertShapesMatchAllowUndefinedSize)(t,e.shape,"TensorList shape mismatch: "),(0,n.keep)(e)}),this.idTensor=(0,i.scalar)(0),this.maxNumElements=a,(0,n.keep)(this.idTensor)}copy(){return new h([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==r&&this.tensors.length!==r)throw Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);(0,c.assertShapesMatchAllowUndefinedSize)(e,this.elementShape,"TensorList shape mismatch: ");let a=(0,c.inferElementShape)(this.elementShape,this.tensors,e);return(0,n.tidy)(()=>{let e=this.tensors.map(e=>(0,o.reshape)(e,a));return(0,u.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let r=(0,c.inferElementShape)(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,(0,c.assertShapesMatchAllowUndefinedSize)(a.shape,e,"TensorList shape mismatch: "),(0,o.reshape)(a,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if((0,c.assertShapesMatchAllowUndefinedSize)(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");(0,n.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new h([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);(0,c.assertShapesMatchAllowUndefinedSize)(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=(0,c.inferElementShape)(this.elementShape,this.tensors,t);return(0,o.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,n.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=(0,c.inferElementShape)(this.elementShape,this.tensors,r);return 0===e.length?(0,p.tensor)([],[0].concat(a)):(0,n.tidy)(()=>{let t=e.map(e=>(0,o.reshape)(this.tensors[e],a));return(0,u.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);(0,c.assertShapesMatchAllowUndefinedSize)(this.elementShape,t,"TensorList shape mismatch: ");let r=(0,c.inferElementShape)(this.elementShape,this.tensors,t);return 0===this.size()?(0,p.tensor)([],[0].concat(r)):(0,n.tidy)(()=>{let e=this.tensors.map(e=>(0,o.reshape)(e,r));return(0,a.concat)(e,0)})}}function f(e,t,r){let a=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);let n=e.shape.slice(1);return(0,c.assertShapesMatchAllowUndefinedSize)(n,t,"TensorList shape mismatch: "),new h((0,d.unstack)(e),t,a)}function m(e,t,r,a){return new h([],e,t,a)}function g(e,t,r,a){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(null!=a&&-1!==a&&n>=a)throw Error(`Max index must be < array size (${n}  vs. ${a})`);let s=new h([],r,e.dtype,a),o=(0,d.unstack)(e,0);return t.forEach((e,t)=>{s.setItem(e,o[t])}),s}function x(e,t,r){let a=0,s=t.map(e=>a+=e);if(a!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${e.shape}`);let i=e.shape.slice(1),u=(0,c.mergeElementShape)(i,r),p=0===a?0:e.size/a,d=(0,n.tidy)(()=>{let r=[];e=(0,o.reshape)(e,[1,a,p]);for(let a=0;a<t.length;++a){let n=[0,0===a?0:s[a-1],0],i=[1,t[a],p];r[a]=(0,o.reshape)((0,l.slice)(e,n,i),u)}return e.dispose(),r}),f=new h([],r,e.dtype,t.length);for(let e=0;e<d.length;e++)f.setItem(e,d[e]);return f}}),o("gT6Ou",function(t,r){e(t.exports,"executeOp",()=>i);var a=s("h8nZK"),n=s("9PnRL");function o(e,t,r){let[a,s]=(0,n.getParamValue)("fusedOps",e,t,r),o="biasadd"===a,i="prelu"===s,l=(0,n.getParamValue)("numArgs",e,t,r);if(o){if(i&&2!==l)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==l)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===a)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=(0,n.getParamValue)("strides",e,t,r),p=(0,n.getPadding)(e,t,r),d=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase(),c=(0,n.getParamValue)("dilations",e,t,r),[h,f]=(0,n.getParamValue)("args",e,t,r);return o||(f=h,h=void 0),{stride:u,pad:p,dataFormat:d,dilations:c,biasArg:h,preluArg:f,activationFunc:s,leakyreluAlpha:(0,n.getParamValue)("leakyreluAlpha",e,t,r)}}let i=(e,t,r,s=a)=>{switch(e.op){case"Conv1D":{let a=(0,n.getParamValue)("stride",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase(),l=(0,n.getParamValue)("dilation",e,t,r);return[s.conv1d((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("filter",e,t,r),a,o,i,l)]}case"Conv2D":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getPadding)(e,t,r),i=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase(),l=(0,n.getParamValue)("dilations",e,t,r);return[s.conv2d((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("filter",e,t,r),[a[1],a[2]],o,i,[l[1],l[2]])]}case"_FusedConv2D":{let{stride:a,pad:i,dataFormat:l,dilations:u,biasArg:p,preluArg:d,activationFunc:c,leakyreluAlpha:h}=o(e,t,r);return[s.fused.conv2d({x:(0,n.getParamValue)("x",e,t,r),filter:(0,n.getParamValue)("filter",e,t,r),strides:[a[1],a[2]],pad:i,dataFormat:l,dilations:[u[1],u[2]],bias:p,activation:c,preluActivationWeights:d,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:i,dataFormat:l,dilations:u,biasArg:p,preluArg:d,activationFunc:c,leakyreluAlpha:h}=o(e,t,r);return[s.fused.depthwiseConv2d({x:(0,n.getParamValue)("x",e,t,r),filter:(0,n.getParamValue)("filter",e,t,r),strides:[a[1],a[2]],pad:i,dataFormat:l,dilations:[u[1],u[2]],bias:p,activation:c,preluActivationWeights:d,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=(0,n.getParamValue)("outputShape",e,t,r),o=(0,n.getParamValue)("strides",e,t,r),i=(0,n.getPadding)(e,t,r);return[s.conv2dTranspose((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("filter",e,t,r),a,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getPadding)(e,t,r),i=(0,n.getParamValue)("dilations",e,t,r),l=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase();return[s.depthwiseConv2d((0,n.getParamValue)("input",e,t,r),(0,n.getParamValue)("filter",e,t,r),[a[1],a[2]],o,l,[i[1],i[2]])]}case"Conv3D":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase(),l=(0,n.getParamValue)("dilations",e,t,r);return[s.conv3d((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("filter",e,t,r),[a[1],a[2],a[3]],o,i,[l[1],l[2],l[3]])]}case"AvgPool":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("kernelSize",e,t,r);return[s.avgPool((0,n.getParamValue)("x",e,t,r),[i[1],i[2]],[a[1],a[2]],o)]}case"MaxPool":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("kernelSize",e,t,r);return[s.maxPool((0,n.getParamValue)("x",e,t,r),[i[1],i[2]],[a[1],a[2]],o)]}case"MaxPoolWithArgmax":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("kernelSize",e,t,r),l=(0,n.getParamValue)("includeBatchInIndex",e,t,r),{result:u,indexes:p}=s.maxPoolWithArgmax((0,n.getParamValue)("x",e,t,r),[i[1],i[2]],[a[1],a[2]],o,l);return[u,p]}case"AvgPool3D":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("kernelSize",e,t,r);return[s.avgPool3d((0,n.getParamValue)("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],o)]}case"MaxPool3D":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("kernelSize",e,t,r);return[s.maxPool3d((0,n.getParamValue)("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],o)]}case"Dilation2D":{let a=(0,n.getParamValue)("strides",e,t,r),o=(0,n.getParamValue)("pad",e,t,r),i=(0,n.getParamValue)("dilations",e,t,r),l=a[1],u=a[2],p=i[1],d=i[2];return[s.dilation2d((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("filter",e,t,r),[l,u],o,[p,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("3TPMs",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Fill":{let a=(0,n.getParamValue)("shape",e,t,r),o=(0,n.getParamValue)("dtype",e,t,r),i=(0,n.getParamValue)("value",e,t,r);return[s.fill(a,i,o)]}case"LinSpace":{let a=(0,n.getParamValue)("start",e,t,r),o=(0,n.getParamValue)("stop",e,t,r),i=(0,n.getParamValue)("num",e,t,r);return[s.linspace(a,o,i)]}case"Multinomial":{let a=(0,n.getParamValue)("logits",e,t,r),o=(0,n.getParamValue)("numSamples",e,t,r),i=(0,n.getParamValue)("seed",e,t,r);return[s.multinomial(a,o,i)]}case"OneHot":{let a=(0,n.getParamValue)("indices",e,t,r),o=(0,n.getParamValue)("depth",e,t,r),i=(0,n.getParamValue)("onValue",e,t,r),l=(0,n.getParamValue)("offValue",e,t,r),u=(0,n.getParamValue)("dtype",e,t,r);return[s.oneHot(a,o,i,l,u)]}case"Ones":return[s.ones((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("dtype",e,t,r))];case"OnesLike":return[s.onesLike((0,n.getParamValue)("x",e,t,r))];case"RandomStandardNormal":return[s.randomStandardNormal((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("dtype",e,t,r),(0,n.getParamValue)("seed",e,t,r))];case"RandomUniform":return[s.randomUniform((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("minval",e,t,r),(0,n.getParamValue)("maxval",e,t,r),(0,n.getParamValue)("dtype",e,t,r))];case"RandomUniformInt":return[s.randomUniformInt((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("minval",e,t,r),(0,n.getParamValue)("maxval",e,t,r),(0,n.getParamValue)("seed",e,t,r))];case"Range":{let a=(0,n.getParamValue)("start",e,t,r),o=(0,n.getParamValue)("stop",e,t,r),i=(0,n.getParamValue)("step",e,t,r);return[s.range(a,o,i,(0,n.getParamValue)("dtype",e,t,r))]}case"TruncatedNormal":{let a=(0,n.getParamValue)("shape",e,t,r),o=(0,n.getParamValue)("mean",e,t,r),i=(0,n.getParamValue)("stdDev",e,t,r),l=(0,n.getParamValue)("seed",e,t,r);return[s.truncatedNormal(a,o,i,(0,n.getParamValue)("dtype",e,t,r),l)]}case"Zeros":return[s.zeros((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("dtype",e,t,r))];case"ZerosLike":return[s.zerosLike((0,n.getParamValue)("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("c0ywX",function(t,r){e(t.exports,"executeOp",()=>i);var a=s("h8nZK"),n=s("9PnRL");function o(e,t,r){let a=(0,n.getParamValue)("boxes",e,t,r),s=(0,n.getParamValue)("scores",e,t,r),o=(0,n.getParamValue)("maxOutputSize",e,t,r),i=(0,n.getParamValue)("iouThreshold",e,t,r);return{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:(0,n.getParamValue)("scoreThreshold",e,t,r),softNmsSigma:(0,n.getParamValue)("softNmsSigma",e,t,r)}}let i=async(e,t,r,s,i=a)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:n,maxOutputSize:s,iouThreshold:l,scoreThreshold:u,softNmsSigma:p}=o(e,t,r),d=await i.image.nonMaxSuppressionWithScoreAsync(a,n,s,l,u,p);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:s,maxOutputSize:l,iouThreshold:u,scoreThreshold:p}=o(e,t,r),d=(0,n.getParamValue)("padToMaxOutputSize",e,t,r),c=await i.image.nonMaxSuppressionPaddedAsync(a,s,l,u,p,d);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:n,maxOutputSize:s,iouThreshold:l,scoreThreshold:u}=o(e,t,r);return[await i.image.nonMaxSuppressionAsync(a,n,s,l,u)]}case"Where":{let a=i.cast((0,n.getParamValue)("condition",e,t,r),"bool"),s=[await i.whereAsync(a)];return a.dispose(),s}case"ListDiff":return i.setdiff1dAsync((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("gPS1H",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"LowerBound":{let a=(0,n.getParamValue)("sortedSequence",e,t,r),o=(0,n.getParamValue)("values",e,t,r);return[s.lowerBound(a,o)]}case"TopKV2":{let a=(0,n.getParamValue)("x",e,t,r),o=(0,n.getParamValue)("k",e,t,r),i=(0,n.getParamValue)("sorted",e,t,r),l=s.topk(a,o,i);return[l.values,l.indices]}case"UpperBound":{let a=(0,n.getParamValue)("sortedSequence",e,t,r),o=(0,n.getParamValue)("values",e,t,r);return[s.upperBound(a,o)]}case"Unique":{let a=(0,n.getParamValue)("x",e,t,r),o=s.unique(a);return[o.values,o.indices]}case"UniqueV2":{let a=(0,n.getParamValue)("x",e,t,r),o=(0,n.getParamValue)("axis",e,t,r),i=s.unique(a,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("ln7DR",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let o=(0,n.getParamValue)("default",e,t,r);return[(0,n.getTensor)(e.name,t,r)||o];case"Placeholder":return[(0,n.getTensor)(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let a=(0,n.getParamValue)("x",e,t,r);return[(0,n.cloneTensor)(a)]}case"IdentityN":return(0,n.getParamValue)("x",e,t,r).map(e=>(0,n.cloneTensor)(e));case"Snapshot":let i=(0,n.getParamValue)("x",e,t,r);return[(0,n.cloneTensor)(i)];case"Shape":return[s.tensor1d((0,n.getParamValue)("x",e,t,r).shape,"int32")];case"ShapeN":return(0,n.getParamValue)("x",e,t,r).map(e=>s.tensor1d(e.shape));case"Size":return[s.scalar((0,n.getParamValue)("x",e,t,r).size,"int32")];case"Rank":return[s.scalar((0,n.getParamValue)("x",e,t,r).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let l=(0,n.getParamValue)("x",e,t,r),u=(0,n.getParamValue)("data",e,t,r),p=(0,n.getParamValue)("message",e,t,r),d=(0,n.getParamValue)("summarize",e,t,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(p);for(let e=0;e<u.length;e++)console.log(Array.prototype.slice.call(u[e].dataSync()).slice(0,d));return[l];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("c6NzH",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("8pINL"),n=s("9PnRL");let o=async(e,t,r,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let o=s.getHashTableHandleByName(e.name);if(null!=o)return[o];{let o=(0,n.getParamValue)("keyDType",e,t,r),i=(0,n.getParamValue)("valueDType",e,t,r),l=new(0,a.HashTable)(o,i);return s.addHashTable(e.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=(0,n.getParamValue)("tableHandle",e,t,r,s),o=(0,n.getParamValue)("keys",e,t,r),i=(0,n.getParamValue)("values",e,t,r),l=s.getHashTableById(a.id);return[await l.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=(0,n.getParamValue)("tableHandle",e,t,r,s),o=(0,n.getParamValue)("keys",e,t,r),i=(0,n.getParamValue)("defaultValue",e,t,r),l=s.getHashTableById(a.id);return[await l.find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=(0,n.getParamValue)("tableHandle",e,t,r,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("8pINL",function(t,r){e(t.exports,"HashTable",()=>u),s("i64bB");var a=s("c2DT1"),n=s("3xp7o"),o=s("8BrLX"),i=s("gBOC6"),l=s("jjNRA"),n=s("3xp7o");class u{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,n.scalar)(0),this.tensorMap=new Map,(0,a.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return n.scalar(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),(0,a.tidy)(()=>{let e=(0,i.unstack)(t),n=r.length,s=e.length;l.assert(n===s,()=>`The number of elements doesn't match, keys has ${n} elements, the values has ${s} elements.`);for(let t=0;t<n;t++){let n=r[t],s=e[t];(0,a.keep)(s),this.tensorMap.set(n,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return(0,a.tidy)(()=>{let e=[];for(let a=0;a<r.length;a++){let n=r[a],s=this.findWithDefault(n,t);e.push(s)}return(0,o.stack)(e)})}findWithDefault(e,t){let r=this.tensorMap.get(e);return null!=r?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}}),o("dQiCM",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"ResizeBilinear":{let a=(0,n.getParamValue)("images",e,t,r),o=(0,n.getParamValue)("size",e,t,r),i=(0,n.getParamValue)("alignCorners",e,t,r),l=(0,n.getParamValue)("halfPixelCenters",e,t,r);return[s.image.resizeBilinear(a,[o[0],o[1]],i,l)]}case"ResizeNearestNeighbor":{let a=(0,n.getParamValue)("images",e,t,r),o=(0,n.getParamValue)("size",e,t,r),i=(0,n.getParamValue)("alignCorners",e,t,r),l=(0,n.getParamValue)("halfPixelCenters",e,t,r);return[s.image.resizeNearestNeighbor(a,[o[0],o[1]],i,l)]}case"CropAndResize":{let a=(0,n.getParamValue)("image",e,t,r),o=(0,n.getParamValue)("boxes",e,t,r),i=(0,n.getParamValue)("boxInd",e,t,r),l=(0,n.getParamValue)("cropSize",e,t,r),u=(0,n.getParamValue)("method",e,t,r),p=(0,n.getParamValue)("extrapolationValue",e,t,r);return[s.image.cropAndResize(a,o,i,l,u,p)]}case"ImageProjectiveTransformV3":{let a=(0,n.getParamValue)("images",e,t,r),o=(0,n.getParamValue)("transforms",e,t,r),i=(0,n.getParamValue)("outputShape",e,t,r),l=(0,n.getParamValue)("fillValue",e,t,r),u=(0,n.getParamValue)("interpolation",e,t,r),p=(0,n.getParamValue)("fillMode",e,t,r);return[s.image.transform(a,o,u.toLowerCase(),p.toLowerCase(),l,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("h1Kl3",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Equal":return[s.equal((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"NotEqual":return[s.notEqual((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Greater":return[s.greater((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"GreaterEqual":return[s.greaterEqual((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Less":return[s.less((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"LessEqual":return[s.lessEqual((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"LogicalAnd":return[s.logicalAnd((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"LogicalNot":return[s.logicalNot((0,n.getParamValue)("a",e,t,r))];case"LogicalOr":return[s.logicalOr((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"Select":case"SelectV2":return[s.where((0,n.getParamValue)("condition",e,t,r),(0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];case"BitwiseAnd":return[s.bitwiseAnd((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("7TMBo",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("b",e,t,r),(0,n.getParamValue)("transposeA",e,t,r),(0,n.getParamValue)("transposeB",e,t,r))];case"Einsum":return[s.einsum((0,n.getParamValue)("equation",e,t,r),...(0,n.getParamValue)("tensors",e,t,r))];case"Transpose":return[s.transpose((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("perm",e,t,r))];case"_FusedMatMul":let[o,i]=(0,n.getParamValue)("fusedOps",e,t,r),l="prelu"===i,u=(0,n.getParamValue)("numArgs",e,t,r),p=(0,n.getParamValue)("leakyreluAlpha",e,t,r);if("biasadd"===o){if(l&&2!==u)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&1!==u)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,c]=(0,n.getParamValue)("args",e,t,r);return[s.fused.matMul({a:(0,n.getParamValue)("a",e,t,r),b:(0,n.getParamValue)("b",e,t,r),transposeA:(0,n.getParamValue)("transposeA",e,t,r),transposeB:(0,n.getParamValue)("transposeB",e,t,r),bias:d,activation:i,preluActivationWeights:c,leakyreluAlpha:p})];case"MatrixBandPart":return[s.linalg.bandPart((0,n.getParamValue)("a",e,t,r),(0,n.getParamValue)("numLower",e,t,r),(0,n.getParamValue)("numUpper",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("9lSzv",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("axis",e,t,r),(0,n.getParamValue)("keepDims",e,t,r))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("mean",e,t,r),(0,n.getParamValue)("variance",e,t,r),(0,n.getParamValue)("offset",e,t,r),(0,n.getParamValue)("scale",e,t,r),(0,n.getParamValue)("epsilon",e,t,r))];case"LRN":return[s.localResponseNormalization((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("radius",e,t,r),(0,n.getParamValue)("bias",e,t,r),(0,n.getParamValue)("alpha",e,t,r),(0,n.getParamValue)("beta",e,t,r))];case"Softmax":return[s.softmax((0,n.getParamValue)("x",e,t,r))];case"LogSoftmax":return[s.logSoftmax((0,n.getParamValue)("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("bPan9",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:o}=s.raggedGather((0,n.getParamValue)("paramsNestedSplits",e,t,r),(0,n.getParamValue)("paramsDenseValues",e,t,r),(0,n.getParamValue)("indices",e,t,r),(0,n.getParamValue)("outputRaggedRank",e,t,r));return a.concat(o)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:o}=s.raggedRange((0,n.getParamValue)("starts",e,t,r),(0,n.getParamValue)("limits",e,t,r),(0,n.getParamValue)("splits",e,t,r));return[a,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor((0,n.getParamValue)("shape",e,t,r),(0,n.getParamValue)("values",e,t,r),(0,n.getParamValue)("defaultValue",e,t,r),(0,n.getParamValue)("rowPartitionTensors",e,t,r),(0,n.getParamValue)("rowPartitionTypes",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("bHY7p",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Max":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.max((0,n.getParamValue)("x",e,t,r),a,o)]}case"Mean":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.mean((0,n.getParamValue)("x",e,t,r),a,o)]}case"Min":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.min((0,n.getParamValue)("x",e,t,r),a,o)]}case"Sum":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.sum((0,n.getParamValue)("x",e,t,r),a,o)]}case"All":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.all((0,n.getParamValue)("x",e,t,r),a,o)]}case"Any":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.any((0,n.getParamValue)("x",e,t,r),a,o)]}case"ArgMax":{let a=(0,n.getParamValue)("axis",e,t,r);return[s.argMax((0,n.getParamValue)("x",e,t,r),a)]}case"ArgMin":{let a=(0,n.getParamValue)("axis",e,t,r);return[s.argMin((0,n.getParamValue)("x",e,t,r),a)]}case"Prod":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("keepDims",e,t,r);return[s.prod((0,n.getParamValue)("x",e,t,r),a,o)]}case"Cumprod":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("exclusive",e,t,r),i=(0,n.getParamValue)("reverse",e,t,r);return[s.cumprod((0,n.getParamValue)("x",e,t,r),a,o,i)]}case"Cumsum":{let a=(0,n.getParamValue)("axis",e,t,r),o=(0,n.getParamValue)("exclusive",e,t,r),i=(0,n.getParamValue)("reverse",e,t,r);return[s.cumsum((0,n.getParamValue)("x",e,t,r),a,o,i)]}case"Bincount":let o=(0,n.getParamValue)("x",e,t,r),i=(0,n.getParamValue)("weights",e,t,r),l=(0,n.getParamValue)("size",e,t,r);return[s.bincount(o,i,l)];case"DenseBincount":{let a=(0,n.getParamValue)("x",e,t,r),o=(0,n.getParamValue)("weights",e,t,r),i=(0,n.getParamValue)("size",e,t,r),l=(0,n.getParamValue)("binaryOutput",e,t,r);return[s.denseBincount(a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("9Buta",function(t,r){e(t.exports,"executeOp",()=>l),s("i64bB");var a=s("c2DT1"),n=s("jjNRA"),o=s("h8nZK"),i=s("9PnRL");let l=(e,t,r,s=o)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=(0,i.getParamValue)("n",e,t,r),n=(0,i.getParamValue)("axis",e,t,r),o=(0,i.getParamValue)("tensors",e,t,r);return o=o.slice(0,a),[s.concat(o,n)]}case"Gather":{let a=(0,i.getParamValue)("x",e,t,r),n=(0,i.getParamValue)("indices",e,t,r);return[s.gather(a,s.cast(n,"int32"),0)]}case"GatherV2":{let a=(0,i.getParamValue)("axis",e,t,r),n=(0,i.getParamValue)("batchDims",e,t,r),o=(0,i.getParamValue)("x",e,t,r),l=(0,i.getParamValue)("indices",e,t,r);return[s.gather(o,s.cast(l,"int32"),a,n)]}case"Reverse":{let a=(0,i.getParamValue)("dims",e,t,r),n=[];for(let e=0;e<a.length;e++)a[e]&&n.push(e);let o=(0,i.getParamValue)("x",e,t,r);return[s.reverse(o,n)]}case"ReverseV2":{let a=(0,i.getParamValue)("axis",e,t,r),n=(0,i.getParamValue)("x",e,t,r);return[s.reverse(n,a)]}case"Slice":{let a=(0,i.getParamValue)("begin",e,t,r),n=(0,i.getParamValue)("size",e,t,r);return[s.slice((0,i.getParamValue)("x",e,t,r),a,n)]}case"StridedSlice":{let a=(0,i.getParamValue)("begin",e,t,r),n=(0,i.getParamValue)("end",e,t,r),o=(0,i.getParamValue)("strides",e,t,r),l=(0,i.getParamValue)("beginMask",e,t,r),u=(0,i.getParamValue)("endMask",e,t,r),p=(0,i.getParamValue)("ellipsisMask",e,t,r),d=(0,i.getParamValue)("newAxisMask",e,t,r),c=(0,i.getParamValue)("shrinkAxisMask",e,t,r),h=(0,i.getParamValue)("x",e,t,r);return[s.stridedSlice(h,a,n,o,l,u,p,d,c)]}case"Pack":return(0,a.tidy)(()=>{let a=(0,i.getParamValue)("axis",e,t,r),o=(0,i.getParamValue)("tensors",e,t,r),l=o[0].shape,u=s.squeeze(o[0]).shape,p=o.map(e=>{let t=n.arraysEqual(e.shape,l);if(!t&&!n.arraysEqual(s.squeeze(e).shape,u))throw Error("the input tensors shape does not match");return t?e:s.reshape(e,l)});return[s.stack(p,a)]});case"Unpack":{let a=(0,i.getParamValue)("axis",e,t,r),n=(0,i.getParamValue)("tensor",e,t,r);return s.unstack(n,a)}case"Tile":{let a=(0,i.getParamValue)("reps",e,t,r);return[s.tile((0,i.getParamValue)("x",e,t,r),a)]}case"Split":case"SplitV":{let a=(0,i.getParamValue)("axis",e,t,r),n=(0,i.getParamValue)("numOrSizeSplits",e,t,r),o=(0,i.getParamValue)("x",e,t,r);return s.split(o,n,a)}case"ScatterNd":{let a=(0,i.getParamValue)("indices",e,t,r),n=(0,i.getParamValue)("values",e,t,r),o=(0,i.getParamValue)("shape",e,t,r);return[s.scatterND(a,n,o)]}case"GatherNd":{let a=(0,i.getParamValue)("x",e,t,r),n=(0,i.getParamValue)("indices",e,t,r);return[s.gatherND(a,n)]}case"SparseToDense":{let a=(0,i.getParamValue)("sparseIndices",e,t,r),n=(0,i.getParamValue)("outputShape",e,t,r),o=(0,i.getParamValue)("sparseValues",e,t,r),l=(0,i.getParamValue)("defaultValue",e,t,r);return[s.sparseToDense(a,o,n,o.dtype===l.dtype?l:s.cast(l,o.dtype))]}case"TensorScatterUpdate":{let a=(0,i.getParamValue)("indices",e,t,r),n=(0,i.getParamValue)("values",e,t,r),o=(0,i.getParamValue)("tensor",e,t,r);return[s.tensorScatterUpdate(o,a,n)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("3pwdq",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:o,emptyRowIndicator:i,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows((0,n.getParamValue)("indices",e,t,r),(0,n.getParamValue)("values",e,t,r),(0,n.getParamValue)("denseShape",e,t,r),(0,n.getParamValue)("defaultValue",e,t,r));return[a,o,i,l]}case"SparseReshape":{let{outputIndices:a,outputShape:o}=s.sparse.sparseReshape((0,n.getParamValue)("inputIndices",e,t,r),(0,n.getParamValue)("inputShape",e,t,r),(0,n.getParamValue)("newShape",e,t,r));return[a,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean((0,n.getParamValue)("data",e,t,r),(0,n.getParamValue)("indices",e,t,r),(0,n.getParamValue)("segmentIds",e,t,r))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum((0,n.getParamValue)("data",e,t,r),(0,n.getParamValue)("indices",e,t,r),(0,n.getParamValue)("segmentIds",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("7RSIj",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"FFT":return[s.fft((0,n.getParamValue)("x",e,t,r))];case"IFFT":return[s.ifft((0,n.getParamValue)("x",e,t,r))];case"RFFT":return[s.rfft((0,n.getParamValue)("x",e,t,r))];case"IRFFT":return[s.irfft((0,n.getParamValue)("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("j4Rla",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"StaticRegexReplace":return[s.string.staticRegexReplace((0,n.getParamValue)("input",e,t,r),(0,n.getParamValue)("pattern",e,t,r),(0,n.getParamValue)("rewrite",e,t,r),(0,n.getParamValue)("replaceGlobal",e,t,r))];case"StringNGrams":{let{nGrams:a,nGramsSplits:o}=s.string.stringNGrams((0,n.getParamValue)("data",e,t,r),(0,n.getParamValue)("dataSplits",e,t,r),(0,n.getParamValue)("separator",e,t,r),(0,n.getParamValue)("nGramWidths",e,t,r),(0,n.getParamValue)("leftPad",e,t,r),(0,n.getParamValue)("rightPad",e,t,r),(0,n.getParamValue)("padWidth",e,t,r),(0,n.getParamValue)("preserveShortSequences",e,t,r));return[a,o]}case"StringSplit":{let{indices:a,values:o,shape:i}=s.string.stringSplit((0,n.getParamValue)("input",e,t,r),(0,n.getParamValue)("delimiter",e,t,r),(0,n.getParamValue)("skipEmpty",e,t,r));return[a,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast((0,n.getParamValue)("input",e,t,r),(0,n.getParamValue)("numBuckets",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("cXzgX",function(t,r){e(t.exports,"executeOp",()=>o);var a=s("h8nZK"),n=s("9PnRL");let o=(e,t,r,s=a)=>{switch(e.op){case"Cast":return[s.cast((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("dtype",e,t,r))];case"ExpandDims":{let a=(0,n.getParamValue)("axis",e,t,r);return[s.expandDims((0,n.getParamValue)("x",e,t,r),a)]}case"Squeeze":{let a=(0,n.getParamValue)("axis",e,t,r);return[s.squeeze((0,n.getParamValue)("x",e,t,r),a)]}case"Reshape":return[s.reshape((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("shape",e,t,r))];case"EnsureShape":return[s.ensureShape((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("shape",e,t,r))];case"MirrorPad":return[s.mirrorPad((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("padding",e,t,r),(0,n.getParamValue)("mode",e,t,r))];case"PadV2":case"Pad":return[s.pad((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("padding",e,t,r),(0,n.getParamValue)("constantValue",e,t,r))];case"SpaceToBatchND":{let a=(0,n.getParamValue)("blockShape",e,t,r),o=(0,n.getParamValue)("paddings",e,t,r);return[s.spaceToBatchND((0,n.getParamValue)("x",e,t,r),a,o)]}case"BatchToSpaceND":{let a=(0,n.getParamValue)("blockShape",e,t,r),o=(0,n.getParamValue)("crops",e,t,r);return[s.batchToSpaceND((0,n.getParamValue)("x",e,t,r),a,o)]}case"DepthToSpace":{let a=(0,n.getParamValue)("blockSize",e,t,r),o=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase();return[s.depthToSpace((0,n.getParamValue)("x",e,t,r),a,o)]}case"BroadcastTo":return[s.broadcastTo((0,n.getParamValue)("x",e,t,r),(0,n.getParamValue)("shape",e,t,r))];case"BroadcastArgs":return[s.broadcastArgs((0,n.getParamValue)("s0",e,t,r),(0,n.getParamValue)("s1",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),o("hv42p",function(t,r){e(t.exports,"ExecutionContext",()=>a);class a{constructor(e={},t={},r={},a={},n){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=a,this.parseNodeNameCache=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}}),o("a96bd",function(t,r){e(t.exports,"getExecutionSubgraph",()=>n),e(t.exports,"isControlFlow",()=>c),e(t.exports,"getNodesInTopologicalOrder",()=>o),e(t.exports,"getNodeLiveUntilMap",()=>l);var a=s("9PnRL");function n(e,t,r,n){let s=new Set,o=[],i=null,l=null,u=new Set,h=new Set(Object.keys(e).map(e=>(0,a.parseNodeName)(e)[0])),f=new Set((n=n||[]).map(e=>(0,a.parseNodeName)(e.name)[0])),m=[...t];for(;m.length>0;){var g,x;let e=m.pop();if((c(e)||(g=e,p.has(g.op))||(x=e,d.has(x.op)))&&null==i&&(l=(i=e).children.map(e=>e.name).filter(e=>s.has(e))),s.add(e.name),!(null!=r[e.name]||h.has(e.name)||f.has(e.name))){if(0===e.inputs.length){o.push(e.name);continue}e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),m.push(e))})}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:o,dynamicNode:i,syncInputs:l}}function o(e,t){let{usedNodes:r,inputs:n}=t,s=Object.keys(n).map(e=>(0,a.parseNodeName)(e)[0]).map(t=>e.nodes[t]),o=e.initNodes||[],l=e=>r.has("string"==typeof e?e:e.name);function u(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let p=u([...s,...e.weights,...o]).filter(l),d=u([...p,...Object.values(e.nodes)]).filter(l),c=new Map(d.map(e=>[e.name,e])),h={};for(let e of d)for(let t of(h[e.name]=h[e.name]||0,e.children))l(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1;let f=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),m=[...f];for(;f.length>0;){let e=f.pop();for(let t of c.get(e).children.filter(l))0==--h[t.name]&&(m.push(t.name),f.push(t.name))}let g=function(e,t){let r=new Map(e.map(e=>[e.name,e])),a=t.map(e=>e.name),n=new Set(a);for(;a.length>0;){let e=a.pop();for(let t of r.get(e).children)!r.has(t.name)||n.has(t.name)||(n.add(t.name),a.push(t.name))}return e.filter(e=>n.has(e.name))}(m.map(e=>c.get(e)),p);return function(e,t){let r=new Map(e.map((e,t)=>[e.name,t])),a=new Set(t.map(e=>e.name)),n=e=>a.has("string"==typeof e?e:e.name),s=new Set(e.map(e=>e.name)),o=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(o)){if(!r.has(e.name))throw new i(`Child ${e.name} of node ${t.name} is unreachable.`);if(r.get(t.name)>r.get(e.name))throw new i(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!n(t))for(let e of t.inputs){if(!r.has(e.name))throw new i(`Input ${e.name} of node ${t.name} is unreachable.`);if(r.get(e.name)>r.get(t.name))throw new i(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(g,p),g}class i extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function l(e){let t=new Map(e.map((e,t)=>[e.name,t])),r=Number.MAX_SAFE_INTEGER,a=e.map((e,t)=>c(e)?r:t),n=e=>{let r=a[t.get(e.name)];return null==r?-1:r},s=e.map((e,t)=>e.children.map(n).reduce((e,t)=>Math.max(e,t),a[t])),o=new Map;for(let t=0;t<e.length;++t){let a=s[t];if(a===r)continue;let n=e[t],i=e[a];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(n)}return o}let u=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),p=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),d=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function c(e){return u.has(e.op)}}),o("kqYp1",function(t,r){e(t.exports,"ResourceManager",()=>a);class a{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}),o("1SddR",function(t,r){e(t.exports,"version",()=>a);let a="4.22.0"}),o("iUyUN",function(t,r){e(t.exports,"version_cpu",()=>s("dYVeb").version),s("9MyG0"),s("hZtjU")}),o("9MyG0",function(t,r){e(t.exports,"version_cpu",()=>s("dYVeb").version),s("i64bB");var a=s("c2DT1"),n=s("d3XSa");s("dYVeb"),(0,a.registerBackend)("cpu",()=>new(0,n.MathBackendCPU),1)}),o("d3XSa",function(t,r){e(t.exports,"MathBackendCPU",()=>h),s("i64bB");var a=s("7MaPk"),n=s("iG87S"),o=s("fJqML"),i=s("c2DT1"),l=s("ibsdL"),u=s("lzjc8"),p=s("jjNRA"),d=s("csahy");let c=u.whereImpl;class h extends o.KernelBackend{nextDataId(){return h.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new(0,o.DataStorage)(this,(0,i.engine)())}write(e,t,r){this.firstUse&&(this.firstUse=!1,(0,l.env)().get("IS_NODE")&&a.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:r,refCount:1}),n}makeTensorInfo(e,t,r){let a;if("string"===t&&null!=r&&r.length>0&&p.isString(r[0])){let n=r.map(e=>p.encodeString(e));a=this.write(n,e,t)}else a=this.write(r,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,r,a,n){this.data.set(e,{values:t,dtype:a,refCount:n})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:r}=this.data.get(e);if("complex64"===t){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);return a.mergeRealAndImagArrays(e,t)}return p.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let r=t.map(e=>p.decodeString(e));return(0,n.buffer)(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return(0,n.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,r){return(0,i.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=p.now();return e(),{kernelMs:p.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,d.assertNotComplex)([e],"where");let t=this.readSync(e.dataId);return c(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}h.nextDataId=0}),o("csahy",function(t,r){e(t.exports,"assertNotComplex",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&a.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}}),o("dYVeb",function(t,r){e(t.exports,"version",()=>a);let a="4.22.0"}),o("hZtjU",function(e,t){s("i64bB");var r=s("eky5o"),a=s("fdLmv"),n=s("ep8sG"),o=s("bUh4z"),i=s("3P3VJ"),l=s("e8yCG"),u=s("fsVd1"),p=s("8SJ1h"),d=s("le0H6"),c=s("87U55"),h=s("lipiZ"),f=s("j8K9f"),m=s("fEiH8"),g=s("fdU79"),x=s("90zJE"),y=s("6BamV"),b=s("3xO3I"),v=s("tsPaI"),k=s("4X50Y"),N=s("5UuKm"),C=s("2G81o"),T=s("gngeB"),S=s("lWuZH"),I=s("efeXu"),w=s("eYl2h"),E=s("aSawK"),A=s("7LLjQ"),R=s("bs8Xr"),P=s("gZ5VL"),$=s("bwMVz"),F=s("bF2Ar"),B=s("4kUws"),D=s("4qhwE"),M=s("iN1IP"),O=s("9NzND"),L=s("fAnsw"),_=s("fo9Ix"),V=s("6iRxY"),G=s("46RLW"),z=s("fgHAz"),W=s("7CMH3"),U=s("3Jn3O"),j=s("gC4Aw"),q=s("eWvjj"),H=s("dmhp5"),K=s("990T6"),X=s("aIZM5"),Y=s("dFziG"),Z=s("7KOW5"),Q=s("hIoyp"),J=s("jxHwQ"),ee=s("2Y9GH"),et=s("dFawg"),er=s("a65ub"),ea=s("6vY81"),en=s("1UNyW"),es=s("diO4l"),eo=s("kqQPZ"),ei=s("2ANRn"),el=s("YMdKk"),eu=s("jqUkN"),ep=s("ahJ6Y"),ed=s("gj86F"),ec=s("lCuWf"),eh=s("Jvx9v"),ef=s("hj1kT"),em=s("fGr9Q"),eg=s("eykWF"),ex=s("dLMis"),ey=s("aTb92"),eb=s("2Apjw"),ev=s("9yHtq"),ek=s("lcqBv"),eN=s("568uH"),eC=s("32coj"),eT=s("1u1a9"),eS=s("gvn2E"),eI=s("g4tDm"),ew=s("b5sX3"),eE=s("jJNGT"),eA=s("bwE16"),eR=s("1yK9J"),eP=s("2La7K"),e$=s("ks7nX"),eF=s("sLbSL"),eB=s("g3KIg"),eD=s("6ZAdn"),eM=s("8drS8"),eO=s("34zOX"),eL=s("7BXZf"),e_=s("IzL7H"),eV=s("jrpMF"),eG=s("hnBgh"),ez=s("05cCa"),eW=s("4yBeA"),eU=s("55iAE"),ej=s("f9iEq"),eq=s("8hCwj"),eH=s("g7Z3x"),eK=s("75PTj"),eX=s("5to2D"),eY=s("cjHWd"),eZ=s("gQOIy"),eQ=s("9NYY4"),eJ=s("l27kK"),e0=s("eiKqq"),e1=s("39phV"),e2=s("QHoEG"),e4=s("5V8Hm"),e3=s("5aWhS"),e8=s("hZ1GH"),e6=s("1H7BH"),e5=s("jwAmH"),e7=s("aeFPC"),e9=s("86TES"),te=s("69RVO"),tt=s("9EaUw"),tr=s("d7C5Q"),ta=s("3iDlg"),tn=s("linqd"),ts=s("lI2hV"),to=s("d3vHZ"),ti=s("aW9ro"),tl=s("7N7Xk"),tu=s("eL8rV"),tp=s("9HK0T"),td=s("ko47e"),tc=s("bCxBQ"),th=s("8YR9V"),tf=s("kt18Z"),tm=s("5iKFL"),tg=s("a450S"),tx=s("GbeHD"),ty=s("iO2qM"),tb=s("5YeYY"),tv=s("fzLyD"),tk=s("3CwP0"),tN=s("dMdBj"),tC=s("9Uo4Q"),tT=s("dykp3"),tS=s("2qsDL"),tI=s("aYBRE"),tw=s("j6gGc"),tE=s("kVxvF"),tA=s("5e92z"),tR=s("gG4dT"),tP=s("6cc8p"),t$=s("eaQoz"),tF=s("l3Q8t"),tB=s("1JBmQ"),tD=s("cEVcR"),tM=s("2a43t"),tO=s("7LX70"),tL=s("4QLZo"),t_=s("hRUGg"),tV=s("lGGZt"),tG=s("eCAEs"),tz=s("aw1fr"),tW=s("8x6qM"),tU=s("dmWAX"),tj=s("aT9VE"),tq=s("b9JjM"),tH=s("4A00l"),tK=s("3lmtf"),tX=s("eSPme"),tY=s("1P81J"),tZ=s("6dCHk"),tQ=s("kzm41"),tJ=s("EOTYn"),t0=s("cbKbK"),t1=s("eXWuw"),t2=s("5S731"),t4=s("hZ8WQ");for(let e of[a._fusedMatMulConfig,n.absConfig,o.acosConfig,i.acoshConfig,l.addConfig,u.addNConfig,p.allConfig,d.anyConfig,c.argMaxConfig,h.argMinConfig,f.asinConfig,m.asinhConfig,g.atanConfig,x.atan2Config,y.atanhConfig,b.avgPoolConfig,v.avgPool3DConfig,k.avgPool3DGradConfig,N.avgPoolGradConfig,C.batchMatMulConfig,T.batchNormConfig,S.batchToSpaceNDConfig,I.bincountConfig,w.bitwiseAndConfig,E.broadcastArgsConfig,A.castConfig,R.ceilConfig,P.clipByValueConfig,$.complexConfig,F.complexAbsConfig,B.concatConfig,D.conv2DConfig,M.conv2DBackpropFilterConfig,O.conv2DBackpropInputConfig,L.conv3DConfig,_.conv3DBackpropFilterV2Config,V.conv3DBackpropInputV2Config,G.cosConfig,z.coshConfig,W.cropAndResizeConfig,U.cumprodConfig,j.cumsumConfig,q.denseBincountConfig,H.depthToSpaceConfig,K.depthwiseConv2dNativeConfig,X.depthwiseConv2dNativeBackpropFilterConfig,Y.depthwiseConv2dNativeBackpropInputConfig,Z.diagConfig,Q.dilation2DConfig,J.dilation2DBackpropFilterConfig,ee.dilation2DBackpropInputConfig,et.drawConfig,er.einsumConfig,ea.eluConfig,en.eluGradConfig,es.equalConfig,eo.erfConfig,ei.expConfig,el.expandDimsConfig,eu.expm1Config,ep.fftConfig,ed.fillConfig,ec.flipLeftRightConfig,eh.floorConfig,ef.floorDivConfig,em.fusedConv2DConfig,eg.fusedDepthwiseConv2DConfig,ex.gatherNdConfig,ey.gatherV2Config,eb.greaterConfig,ev.greaterEqualConfig,ek.identityConfig,eN.ifftConfig,eC.imagConfig,eT.isFiniteConfig,eS.isInfConfig,eI.isNaNConfig,ew.leakyReluConfig,eE.lessConfig,eA.lessEqualConfig,eR.linSpaceConfig,eP.logConfig,e$.log1pConfig,eF.logicalAndConfig,eB.logicalNotConfig,eD.logicalOrConfig,eM.LRNConfig,eO.LRNGradConfig,eL.maxConfig,e_.maximumConfig,eV.maxPoolConfig,eG.maxPool3DConfig,ez.maxPool3DGradConfig,eW.maxPoolGradConfig,eU.maxPoolWithArgmaxConfig,ej.meanConfig,eq.minConfig,eH.minimumConfig,eK.mirrorPadConfig,eX.modConfig,eY.multinomialConfig,eZ.multiplyConfig,eQ.negConfig,eJ.nonMaxSuppressionV3Config,e0.nonMaxSuppressionV4Config,e1.nonMaxSuppressionV5Config,e2.notEqualConfig,e4.oneHotConfig,e3.onesLikeConfig,e8.packConfig,e6.padV2Config,e5.powConfig,e7.preluConfig,e9.prodConfig,te.raggedGatherConfig,tt.raggedRangeConfig,tr.raggedTensorToTensorConfig,ta.rangeConfig,tn.realConfig,ts.realDivConfig,to.reciprocalConfig,ti.reluConfig,tl.relu6Config,tu.reshapeConfig,tp.resizeBilinearConfig,td.resizeBilinearGradConfig,tc.resizeNearestNeighborConfig,th.resizeNearestNeighborGradConfig,tf.reverseConfig,tm.rotateWithOffsetConfig,tg.roundConfig,tx.rsqrtConfig,ty.scatterNdConfig,tb.searchSortedConfig,tv.selectConfig,tk.seluConfig,tN.sigmoidConfig,tC.signConfig,tT.sinConfig,tS.sinhConfig,tI.sliceConfig,tw.softmaxConfig,tE.softplusConfig,tA.spaceToBatchNDConfig,tR.sparseFillEmptyRowsConfig,tP.sparseReshapeConfig,t$.sparseSegmentMeanConfig,tF.sparseSegmentSumConfig,tB.sparseToDenseConfig,tD.splitVConfig,tM.sqrtConfig,tO.squareConfig,tL.squaredDifferenceConfig,t_.staticRegexReplaceConfig,tV.stepConfig,tG.stridedSliceConfig,tz.stringNGramsConfig,tW.stringSplitConfig,tU.stringToHashBucketFastConfig,tj.subConfig,tq.sumConfig,tH.tanConfig,tK.tanhConfig,tX.tensorScatterUpdateConfig,tY.tileConfig,tZ.topKConfig,tQ.transformConfig,tJ.transposeConfig,t0.uniqueConfig,t1.unpackConfig,t2.unsortedSegmentSumConfig,t4.zerosLikeConfig])(0,r.registerKernel)(e)}),o("fdLmv",function(t,r){e(t.exports,"_fusedMatMulConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3XZpz"),o=s("e8yCG"),i=s("2G81o");let l={kernelName:a._FusedMatMul,backendName:"cpu",kernelFunc:function(e){let t,r,a,{inputs:s,backend:l,attrs:u}=e,{a:p,b:d,bias:c,preluActivationWeights:h}=s,{transposeA:f,transposeB:m,activation:g,leakyreluAlpha:x}=u,y=[];for(let e of(t=(0,i.batchMatMul)({inputs:{a:p,b:d},attrs:{transposeA:f,transposeB:m},backend:l}),c&&(r=(0,o.add)({inputs:{a:t,b:c},backend:l}),y.push(t),t=r),g&&(a=(0,n.applyActivation)(l,t,g,h,x),y.push(t),t=a),y))l.disposeIntermediateTensorInfo(e);return t}}}),o("3XZpz",function(t,r){e(t.exports,"applyActivation",()=>d);var a=s("6vY81"),n=s("lcqBv"),o=s("b5sX3"),i=s("aeFPC"),l=s("aW9ro"),u=s("7N7Xk"),p=s("dMdBj");function d(e,t,r,s,d){if("linear"===r)return(0,n.identity)({inputs:{x:t},backend:e});if("relu"===r)return(0,l.relu)({inputs:{x:t},backend:e});if("elu"===r)return(0,a.elu)({inputs:{x:t},backend:e});if("relu6"===r)return(0,u.relu6)({inputs:{x:t},backend:e});if("prelu"===r)return(0,i.prelu)({inputs:{x:t,alpha:s},backend:e});else if("leakyrelu"===r)return(0,o.leakyRelu)({inputs:{x:t},backend:e,attrs:{alpha:d}});else if("sigmoid"===r)return(0,p.sigmoid)({inputs:{x:t},backend:e});throw Error(`Activation ${r} has not been implemented for the CPU backend.`)}}),o("6vY81",function(t,r){e(t.exports,"elu",()=>n),e(t.exports,"eluConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Elu,e=>e>=0?e:Math.exp(e)-1),o={kernelName:a.Elu,backendName:"cpu",kernelFunc:n}}),o("l6afd",function(t,r){e(t.exports,"unaryKernelFunc",()=>i),e(t.exports,"unaryKernelFuncFromImpl",()=>l),s("i64bB");var a=s("7MaPk"),n=s("csahy"),o=s("19W3p");function i(e,t,r){return l(e,(0,o.createSimpleUnaryImpl)(t),r)}function l(e,t,r){return({inputs:s,attrs:o,backend:i})=>{let l,{x:u}=s;(0,n.assertNotComplex)(u,e);let p=i.data.get(u.dataId).values;if("string"===u.dtype){if(!Array.isArray(p))throw Error("String tensor's value was not an instance of Array");l=a.fromUint8ToStringArray(p)}else l=p;let d=r||u.dtype,c=t(l,d,o);return i.makeTensorInfo(u.shape,d,c)}}}),o("19W3p",function(t,r){e(t.exports,"createSimpleUnaryImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e){return(t,r,n)=>{let s=a.getArrayFromDType(r,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],n);return s}}}),o("lcqBv",function(t,r){function a(e){let{inputs:t,backend:r}=e,{x:a}=t;return r.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}e(t.exports,"identity",()=>a),e(t.exports,"identityConfig",()=>n),s("i64bB");let n={kernelName:s("hl418").Identity,backendName:"cpu",kernelFunc:a}}),o("b5sX3",function(t,r){e(t.exports,"leakyRelu",()=>i),e(t.exports,"leakyReluConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");function i(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{alpha:i}=a;(0,o.assertNotComplex)([s],"leakyRelu");let l=n.sizeFromShape(s.shape),u=r.data.get(s.dataId).values,p=n.getTypedArrayFromDType("float32",l);for(let e=0;e<u.length;e++)p[e]=u[e]<0?i*u[e]:u[e];return r.makeTensorInfo(s.shape,"float32",p)}let l={kernelName:a.LeakyRelu,backendName:"cpu",kernelFunc:i}}),o("aeFPC",function(t,r){e(t.exports,"prelu",()=>i),e(t.exports,"preluConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("csahy");let o=(0,s("jQJ39").createSimpleBinaryKernelImpl)((e,t)=>e<0?t*e:e);function i(e){let{inputs:t,backend:r}=e,{x:a,alpha:s}=t;(0,n.assertNotComplex)([a,s],"prelu");let i=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,p]=o(a.shape,s.shape,i,l,"float32");return r.makeTensorInfo(p,"float32",u)}let l={kernelName:a.Prelu,backendName:"cpu",kernelFunc:i}}),o("jQJ39",function(t,r){e(t.exports,"createSimpleBinaryKernelImpl",()=>o),s("i64bB");var a=s("7MaPk"),n=s("jjNRA");function o(e){return(t,r,s,o,i)=>{let l=a.assertAndGetBroadcastShape(t,r),u=l.length,p=n.computeStrides(l),d=n.sizeFromShape(l),c=n.getTypedArrayFromDType(i,d),h=t.length,f=r.length,m=n.computeStrides(t),g=n.computeStrides(r),x=a.getBroadcastDims(t,l),y=a.getBroadcastDims(r,l);if(x.length+y.length===0)for(let t=0;t<c.length;++t)c[t]=e(s[t%s.length],o[t%o.length]);else for(let t=0;t<c.length;++t){let r=n.indexToLoc(t,u,p),a=r.slice(-h);x.forEach(e=>a[e]=0);let i=n.locToIndex(a,h,m),l=r.slice(-f);y.forEach(e=>l[e]=0);let d=n.locToIndex(l,f,g);c[t]=e(s[i],o[d])}return[c,l]}}}),o("aW9ro",function(t,r){e(t.exports,"relu",()=>n),e(t.exports,"reluConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Relu,e=>Math.max(0,e)),o={kernelName:a.Relu,backendName:"cpu",kernelFunc:n}}),o("7N7Xk",function(t,r){e(t.exports,"relu6",()=>n),e(t.exports,"relu6Config",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Relu6,e=>Math.min(Math.max(0,e),6)),o={kernelName:a.Relu6,backendName:"cpu",kernelFunc:n}}),o("dMdBj",function(t,r){e(t.exports,"sigmoidImpl",()=>i),e(t.exports,"sigmoid",()=>l),e(t.exports,"sigmoidConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>1/(1+Math.exp(-e))),l=(0,o.unaryKernelFunc)(a.Sigmoid,e=>1/(1+Math.exp(-e))),u={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:l}}),o("e8yCG",function(t,r){e(t.exports,"addImpl",()=>i),e(t.exports,"add",()=>u),e(t.exports,"addConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e+t),l=(0,o.createComplexBinaryKernelImpl)((e,t,r,a)=>({real:e+r,imag:t+a})),u=(0,o.binaryKernelFunc)(a.Add,i,l),p={kernelName:a.Add,backendName:"cpu",kernelFunc:u}}),o("kgSwn",function(t,r){e(t.exports,"binaryKernelFunc",()=>u),e(t.exports,"createComplexBinaryKernelImpl",()=>p),s("i64bB");var a=s("7MaPk"),n=s("jjNRA"),o=s("csahy"),i=s("7LLjQ"),l=s("bwMVz");function u(e,t,r,n){return null==r?({inputs:r,backend:s})=>{let{a:i,b:l}=r;(0,o.assertNotComplex)([i,l],e);let u=s.data.get(i.dataId).values,p=s.data.get(l.dataId).values,d="string"===i.dtype?a.fromUint8ToStringArray(u):u,c="string"===i.dtype?a.fromUint8ToStringArray(p):p,h=n||i.dtype,[f,m]=t(i.shape,l.shape,d,c,h);return s.makeTensorInfo(m,h,f)}:({inputs:e,backend:a})=>{let{a:s,b:o}=e;if("complex64"===s.dtype||"complex64"===o.dtype){let e=(0,i.cast)({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),t=a.data.get(e.dataId),n=t.complexTensorInfos.real,u=t.complexTensorInfos.imag,p=a.data.get(n.dataId).values,d=a.data.get(u.dataId).values,c=(0,i.cast)({inputs:{x:o},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(c.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=a.data.get(f.dataId).values,x=a.data.get(m.dataId).values,[y,b,v]=r(s.shape,o.shape,p,d,g,x),k=a.makeTensorInfo(v,"float32",y),N=a.makeTensorInfo(v,"float32",b),C=(0,l.complex)({inputs:{real:k,imag:N},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(N),C}{let e=a.data.get(s.dataId).values,r=a.data.get(o.dataId).values,i=n||s.dtype,[l,u]=t(s.shape,o.shape,e,r,i);return a.makeTensorInfo(u,i,l)}}}function p(e){return(t,r,s,o,i,l)=>{let u=a.assertAndGetBroadcastShape(t,r),p=n.sizeFromShape(u),d=u.length,c=n.computeStrides(u),h=n.getTypedArrayFromDType("float32",p),f=n.getTypedArrayFromDType("float32",p),m=a.getBroadcastDims(t,u),g=a.getBroadcastDims(r,u),x=a.mergeRealAndImagArrays(s,o),y=a.mergeRealAndImagArrays(i,l),b=t.length,v=n.computeStrides(t),k=r.length,N=n.computeStrides(r);if(m.length+g.length===0)for(let t=0;t<h.length;t++){let r=t%x.length,a=t%y.length,n=e(x[2*r],x[2*r+1],y[2*a],y[2*a+1]);h[t]=n.real,f[t]=n.imag}else for(let t=0;t<h.length;t++){let r=n.indexToLoc(t,d,c),a=r.slice(-b);m.forEach(e=>a[e]=0);let s=n.locToIndex(a,b,v),o=r.slice(-k);g.forEach(e=>o[e]=0);let i=n.locToIndex(o,k,N),l=e(x[2*s],x[2*s+1],y[2*i],y[2*i+1]);h[t]=l.real,f[t]=l.imag}return[h,f,u]}}}),o("7LLjQ",function(t,r){e(t.exports,"castImpl",()=>d),e(t.exports,"cast",()=>c),e(t.exports,"castConfig",()=>h),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("jQJ39"),i=s("3THkf"),l=s("bwMVz"),u=s("lcqBv"),p=s("linqd");function d(e,t,r,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){let a=n.toTypedArray([0],r),[s,i]=(0,o.createSimpleBinaryKernelImpl)((e,t)=>+(e!==t))(t,[],e,a,"bool");return[i,"bool",s]}throw Error(`Error in Cast: failed to cast ${r} to ${a}`)}function c(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return(0,u.identity)({inputs:{x:s},backend:r});let e=(0,i.zeros)(r,s.shape,s.dtype),t=c({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=(0,l.complex)({inputs:{real:t,imag:e},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),a}if("complex64"===s.dtype){let e=(0,p.real)({inputs:{input:s},backend:r}),t=c({inputs:{x:e},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(e),t}if(!n.hasEncodingLoss(s.dtype,o)){let e=(0,u.identity)({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}let[h,f,m]=d(r.data.get(s.dataId).values,s.shape,s.dtype,o);return r.makeTensorInfo(h,f,m)}let h={kernelName:a.Cast,backendName:"cpu",kernelFunc:c}}),o("3THkf",function(t,r){e(t.exports,"zeros",()=>function e(t,r,s="float32"){if("complex64"===s){let a=e(t,r,"float32"),s=e(t,r,"float32");return(0,n.complex)({inputs:{real:a,imag:s},backend:t})}let o=a.makeZerosTypedArray(a.sizeFromShape(r),s);return t.makeTensorInfo(r,s,o)}),s("i64bB");var a=s("jjNRA"),n=s("bwMVz")}),o("bwMVz",function(t,r){function a(e){let{inputs:t,backend:r}=e,{real:a,imag:n}=t,s=r.data.get(a.dataId).values,o=r.data.get(n.dataId).values,i=r.makeTensorInfo(a.shape,"complex64");return r.data.get(i.dataId).complexTensorInfos={real:r.makeTensorInfo(a.shape,"float32",s),imag:r.makeTensorInfo(n.shape,"float32",o)},i}e(t.exports,"complex",()=>a),e(t.exports,"complexConfig",()=>n),s("i64bB");let n={kernelName:s("hl418").Complex,backendName:"cpu",kernelFunc:a}}),o("linqd",function(t,r){function a(e){let{inputs:t,backend:r}=e,{input:a}=t,n=r.data.get(a.dataId).complexTensorInfos.real,s=r.data.get(n.dataId).values;return r.makeTensorInfo(n.shape,n.dtype,s)}e(t.exports,"real",()=>a),e(t.exports,"realConfig",()=>n),s("i64bB");let n={kernelName:s("hl418").Real,backendName:"cpu",kernelFunc:a}}),o("2G81o",function(t,r){e(t.exports,"batchMatMul",()=>p),e(t.exports,"batchMatMulConfig",()=>d),s("i64bB");var a=s("hl418"),n=s("8BaGO"),o=s("iG87S"),i=s("jjNRA"),l=s("csahy"),u=s("eL8rV");function p(e){let{inputs:t,backend:r,attrs:a}=e,{a:s,b:p}=t,{transposeA:d,transposeB:c}=a;(0,l.assertNotComplex)([s,p],"matMul");let h=s.shape.length,f=p.shape.length,m=d?s.shape[h-2]:s.shape[h-1],g=c?p.shape[f-1]:p.shape[f-2],x=d?s.shape[h-1]:s.shape[h-2],y=c?p.shape[f-2]:p.shape[f-1],b=s.shape.slice(0,-2),v=p.shape.slice(0,-2),k=i.sizeFromShape(b),N=i.sizeFromShape(v),C=n.assertAndGetBroadcastShape(s.shape.slice(0,-2),p.shape.slice(0,-2)).concat([x,y]);i.assert(m===g,()=>`Error in matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${s.shape} and ${p.shape} and transposeA=${d} and transposeB=${c} must match.`);let T=(0,u.reshape)({inputs:{x:s},backend:r,attrs:{shape:d?[k,m,x]:[k,x,m]}}),S=(0,u.reshape)({inputs:{x:p},backend:r,attrs:{shape:c?[N,y,g]:[N,g,y]}}),I=d?T.shape[1]:T.shape[2],w=d?T.shape[2]:T.shape[1],E=c?S.shape[1]:S.shape[2],A=Math.max(k,N),R=r.data.get(T.dataId).values,P=r.data.get(S.dataId).values,$=i.computeStrides(T.shape),F=i.computeStrides(S.shape),[B,D,M]=d?[$[0],1,$[1]]:[$[0],$[1],1],[O,L,_]=c?[1,F[1],F[0]]:[F[1],1,F[0]],V=w*E,G=(0,o.buffer)([A,w,E],T.dtype),z=G.values,W=r.blockSize;for(let e=0;e<A;e++){let t=e%k,r=e%N;for(let a=0;a<w;a+=W){let n=Math.min(a+W,w);for(let s=0;s<E;s+=W){let o=Math.min(s+W,E);for(let i=0;i<I;i+=W){let l=Math.min(i+W,I);for(let u=a;u<n;u++)for(let a=s;a<o;a++){let n=0;for(let e=i;e<l;e++)n+=R[t*B+u*D+e*M]*P[e*O+a*L+r*_];z[e*V+(u*E+a)]+=n}}}}}return r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(S),r.makeTensorInfo(C,G.dtype,G.values)}let d={kernelName:a.BatchMatMul,backendName:"cpu",kernelFunc:p}}),o("eL8rV",function(t,r){e(t.exports,"reshape",()=>o),e(t.exports,"reshapeConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA");function o(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{shape:o}=a,i=n.sizeFromShape(s.shape),l=n.inferFromImplicitShape(o,i),u=n.sizeFromShape(l);n.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.incRef(s.dataId);let p=r.data.get(s.dataId);if(null!=p.complexTensorInfos){let e=p.complexTensorInfos.real,t=p.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:s.dataId,shape:l,dtype:s.dtype}}let i={kernelName:a.Reshape,backendName:"cpu",kernelFunc:o}}),o("ep8sG",function(t,r){e(t.exports,"simpleAbsImpl",()=>i),e(t.exports,"absConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");function i(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}let l={kernelName:a.Abs,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend;(0,o.assertNotComplex)(t,"abs");let a=new Float32Array(n.sizeFromShape(t.shape));return a=i(r.data.get(t.dataId).values),r.makeOutput(a,t.shape,t.dtype)}}}),o("bUh4z",function(t,r){e(t.exports,"acosConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Acos,e=>Math.acos(e)),o={kernelName:a.Acos,backendName:"cpu",kernelFunc:n}}),o("3P3VJ",function(t,r){e(t.exports,"acoshConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Acosh,e=>Math.acosh(e)),o={kernelName:a.Acosh,backendName:"cpu",kernelFunc:n}}),o("fsVd1",function(t,r){e(t.exports,"addNConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("iG87S"),o=s("csahy");let i={kernelName:a.AddN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e;(0,o.assertNotComplex)(t,"addN");let a=t.map(e=>r.data.get(e.dataId).values),s=(0,n.buffer)(t[0].shape,t[0].dtype),i=s.values;for(let e=0;e<t.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return r.makeTensorInfo(s.shape,s.dtype,s.values)}}}),o("8SJ1h",function(t,r){e(t.exports,"allConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("eL8rV"),u=s("EOTYn");let p={kernelName:a.All,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:p,keepDims:d}=a;(0,i.assertNotComplex)(s,"all");let c=o.parseAxisParam(p,s.shape),h=c,f=n.getAxesPermutation(h,s.shape.length),m=s;null!=f&&(m=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:f}}),h=n.getInnerMostAxes(h.length,s.shape.length)),n.assertAxesAreInnerMostDims("all",h,m.shape.length);let[g,x]=n.computeOutAndReduceShapes(m.shape,h),y=o.sizeFromShape(x),b=o.makeZerosTypedArray(o.sizeFromShape(g),m.dtype),v=r.data.get(m.dataId).values;for(let e=0;e<b.length;++e){let t=e*y,r=v[t];for(let e=0;e<y;++e){let a=v[t+e];r=r&&a}b[e]=r}null!=f&&r.disposeIntermediateTensorInfo(m);let k=r.makeTensorInfo(g,m.dtype,b);if(d){let e=n.expandShapeToKeepDim(g,c),t=(0,l.reshape)({inputs:{x:k},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(k),t}return k}}}),o("EOTYn",function(t,r){e(t.exports,"transpose",()=>i),e(t.exports,"transposeConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("csahy"),o=s("4m8st");function i(e){let{inputs:t,attrs:r,backend:a}=e,{x:s}=t,{perm:i}=r;(0,n.assertNotComplex)(s,"transpose");let l=Array(s.shape.length);for(let e=0;e<l.length;e++)l[e]=s.shape[i[e]];let u=a.data.get(s.dataId).values,p=(0,o.transposeImpl)(u,s.shape,s.dtype,i,l);return{dataId:a.write(p,l,s.dtype),shape:l,dtype:s.dtype}}let l={kernelName:a.Transpose,backendName:"cpu",kernelFunc:i}}),o("4m8st",function(t,r){e(t.exports,"transposeImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r,n,s){let o=t.length,i=a.sizeFromShape(t),l=a.computeStrides(t),u=a.computeStrides(s),p=a.getTypedArrayFromDType(r,a.sizeFromShape(s));for(let t=0;t<i;++t){let r=a.indexToLoc(t,o,l),s=Array(r.length);for(let e=0;e<s.length;e++)s[e]=r[n[e]];p[a.locToIndex(s,o,u)]=e[t]}return p}}),o("le0H6",function(t,r){e(t.exports,"anyConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("eL8rV"),u=s("EOTYn");let p={kernelName:a.Any,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:p,keepDims:d}=a;(0,i.assertNotComplex)(s,"any");let c=o.parseAxisParam(p,s.shape),h=c,f=n.getAxesPermutation(h,s.shape.length),m=s;null!=f&&(m=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:f}}),h=n.getInnerMostAxes(h.length,s.shape.length)),n.assertAxesAreInnerMostDims("any",h,m.shape.length);let[g,x]=n.computeOutAndReduceShapes(m.shape,h),y=o.sizeFromShape(x),b=o.makeZerosTypedArray(o.sizeFromShape(g),m.dtype),v=r.data.get(m.dataId).values;for(let e=0;e<b.length;++e){let t=e*y,r=v[t];for(let e=0;e<y;++e){let a=v[t+e];r=r||a}b[e]=r}null!=f&&r.disposeIntermediateTensorInfo(m);let k=r.makeTensorInfo(g,m.dtype,b);if(d){let e=n.expandShapeToKeepDim(g,c),t=(0,l.reshape)({inputs:{x:k},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(k),t}return k}}}),o("87U55",function(t,r){e(t.exports,"argMaxConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("EOTYn");let u={kernelName:a.ArgMax,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:u}=a;(0,i.assertNotComplex)(s,"argMax");let p=o.parseAxisParam(u,s.shape),d=n.getAxesPermutation(p,s.shape.length),c=s,h=[];null!=d&&(h.push(c=(0,l.transpose)({inputs:{x:s},backend:r,attrs:{perm:d}})),p=n.getInnerMostAxes(p.length,c.shape.length)),p=[p[0]],n.assertAxesAreInnerMostDims("argMax",p,c.shape.length);let[f,m]=n.computeOutAndReduceShapes(c.shape,p),g=o.sizeFromShape(f),x=o.makeZerosTypedArray(g,"int32"),y=o.sizeFromShape(m),b=r.data.get(c.dataId).values;for(let e=0;e<x.length;++e){let t=e*y,r=b[t],a=0;for(let e=0;e<y;++e){let n=b[t+e];n>r&&(r=n,a=e)}x[e]=a}return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(f,"int32",x)}}}),o("lipiZ",function(t,r){e(t.exports,"argMinConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("EOTYn");let u={kernelName:a.ArgMin,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:u}=a;(0,i.assertNotComplex)(s,"argMin");let p=o.parseAxisParam(u,s.shape),d=n.getAxesPermutation(p,s.shape.length),c=s,h=[];null!=d&&(h.push(c=(0,l.transpose)({inputs:{x:s},backend:r,attrs:{perm:d}})),p=n.getInnerMostAxes(p.length,c.shape.length)),p=[p[0]],n.assertAxesAreInnerMostDims("argMin",p,c.shape.length);let[f,m]=n.computeOutAndReduceShapes(c.shape,p),g=o.sizeFromShape(f),x=o.makeZerosTypedArray(g,"int32"),y=o.sizeFromShape(m),b=r.data.get(c.dataId).values;for(let e=0;e<x.length;++e){let t=e*y,r=b[t],a=0;for(let e=0;e<y;++e){let n=b[t+e];n<r&&(r=n,a=e)}x[e]=a}return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(f,"int32",x)}}}),o("j8K9f",function(t,r){e(t.exports,"asinConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Asin,e=>Math.asin(e)),o={kernelName:a.Asin,backendName:"cpu",kernelFunc:n}}),o("fEiH8",function(t,r){e(t.exports,"asinhConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Asinh,e=>Math.asinh(e)),o={kernelName:a.Asinh,backendName:"cpu",kernelFunc:n}}),o("fdU79",function(t,r){e(t.exports,"atanConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Atan,e=>Math.atan(e)),o={kernelName:a.Atan,backendName:"cpu",kernelFunc:n}}),o("90zJE",function(t,r){e(t.exports,"atan2Config",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>Math.atan2(e,t)),l=(0,o.binaryKernelFunc)(a.Atan2,i),u={kernelName:a.Atan2,backendName:"cpu",kernelFunc:l}}),o("6BamV",function(t,r){e(t.exports,"atanhConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Atanh,e=>Math.atanh(e)),o={kernelName:a.Atanh,backendName:"cpu",kernelFunc:n}}),o("3xO3I",function(t,r){e(t.exports,"avgPoolConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("k15kg"),u=s("lcqBv");let p={kernelName:a.AvgPool,backendName:"cpu",kernelFunc:function(e){let t,{inputs:r,backend:a,attrs:s}=e,{x:p}=r;(0,i.assertNotComplex)(p,"avgPool");let{filterSize:d,strides:c,pad:h,dimRoundingMode:f}=s;o.assert(n.eitherStridesOrDilationsAreOne(c,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`);let m=n.computePool2DInfo(p.shape,d,c,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.arraysEqual(m.inShape,m.outShape))t=(0,u.identity)({inputs:{x:p},backend:a});else{let e=a.data.get(p.dataId).values,r=o.computeStrides(p.shape),n=(0,l.pool)(e,p.shape,p.dtype,r,m,"avg");t=a.makeTensorInfo(m.outShape,p.dtype,n.values)}return t}}}),o("k15kg",function(t,r){e(t.exports,"pool",()=>n),e(t.exports,"maxPoolPositions",()=>o),e(t.exports,"pool3d",()=>i),e(t.exports,"maxPool3dPositions",()=>l),s("i64bB");var a=s("iG87S");function n(e,t,r,n,s,o){let i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,p=s.dilationWidth,d=s.effectiveFilterHeight,c=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,a.buffer)(s.outShape,r),x=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let t=0;t<s.batchSize;++t){let r=t*y,a=t*n[0];for(let t=0;t<s.inChannels;++t)for(let g=0;g<s.outHeight;++g){let y=g*i-h,k=Math.max(0,y),N=Math.min(s.inHeight,d+y),C=r+g*b;for(let r=0;r<s.outWidth;++r){let i=r*l-f,d=Math.max(0,i),h=Math.min(s.inWidth,c+i),g=m,y=0,b=0;for(let r=k;r<N;r+=u){let s=a+r*n[1];for(let r=d;r<h;r+=p){let a=e[s+r*n[2]+t];"max"===o&&a>g?g=a:"avg"===o&&(y+=a,b++)}if(isNaN(g))break}x[C+r*v+t]="avg"===o?y/b:g}}}return g}function o(e,t,r,n,s=!1,i=!1){let l=(0,a.buffer)(n.outShape,"int32"),u=n.strideHeight,p=n.strideWidth,d=n.dilationHeight,c=n.dilationWidth,h=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=n.padInfo.top,g=n.padInfo.left,x=(0,a.buffer)(t,r,e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let r=0;r<n.outHeight;++r){let a=r*u-m,o=a;for(;o<0;)o+=d;let y=Math.min(n.inHeight,h+a);for(let u=0;u<n.outWidth;++u){let h=u*p-g,m=h;for(;m<0;)m+=c;let b=Math.min(n.inWidth,f+h),v=Number.NEGATIVE_INFINITY,k=-1;for(let r=o;r<y;r+=d){let o=r-a;for(let a=m;a<b;a+=c){let l=a-h,u=x.get(e,r,a,t);u>v&&(v=u,k=s?i?((e*n.inHeight+r)*n.inWidth+a)*n.inChannels+t:(r*n.inWidth+a)*n.inChannels+t:o*f+l)}}l.set(k,e,r,u,t)}}return l}function i(e,t,r,n,s,o){let i=s.strideDepth,l=s.strideHeight,u=s.strideWidth,p=s.dilationDepth,d=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,x=s.padInfo.top,y=s.padInfo.left,b="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,a.buffer)(s.outShape,r),k=v.values,N=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){let r=t*N,a=t*n[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){let N=v*i-g,I=N;for(;I<0;)I+=p;let w=Math.min(s.inDepth,h+N),E=r+v*C;for(let r=0;r<s.outHeight;++r){let i=r*l-x,h=i;for(;h<0;)h+=d;let g=Math.min(s.inHeight,f+i),v=E+r*T;for(let r=0;r<s.outWidth;++r){let i=r*u-y,l=i;for(;l<0;)l+=c;let f=Math.min(s.inWidth,m+i),x=v+r*S,N=b,C=0,T=0;for(let r=I;r<w;r+=p){let s=a+r*n[1];for(let r=h;r<g;r+=d){let a=s+r*n[2];for(let r=l;r<f;r+=c){let s=e[a+r*n[3]+t];if("max"===o&&s>N?N=s:"avg"===o&&(C+=s,T++),isNaN(N))break}if(isNaN(N))break}if(isNaN(N))break}k[x+t]="avg"===o?C/Math.max(T,1):N}}}}return v}function l(e,t){let r=(0,a.buffer)(t.outShape,"int32"),n=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,c=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let a=0;a<t.batchSize;++a)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){let y=x*n-h,b=y;for(;b<0;)b+=i;let v=Math.min(t.inDepth,p+y);for(let n=0;n<t.outHeight;++n){let p=n*s-f,h=p;for(;h<0;)h+=l;let k=Math.min(t.inHeight,d+p);for(let s=0;s<t.outWidth;++s){let f=s*o-m,N=f;for(;N<0;)N+=u;let C=Math.min(t.inWidth,c+f),T=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<v;t+=i){let r=t-y;for(let n=h;n<k;n+=l){let s=n-p;for(let o=N;o<C;o+=u){let i=o-f,l=e.get(a,t,n,o,g);l>=T&&(T=l,S=r*d*c+s*d+i)}}}r.set(S,a,x,n,s,g)}}}return r}}),o("tsPaI",function(t,r){e(t.exports,"avgPool3DConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("csahy"),l=s("k15kg");let u={kernelName:a.AvgPool3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{filterSize:u,strides:p,pad:d,dimRoundingMode:c,dataFormat:h}=a;(0,i.assertNotComplex)(s,"avgPool3d");let f=n.computePool3DInfo(s.shape,u,p,1,d,c,h),m=r.data.get(s.dataId).values,g=(0,l.pool3d)(m,s.shape,s.dtype,o.computeStrides(s.shape),f,"avg");return r.makeTensorInfo(g.shape,"float32",g.values)}}}),o("4X50Y",function(t,r){e(t.exports,"avgPool3DGradConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("iG87S"),i=s("csahy");let l={kernelName:a.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{dy:s,input:l}=t,{filterSize:u,strides:p,pad:d,dimRoundingMode:c}=a;(0,i.assertNotComplex)([s,l],"avgPool3DGrad");let h=n.computePool3DInfo(l.shape,u,p,1,d,c),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,x=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=h.dilationDepth,k=h.dilationHeight,N=h.dilationWidth,C=h.effectiveFilterDepth,T=h.effectiveFilterHeight,S=h.effectiveFilterWidth,I=C-1-h.padInfo.front,w=S-1-h.padInfo.left,E=T-1-h.padInfo.top,A=(0,o.buffer)(l.shape,"float32"),R=1/(x*y*b),P=r.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let r=0;r<h.inDepth;++r)for(let a=0;a<h.inHeight;++a)for(let n=0;n<h.inWidth;++n){let s=r-I,o=a-E,i=n-w,l=0;for(let r=0;r<C;r+=v){let a=(s+r)/f;if(!(a<0)&&!(a>=h.outDepth)&&Math.floor(a)===a)for(let r=0;r<T;r+=k){let n=(o+r)/m;if(!(n<0)&&!(n>=h.outHeight)&&Math.floor(n)===n)for(let r=0;r<S;r+=N){let s=(i+r)/g;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=P.get(e,a,n,s,t))}}}A.set(l*R,e,r,a,n,t)}return r.makeTensorInfo(A.shape,A.dtype,A.values)}}}),o("5UuKm",function(t,r){e(t.exports,"avgPoolGradConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("iG87S"),i=s("csahy");let l={kernelName:a.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{dy:s,input:l}=t;(0,i.assertNotComplex)([s,l],"avgPoolGrad");let{filterSize:u,strides:p,pad:d}=a,c=n.computePool2DInfo(l.shape,u,p,1,d),h=c.strideHeight,f=c.strideWidth,m=c.filterHeight,g=c.filterWidth,x=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=v-1-c.padInfo.left,N=b-1-c.padInfo.top,C=(0,o.buffer)(l.shape,"float32"),T=1/(m*g),S=r.data.get(s.dataId).values,I=(0,o.buffer)(s.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){let n=r-N,s=a-k,o=0;for(let r=0;r<b;r+=x){let a=(n+r)/h;if(!(a<0)&&!(a>=c.outHeight)&&Math.floor(a)===a)for(let r=0;r<v;r+=y){let n=(s+r)/f;n<0||n>=c.outWidth||Math.floor(n)!==n||(o+=I.get(e,a,n,t))}}C.set(o*T,e,r,a,t)}return r.makeTensorInfo(C.shape,C.dtype,C.values)}}}),o("gngeB",function(t,r){e(t.exports,"batchNormConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,scale:i,offset:l,mean:u,variance:p}=t;n.assert(u.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),n.assert(null==l||u.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),n.assert(null==i||u.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),(0,o.assertNotComplex)([s,u,p,i,l],"batchNorm");let{varianceEpsilon:d}=a;null==d&&(d=.001);let c=r.data.get(s.dataId).values,h=r.data.get(u.dataId).values,f=r.data.get(p.dataId).values,m=i?r.data.get(i.dataId).values:new Float32Array([1]),g=l?r.data.get(l.dataId).values:new Float32Array([0]),x=new Float32Array(c.length),y=g.length,b=m.length,v=f.length,k=h.length,N=0,C=0,T=0,S=0;for(let e=0;e<c.length;++e)x[e]=g[N++]+(c[e]-h[C++])*m[T++]/Math.sqrt(f[S++]+d),N>=y&&(N=0),C>=k&&(C=0),T>=b&&(T=0),S>=v&&(S=0);return r.makeTensorInfo(s.shape,s.dtype,x)}}}),o("lWuZH",function(t,r){e(t.exports,"batchToSpaceNDConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("csahy"),i=s("eL8rV"),l=s("aYBRE"),u=s("EOTYn");let p={kernelName:n.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{blockShape:p,crops:d}=n;(0,o.assertNotComplex)([s],"batchToSpaceND");let c=p.reduce((e,t)=>e*t),h=a.getReshaped(s.shape,p,c),f=a.getPermuted(h.length,p.length),m=a.getReshapedPermuted(s.shape,p,c),g=a.getSliceBeginCoords(d,p.length),x=a.getSliceSize(m,d,p.length),y=(0,i.reshape)({inputs:{x:s},backend:r,attrs:{shape:h}}),b=(0,u.transpose)({inputs:{x:y},backend:r,attrs:{perm:f}}),v=(0,i.reshape)({inputs:{x:b},backend:r,attrs:{shape:m}}),k=(0,l.slice)({inputs:{x:v},backend:r,attrs:{begin:g,size:x}});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),k}}}),o("aYBRE",function(t,r){e(t.exports,"sliceImpl",()=>p),e(t.exports,"slice",()=>d),e(t.exports,"sliceConfig",()=>c),s("i64bB");var a=s("7MaPk"),n=s("iG87S"),o=s("hl418"),i=s("bszZn"),l=s("jjNRA"),u=s("csahy");function p(e,t,r,s,o){let u=i.isSliceContinous(s,t,r),p=l.sizeFromShape(r),d=l.computeStrides(s);if(u){let r=i.computeFlatOffset(t,d);return"string"===o?e.slice(r,r+p):e.subarray(r,r+p)}let c="string"===o?a.fromUint8ToStringArray(e):e,h=(0,n.buffer)(s,o,c),f=(0,n.buffer)(r,o);for(let e=0;e<f.size;++e){let r=f.indexToLoc(e),a=r.map((e,r)=>e+t[r]);f.set(h.get(...a),...r)}return"string"===o?a.fromStringArrayToUint8(f.values):f.values}function d(e){let{inputs:t,backend:r,attrs:a}=e,{x:n}=t,{begin:s,size:o}=a;(0,u.assertNotComplex)(n,"slice");let[l,d]=i.parseSliceParams(n,s,o);i.assertParamsValid(n,l,d);let c=p(r.data.get(n.dataId).values,l,d,n.shape,n.dtype);return r.makeTensorInfo(d,n.dtype,c)}let c={kernelName:o.Slice,backendName:"cpu",kernelFunc:d}}),o("efeXu",function(t,r){e(t.exports,"bincountConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("34gHf");let o={kernelName:a.Bincount,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,weights:o}=t,{size:i}=a,l=r.data.get(s.dataId).values,u=r.data.get(o.dataId).values,p=(0,n.bincountImpl)(l,u,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,p)}}}),o("34gHf",function(t,r){e(t.exports,"bincountImpl",()=>o),e(t.exports,"bincountReduceImpl",()=>i),s("i64bB");var a=s("iG87S"),n=s("jjNRA");function o(e,t,r,a,s){let o=n.sizeFromShape(a),i=n.makeZerosTypedArray(s,r);for(let r=0;r<e.length;r++){let a=e[r];if(a<0)throw Error("Input x must be non-negative!");a>=s||(o>0?i[a]+=t[r]:i[a]+=1)}return i}function i(e,t,r,n=!1){let s=e.shape[0],o=e.shape[1],l=(0,a.buffer)([s,r],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<o;s++){let o=e.get(a,s);if(o<0)throw Error("Input x must be non-negative!");o>=r||(n?l.set(1,a,o):t.size>0?l.set(l.get(a,o)+t.get(a,s),a,o):l.set(l.get(a,o)+1,a,o))}return l}}),o("eYl2h",function(t,r){e(t.exports,"bitwiseAndImpl",()=>i),e(t.exports,"bitwiseAndConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e&t),l=(0,o.binaryKernelFunc)(a.BitwiseAnd,i),u={kernelName:a.BitwiseAnd,backendName:"cpu",kernelFunc:l}}),o("aSawK",function(t,r){e(t.exports,"broadcastArgsConfig",()=>n),s("i64bB");var a=s("7MaPk");let n={kernelName:s("hl418").BroadcastArgs,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:s}=t,o=r.data.get(n.dataId).values,i=r.data.get(s.dataId).values,l=a.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return r.makeTensorInfo([l.length],"int32",Int32Array.from(l))}}}),o("bs8Xr",function(t,r){e(t.exports,"ceilImpl",()=>i),e(t.exports,"ceilConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.ceil(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Ceil,i),u={kernelName:a.Ceil,backendName:"cpu",kernelFunc:l}}),o("gZ5VL",function(t,r){e(t.exports,"clipByValueConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.ClipByValue,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),o={kernelName:a.ClipByValue,backendName:"cpu",kernelFunc:n}}),o("bF2Ar",function(t,r){e(t.exports,"complexAbsConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jjNRA");let o={kernelName:a.ComplexAbs,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend,a=new Float32Array(n.sizeFromShape(t.shape)),s=r.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,l=r.data.get(o.dataId).values,u=r.data.get(i.dataId).values;for(let e=0;e<l.length;e++){let t=l[e],r=u[e];a[e]=Math.hypot(t,r)}return r.makeOutput(a,t.shape,"float32")}}}),o("4kUws",function(t,r){e(t.exports,"concat",()=>h),e(t.exports,"concatConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("bwMVz"),l=s("3wcyL"),u=s("lcqBv"),p=s("32coj"),d=s("linqd"),c=s("eL8rV");function h(e){let{inputs:t,backend:r,attrs:n}=e,{axis:s}=n,f=o.parseAxisParam(s,t[0].shape)[0],m=t.map(e=>e.shape);a.assertParamsConsistent(m,f);let g=a.computeOutShape(t.map(e=>e.shape),f);if(0===o.sizeFromShape(g))return r.makeTensorInfo(g,t[0].dtype,[]);let x=t.filter(e=>o.sizeFromShape(e.shape)>0);if(1===x.length)return(0,u.identity)({inputs:{x:x[0]},backend:r});if("complex64"===x[0].dtype){let e=x.map(e=>(0,d.real)({inputs:{input:e},backend:r})),t=x.map(e=>(0,p.imag)({inputs:{input:e},backend:r})),a=h({inputs:e,backend:r,attrs:{axis:f}}),n=h({inputs:t,backend:r,attrs:{axis:f}}),s=(0,i.complex)({inputs:{real:a,imag:n},backend:r});return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),t.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(n),s}let y=x.map(e=>{let t=o.sizeFromShape(e.shape.slice(f));return(0,c.reshape)({inputs:{x:e},backend:r,attrs:{shape:[-1,t]}})}),b=y.map(e=>({vals:r.data.get(e.dataId).values,shape:e.shape}));g=a.computeOutShape(y.map(e=>e.shape),1);let v=1===y[0].shape[0],k=(0,l.concatImpl)(b,g,t[0].dtype,v),N=a.computeOutShape(x.map(e=>e.shape),f),C=r.makeTensorInfo(N,t[0].dtype,k);return y.forEach(e=>r.disposeIntermediateTensorInfo(e)),C}let f={kernelName:n.Concat,backendName:"cpu",kernelFunc:h}}),o("3wcyL",function(t,r){e(t.exports,"concatImpl",()=>o),s("i64bB");var a=s("7MaPk"),n=s("jjNRA");function o(e,t,r,s){let o=n.getArrayFromDType(r,n.sizeFromShape(t));if(s&&"string"!==r){let t=0;e.forEach(e=>{let r=n.sizeFromShape(e.shape);o.set(e.vals,t),t+=r})}else{let n=0;e.forEach(e=>{let s="string"===r?a.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let r=0;r<e.shape[0];++r){let a=r*t[1]+n;for(let t=0;t<e.shape[1];++t)o[a+t]=s[i++]}n+=e.shape[1]})}return o}}),o("32coj",function(t,r){function a(e){let{inputs:t,backend:r}=e,{input:a}=t,n=r.data.get(a.dataId).complexTensorInfos.imag,s=r.data.get(n.dataId).values;return r.makeTensorInfo(n.shape,n.dtype,s)}e(t.exports,"imag",()=>a),e(t.exports,"imagConfig",()=>n),s("i64bB");let n={kernelName:s("hl418").Imag,backendName:"cpu",kernelFunc:a}}),o("4qhwE",function(t,r){e(t.exports,"conv2D",()=>u),e(t.exports,"conv2DConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");function u(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,filter:u}=t,{strides:p,pad:d,dataFormat:c,dilations:h,dimRoundingMode:f}=n;(0,l.assertNotComplex)([s,u],"conv2d");let m=a.convertConv2DDataFormat(c),g=a.computeConv2DInfo(s.shape,u.shape,p,h,d,f,!1,m),x=g.filterHeight,y=g.filterWidth,b=g.dilationHeight,v=g.dilationWidth,k=g.padInfo.left,N=g.padInfo.top,C="channelsLast"===g.dataFormat,T=new(0,o.TensorBuffer)(g.outShape,s.dtype),S=i.computeStrides(s.shape),I=i.computeStrides(u.shape),w=S[0],E=C?S[1]:S[2],A=C?S[2]:1,R=C?1:S[1],P=T.strides[0],$=C?T.strides[1]:T.strides[2],F=C?T.strides[2]:1,B=C?1:T.strides[1],D=r.data.get(s.dataId).values,M=r.data.get(u.dataId).values,O=T.values;for(let e=0;e<g.batchSize;++e){let t=e*w,r=e*P;for(let e=0;e<g.outHeight;++e){let a=r+e*$,n=e*g.strideHeight-N;for(let e=0;e<x;++e){let r=n+e*b;if(r<0||r>=g.inHeight)continue;let s=e*I[0],o=t+r*E;for(let e=0;e<g.outWidth;++e){let t=a+e*F,r=e*g.strideWidth-k;for(let e=0;e<y;++e){let a=r+e*v;if(a<0||a>=g.inWidth)continue;let n=s+e*I[1],i=o+a*A,l=n;for(let e=0;e<g.inChannels;++e){let r=D[i+e*R];for(let e=0;e<g.outChannels;++e)O[t+e*B]+=r*M[l+e];l+=g.outChannels}}}}}}return r.makeTensorInfo(T.shape,T.dtype,O)}let p={kernelName:n.Conv2D,backendName:"cpu",kernelFunc:u}}),o("iN1IP",function(t,r){e(t.exports,"conv2DBackpropFilterConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("csahy");let l={kernelName:n.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:l}=t,{strides:u,pad:p,dataFormat:d,dimRoundingMode:c,filterShape:h}=n;(0,i.assertNotComplex)([s,l],"conv2dBackpropFilter");let f=a.convertConv2DDataFormat(d),m=a.computeConv2DInfo(s.shape,h,u,1,p,c,!1,f),{strideHeight:g,strideWidth:x,filterHeight:y,filterWidth:b}=m,v="channelsLast"===m.dataFormat,k=new(0,o.TensorBuffer)(m.filterShape,"float32"),N=m.padInfo.left,C=m.padInfo.top,T=r.data.get(s.dataId).values,S=r.data.get(l.dataId).values,I=new(0,o.TensorBuffer)(s.shape,s.dtype,T),w=new(0,o.TensorBuffer)(l.shape,l.dtype,S);for(let e=0;e<y;++e){let t=Math.max(0,Math.ceil((C-e)/g)),r=Math.min(m.outHeight,(m.inHeight+C-e)/g);for(let a=0;a<b;++a){let n=Math.max(0,Math.ceil((N-a)/x)),s=Math.min(m.outWidth,(m.inWidth+N-a)/x);for(let o=0;o<m.inChannels;++o)for(let i=0;i<m.outChannels;++i){let l=0;for(let u=0;u<m.batchSize;++u)for(let p=t;p<r;++p){let t=e+p*g-C;for(let e=n;e<s;++e){let r=a+e*x-N;v?l+=I.get(u,t,r,o)*w.get(u,p,e,i):l+=I.get(u,o,t,r)*w.get(u,i,p,e)}}k.set(l,e,a,o,i)}}}return r.makeTensorInfo(k.shape,k.dtype,k.values)}}}),o("9NzND",function(t,r){e(t.exports,"conv2DBackpropInputConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");let u={kernelName:n.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:u}=t,{inputShape:p,strides:d,pad:c,dataFormat:h,dimRoundingMode:f}=n;(0,l.assertNotComplex)([s,u],"conv2dBackpropInput");let m=i.computeStrides(u.shape),g=i.computeStrides(s.shape),x=a.convertConv2DDataFormat(h),y=a.computeConv2DInfo(p,u.shape,d,1,c,f,!1,x),b=new(0,o.TensorBuffer)(y.inShape,"float32"),v=b.values,k=r.data.get(s.dataId).values,N=r.data.get(u.dataId).values,[C,T,S]=m,{batchSize:I,filterHeight:w,filterWidth:E,inChannels:A,inHeight:R,inWidth:P,outChannels:$,outHeight:F,outWidth:B,strideHeight:D,strideWidth:M}=y;x=y.dataFormat;let O=w-1-y.padInfo.top,L=E-1-y.padInfo.left,_="channelsLast"===x,V=b.strides[0],G=_?b.strides[1]:b.strides[2],z=_?b.strides[2]:1,W=_?1:b.strides[1],U=g[0],j=_?g[1]:g[2],q=_?g[2]:1,H=_?1:g[1];for(let e=0;e<I;++e)for(let t=0;t<A;++t)for(let r=0;r<R;++r){let a=r-O,n=Math.max(0,Math.ceil(a/D)),s=Math.min(F,(w+a)/D);for(let o=0;o<P;++o){let i=o-L,l=Math.max(0,Math.ceil(i/M)),u=Math.min(B,(E+i)/M),p=0;for(let r=n;r<s;++r){let n=r*D-a;for(let a=l;a<u;++a){let s=a*M-i,o=U*e+j*r+q*a,l=C*(w-1-n)+T*(E-1-s)+S*t;for(let e=0;e<$;++e)p+=k[o+H*e]*N[l+e]}}v[V*e+G*r+z*o+W*t]=p}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}}}),o("fAnsw",function(t,r){e(t.exports,"conv3DConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");let u={kernelName:n.Conv3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,filter:u}=t,{strides:p,pad:d,dilations:c}=n;(0,l.assertNotComplex)([s,u],"conv3d");let h=a.computeConv3DInfo(s.shape,u.shape,p,c,d),{filterDepth:f,filterHeight:m,filterWidth:g,dilationDepth:x,dilationHeight:y,dilationWidth:b,padInfo:v}=h,k=v.front,N=v.left,C=v.top,T=new(0,o.TensorBuffer)(h.outShape,s.dtype),S=r.data.get(s.dataId).values,I=r.data.get(u.dataId).values,w=T.values,E=i.computeStrides(s.shape),A=i.computeStrides(u.shape);for(let e=0;e<h.batchSize;++e){let t=e*E[0],r=e*T.strides[0];for(let e=0;e<h.outDepth;++e){let a=r+e*T.strides[1],n=e*h.strideDepth-k;for(let e=0;e<f;++e){let r=n+e*x;if(r<0||r>=h.inDepth)continue;let s=e*A[0],o=t+r*E[1];for(let e=0;e<h.outHeight;++e){let t=a+e*T.strides[2],r=e*h.strideHeight-C;for(let e=0;e<m;++e){let a=r+e*y;if(a<0||a>=h.inHeight)continue;let n=s+e*A[1],i=o+a*E[2];for(let e=0;e<h.outWidth;++e){let r=t+e*h.outChannels,a=e*h.strideWidth-N;for(let e=0;e<g;++e){let t=a+e*b;if(t<0||t>=h.inWidth)continue;let s=n+e*A[2],o=i+t*h.inChannels,l=s;for(let e=0;e<h.inChannels;++e){let t=S[o+e];for(let e=0;e<h.outChannels;++e)w[r+e]+=t*I[l+e];l+=h.outChannels}}}}}}}}return r.makeTensorInfo(T.shape,T.dtype,T.values)}}}),o("fo9Ix",function(t,r){e(t.exports,"conv3DBackpropFilterV2Config",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");let u={kernelName:n.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:u}=t,{strides:p,pad:d,filterShape:c}=n;(0,l.assertNotComplex)([s,u],"conv3dBackpropFilterV2");let h=i.computeStrides(s.shape),f=i.computeStrides(u.shape),m=a.computeConv3DInfo(s.shape,c,p,1,d),g=m.strideDepth,x=m.strideHeight,y=m.strideWidth,b=m.filterDepth,v=m.filterHeight,k=m.filterWidth,N=new(0,o.TensorBuffer)(m.filterShape,"float32"),C=N.values,[T,S,I,w]=N.strides,E=r.data.get(u.dataId).values,[A,R,P,$]=f,F=r.data.get(s.dataId).values,[B,D,M,O]=h,L=m.padInfo.front,_=m.padInfo.left,V=m.padInfo.top;for(let e=0;e<b;++e){let t=Math.max(0,Math.ceil((L-e)/g)),r=Math.min(m.outDepth,(m.inDepth+L-e)/g),a=e*T;for(let n=0;n<v;++n){let s=Math.max(0,Math.ceil((V-n)/x)),o=Math.min(m.outHeight,(m.inHeight+V-n)/x),i=n*S+a;for(let a=0;a<k;++a){let l=Math.max(0,Math.ceil((_-a)/y)),u=Math.min(m.outWidth,(m.inWidth+_-a)/y),p=a*I+i;for(let i=0;i<m.inChannels;++i){let d=i*w+p;for(let p=0;p<m.outChannels;++p){let c=0;for(let d=0;d<m.batchSize;++d){let h=d*B,f=d*A;for(let d=t;d<r;++d){let t=(e+d*g-L)*D+h,r=d*R+f;for(let e=s;e<o;++e){let s=(n+e*x-V)*M+t,o=e*P+r;for(let e=l;e<u;++e){let t=(a+e*y-_)*O+s,r=e*$+o;c+=F[t+i]*E[r+p]}}}}C[d+p]=c}}}}}return r.makeTensorInfo(N.shape,N.dtype,N.values)}}}),o("6iRxY",function(t,r){e(t.exports,"conv3DBackpropInputV2Config",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");let u={kernelName:n.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:u}=t,{pad:p,strides:d,inputShape:c}=n;(0,l.assertNotComplex)([s],"conv3dBackpropInputV2");let h=i.computeStrides(s.shape),f=i.computeStrides(u.shape),m=a.computeConv3DInfo(c,u.shape,d,1,p),g=new(0,o.TensorBuffer)(m.inShape,"float32"),x=g.values,[y,b,v,k]=g.strides,N=r.data.get(s.dataId).values,[C,T,S,I]=h,w=r.data.get(u.dataId).values,[E,A,R,P]=f,{batchSize:$,filterDepth:F,filterHeight:B,filterWidth:D,inChannels:M,inDepth:O,inHeight:L,inWidth:_,outChannels:V,outDepth:G,outHeight:z,outWidth:W,strideDepth:U,strideHeight:j,strideWidth:q}=m,H=F-1-m.padInfo.front,K=B-1-m.padInfo.top,X=D-1-m.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<M;++t)for(let r=0;r<O;++r){let a=r-H,n=Math.max(0,Math.ceil(a/U)),s=Math.min(G,(F+a)/U);for(let o=0;o<L;++o){let i=o-K,l=Math.max(0,Math.ceil(i/j)),u=Math.min(z,(B+i)/j);for(let p=0;p<_;++p){let d=p-X,c=Math.max(0,Math.ceil(d/q)),h=Math.min(W,(D+d)/q),f=0;for(let r=n;r<s;++r){let n=r*U-a;for(let a=l;a<u;++a){let s=a*j-i;for(let o=c;o<h;++o){let i=o*q-d,l=C*e+T*r+S*a+I*o,u=E*(F-1-n)+A*(B-1-s)+R*(D-1-i)+P*t;for(let e=0;e<V;++e)f+=N[l+e]*w[u+e]}}}x[y*e+b*r+v*o+k*p+t]=f}}}return r.makeTensorInfo(g.shape,g.dtype,g.values)}}}),o("46RLW",function(t,r){e(t.exports,"cosConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Cos,e=>Math.cos(e)),o={kernelName:a.Cos,backendName:"cpu",kernelFunc:n}}),o("fgHAz",function(t,r){e(t.exports,"coshConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Cosh,e=>Math.cosh(e)),o={kernelName:a.Cosh,backendName:"cpu",kernelFunc:n}}),o("7CMH3",function(t,r){e(t.exports,"cropAndResizeConfig",()=>i),s("i64bB");var a=s("iG87S"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.CropAndResize,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:s,boxes:i,boxInd:l}=t,{cropSize:u,method:p,extrapolationValue:d}=n,[c,h,f,m]=s.shape,g=i.shape[0],[x,y]=u,b=(0,a.buffer)([g,x,y,m],"float32"),v=r.data.get(i.dataId).values,k=r.data.get(l.dataId).values,N=r.data.get(s.dataId).values,C=o.computeStrides(s.shape),T=o.computeStrides(b.shape);for(let e=0;e<g;e++){let t=4*e,r=v[t],a=v[t+1],n=v[t+2],s=v[t+3],o=k[e];if(o>=c)continue;let i=x>1?(n-r)*(h-1)/(x-1):0,l=y>1?(s-a)*(f-1)/(y-1):0;for(let t=0;t<x;t++){let u=x>1?r*(h-1)+t*i:.5*(r+n)*(h-1);if(u<0||u>h-1){for(let r=0;r<y;r++)for(let a=0;a<m;a++){let n=a+r*T[2]+t*T[1]+e*T[0];b.values[n]=d}continue}if("bilinear"===p){let r=Math.floor(u),n=Math.ceil(u),i=u-r;for(let u=0;u<y;u++){let p=y>1?a*(f-1)+u*l:.5*(a+s)*(f-1);if(p<0||p>f-1){for(let r=0;r<m;r++){let a=r+u*T[2]+t*T[1]+e*T[0];b.values[a]=d}continue}let c=Math.floor(p),h=Math.ceil(p),g=p-c;for(let a=0;a<m;a++){let s=a+c*C[2]+r*C[1]+o*C[0],l=N[s],p=N[s=a+h*C[2]+r*C[1]+o*C[0]],d=N[s=a+c*C[2]+n*C[1]+o*C[0]],f=N[s=a+h*C[2]+n*C[1]+o*C[0]],m=l+(p-l)*g,x=d+(f-d)*g;s=a+u*T[2]+t*T[1]+e*T[0],b.values[s]=m+(x-m)*i}}}else for(let r=0;r<y;++r){let n=y>1?a*(f-1)+r*l:.5*(a+s)*(f-1);if(n<0||n>f-1){for(let a=0;a<m;a++){let n=a+r*T[2]+t*T[1]+e*T[0];b.values[n]=d}continue}let i=Math.round(n),p=Math.round(u);for(let a=0;a<m;a++){let n=a+i*C[2]+p*C[1]+o*C[0],s=a+r*T[2]+t*T[1]+e*T[0];b.values[s]=N[n]}}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}}}),o("3Jn3O",function(t,r){e(t.exports,"cumprodConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("2MDja"),i=s("jjNRA"),l=s("csahy"),u=s("EOTYn");let p={kernelName:n.Cumprod,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{axis:p,exclusive:d,reverse:c}=n;(0,l.assertNotComplex)(s,"cumprod");let h=a.getAxesPermutation([p],s.shape.length),f=s;null!=h&&(f=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:h}}));let m=a.getInnerMostAxes(1,s.shape.length)[0];if(m!==f.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${f.shape.length-1} but got axis=${m}`);let g=(0,o.upcastType)(f.dtype,"int32"),x=i.makeOnesTypedArray(i.sizeFromShape(f.shape),g),y=r.data.get(f.dataId).values,b=f.shape[f.shape.length-1],v=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<y.length;e+=b)for(let t=0;t<b;t++){let r=v(e,t);if(0===t)x[r]=d?1:y[r];else{let a=v(e,t-1);x[r]=d?y[a]*x[a]:y[r]*x[a]}}let k=r.makeTensorInfo(f.shape,g,x);if(null!=h){let e=a.getUndoAxesPermutation(h),t=(0,u.transpose)({inputs:{x:k},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(f),t}return k}}}),o("gC4Aw",function(t,r){e(t.exports,"cumsumConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("2MDja"),i=s("jjNRA"),l=s("csahy"),u=s("EOTYn");let p={kernelName:n.Cumsum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{axis:p,exclusive:d,reverse:c}=n;(0,l.assertNotComplex)(s,"cumsum");let h=a.getAxesPermutation([p],s.shape.length),f=s;null!=h&&(f=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:h}}));let m=a.getInnerMostAxes(1,s.shape.length)[0];if(m!==f.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${f.shape.length-1} but got axis=${m}`);let g=(0,o.upcastType)(f.dtype,"int32"),x=i.makeZerosTypedArray(i.sizeFromShape(f.shape),g),y=r.data.get(f.dataId).values,b=f.shape[f.shape.length-1],v=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<y.length;e+=b)for(let t=0;t<b;t++){let r=v(e,t);if(0===t)x[r]=d?0:y[r];else{let a=v(e,t-1);x[r]=d?y[a]+x[a]:y[r]+x[a]}}let k=r.makeTensorInfo(f.shape,g,x);if(null!=h){let e=a.getUndoAxesPermutation(h),t=(0,u.transpose)({inputs:{x:k},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(f),t}return k}}}),o("eWvjj",function(t,r){e(t.exports,"denseBincountConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("34gHf");let o={kernelName:a.DenseBincount,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,weights:o}=t,{size:i,binaryOutput:l}=a;if(1===s.shape.length){let e=r.data.get(s.dataId).values,t=r.data.get(o.dataId).values,a=(0,n.bincountImpl)(e,t,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,a)}if(2===s.shape.length){let e=r.bufferSync(s),t=r.bufferSync(o),a=(0,n.bincountReduceImpl)(e,t,i,l);return r.makeTensorInfo(a.shape,o.dtype,a.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}}}),o("dmhp5",function(t,r){e(t.exports,"depthToSpaceConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jjNRA");let o={kernelName:a.DepthToSpace,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;n.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let l=s.shape[0],u=s.shape[1],p=s.shape[2],d=s.shape[3],c=u*o,h=p*o,f=d/(o*o),m=r.data.get(s.dataId).values,g=new Float32Array(l*c*h*f),x=0;for(let e=0;e<l;++e)for(let t=0;t<c;++t){let r=Math.floor(t/o),a=t%o;for(let t=0;t<h;++t){let n=Math.floor(t/o),s=t%o,i=(a*o+s)*f;for(let t=0;t<f;++t){let a=t+i+d*(n+p*(r+u*e));g[x++]=m[a]}}}return r.makeTensorInfo([l,c,h,f],s.dtype,g)}}}),o("990T6",function(t,r){e(t.exports,"depthwiseConv2dNative",()=>u),e(t.exports,"depthwiseConv2dNativeConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");function u(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,filter:u}=t,{strides:p,pad:d,dilations:c,dimRoundingMode:h}=n;(0,l.assertNotComplex)([s,u],"depthwiseConv2DNative");let f=i.computeStrides(s.shape),m=i.computeStrides(u.shape),g=c;null==g&&(g=[1,1]),i.assert(a.eitherStridesOrDilationsAreOne(p,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${g}'`);let x=a.computeConv2DInfo(s.shape,u.shape,p,g,d,h,!0),{filterHeight:y,filterWidth:b,dilationHeight:v,dilationWidth:k,padInfo:N}=x,C=N.left,T=N.top,S=x.outChannels/x.inChannels,I=new(0,o.TensorBuffer)(x.outShape,s.dtype),w=r.data.get(s.dataId).values,E=r.data.get(u.dataId).values,A=I.values;for(let e=0;e<x.batchSize;++e){let t=e*f[0],r=e*I.strides[0];for(let e=0;e<x.outHeight;++e){let a=r+e*I.strides[1],n=e*x.strideHeight-T;for(let e=0;e<y;++e){let r=n+e*v;if(r<0||r>=x.inHeight)continue;let s=e*m[0],o=t+r*f[1];for(let e=0;e<x.outWidth;++e){let t=a+e*I.strides[2],r=e*x.strideWidth-C;for(let e=0;e<b;++e){let a=r+e*k;if(a<0||a>=x.inWidth)continue;let n=s+e*m[1],i=o+a*x.inChannels,l=t,u=n;for(let e=0;e<x.inChannels;++e){let t=w[i+e];for(let e=0;e<S;++e)A[l+e]+=t*E[u+e];l+=S,u+=S}}}}}}return r.makeTensorInfo(I.shape,I.dtype,I.values)}let p={kernelName:n.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:u}}),o("aIZM5",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropFilterConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("csahy");let l={kernelName:n.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:l}=t,{strides:u,dilations:p,pad:d,dimRoundingMode:c,filterShape:h}=n;(0,i.assertNotComplex)([s,l],"depthwiseConv2dNativeBackpropFilter");let f=a.computeConv2DInfo(s.shape,h,u,p,d,c,!0),{strideHeight:m,strideWidth:g,filterHeight:x,filterWidth:y}=f,b=new(0,o.TensorBuffer)(f.filterShape,"float32"),v=f.padInfo.left,k=f.padInfo.top,N=f.outChannels/f.inChannels,C=r.data.get(s.dataId).values,T=new(0,o.TensorBuffer)(s.shape,s.dtype,C),S=r.data.get(l.dataId).values,I=new(0,o.TensorBuffer)(l.shape,l.dtype,S);for(let e=0;e<x;++e){let t=Math.max(0,Math.ceil((k-e)/m)),r=Math.min(f.outHeight,(f.inHeight+k-e)/m);for(let a=0;a<y;++a){let n=Math.max(0,Math.ceil((v-a)/g)),s=Math.min(f.outWidth,(f.inWidth+v-a)/g);for(let o=0;o<f.outChannels;++o){let i=Math.trunc(o/N),l=o%N,u=0;for(let l=0;l<f.batchSize;++l)for(let p=t;p<r;++p){let t=e+p*m-k;for(let e=n;e<s;++e){let r=a+e*g-v;u+=T.get(l,t,r,i)*I.get(l,p,e,o)}}b.set(u,e,a,i,l)}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}}}),o("dFziG",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropInputConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("9jCh7"),i=s("jjNRA"),l=s("csahy");let u={kernelName:n.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:u}=t,{strides:p,dilations:d,pad:c,dimRoundingMode:h,inputShape:f}=n;(0,l.assertNotComplex)([s,u],"depthwiseConv2DNativeBackpropInput");let m=i.computeStrides(s.shape),g=i.computeStrides(u.shape),x=a.computeConv2DInfo(f,u.shape,p,d,c,h,!0),y=new(0,o.TensorBuffer)(x.inShape,"float32"),b=y.values,[v,k,N]=y.strides,C=r.data.get(s.dataId).values,[T,S,I]=m,w=r.data.get(u.dataId).values,[E,A,R]=g,{batchSize:P,filterHeight:$,filterWidth:F,inChannels:B,inHeight:D,inWidth:M,outChannels:O,outHeight:L,outWidth:_,strideHeight:V,strideWidth:G}=x,z=$-1-x.padInfo.top,W=F-1-x.padInfo.left,U=O/B;for(let e=0;e<P;++e)for(let t=0;t<B;++t)for(let r=0;r<D;++r){let a=r-z,n=Math.max(0,Math.ceil(a/V)),s=Math.min(L,($+a)/V);for(let o=0;o<M;++o){let i=o-W,l=Math.max(0,Math.ceil(i/G)),u=Math.min(_,(F+i)/G),p=0;for(let r=n;r<s;++r){let n=r*V-a;for(let a=l;a<u;++a){let s=a*G-i,o=T*e+S*r+I*a,l=E*($-1-n)+A*(F-1-s)+R*t;for(let e=0;e<U;++e)p+=C[o+(t*U+e)]*w[l+e]}}b[v*e+k*r+N*o+t]=p}}return r.makeTensorInfo(y.shape,y.dtype,y.values)}}}),o("7KOW5",function(t,r){e(t.exports,"diagConfig",()=>i),s("i64bB");var a=s("iG87S"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.Diag,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,s=o.sizeFromShape(n.shape),i=r.data.get(n.dataId).values,l=(0,a.buffer)([s,s],n.dtype),u=l.values;for(let e=0;e<i.length;e++)u[e*s+e]=i[e];let p=[...n.shape,...n.shape];return r.makeTensorInfo(p,l.dtype,l.values)}}}),o("hIoyp",function(t,r){e(t.exports,"dilation2DConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:s}=e,{strides:i,pad:l,dilations:u}=r,p=t.data.get(n.dataId).values,d=n.shape.length,c=t.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:x,outHeight:y,outWidth:b,padInfo:v,strideHeight:k,strideWidth:N,filterHeight:C,filterWidth:T,dilationHeight:S,dilationWidth:I,outShape:w}=a.computeDilation2DInfo(n.shape,s.shape,i,l,"NHWC",u),E=o.sizeFromShape(w),A=w.length,R=o.getArrayFromDType(n.dtype,E);for(let e=0;e<f;++e)for(let t=0;t<y;++t){let r=t*k-v.top;for(let a=0;a<b;++a){let i=a*N-v.left;for(let l=0;l<x;++l){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<C;++t){let a=r+t*S;if(a>=0&&a<m)for(let r=0;r<T;++r){let f=i+r*I;if(f>=0&&f<g){let i=o.locToIndex([e,a,f,l],d,o.computeStrides(n.shape)),m=o.locToIndex([t,r,l],h,o.computeStrides(s.shape)),g=p[i]+c[m];g>u&&(u=g)}}}R[o.locToIndex([e,t,a,l],A,o.computeStrides(w))]=u}}}return{dataId:t.write(o.toTypedArray(R,n.dtype),w,n.dtype),shape:w,dtype:n.dtype}}}}),o("jxHwQ",function(t,r){e(t.exports,"dilation2DBackpropFilterConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:s,filter:i,dy:l}=e,{strides:u,pad:p,dilations:d}=r,c=o.toNestedArray(s.shape,t.data.get(s.dataId).values),h=o.toNestedArray(i.shape,t.data.get(i.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:x,outHeight:y,outWidth:b,padInfo:v,strideHeight:k,strideWidth:N,filterHeight:C,filterWidth:T,dilationHeight:S,dilationWidth:I,outShape:w}=a.computeDilation2DInfo(s.shape,i.shape,u,p,"NHWC",d);o.assert(l.rank===w.length,()=>`Error in ${n.Dilation2DBackpropFilter}, dy must have the same rank as output ${w.length}, but got ${l.rank}`);let E=o.toNestedArray(w,t.data.get(l.dataId).values),A=o.makeZerosNestedTypedArray(i.shape,i.dtype);for(let e=0;e<f;++e)for(let t=0;t<y;++t){let r=t*k-v.top;for(let a=0;a<b;++a){let n=a*N-v.left;for(let s=0;s<x;++s){let o=Number.MIN_SAFE_INTEGER,i=0,l=0;for(let t=0;t<C;++t){let a=r+t*S;if(a>=0&&a<m)for(let r=0;r<T;++r){let u=n+r*I;if(u>=0&&u<g){let n=c[e][a][u][s]+h[t][r][s];n>o&&(o=n,i=t,l=r)}}}A[i][l][s]+=E[e][t][a][s]}}}return{dataId:t.write(o.toTypedArray(A,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}}}),o("2Y9GH",function(t,r){e(t.exports,"dilation2DBackpropInputConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:s,filter:i,dy:l}=e,{strides:u,pad:p,dilations:d}=r,c=o.toNestedArray(s.shape,t.data.get(s.dataId).values),h=o.toNestedArray(i.shape,t.data.get(i.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:x,outHeight:y,outWidth:b,padInfo:v,strideHeight:k,strideWidth:N,filterHeight:C,filterWidth:T,dilationHeight:S,dilationWidth:I,outShape:w}=a.computeDilation2DInfo(s.shape,i.shape,u,p,"NHWC",d);o.assert(l.rank===w.length,()=>`Error in ${n.Dilation2DBackpropInput}, dy must have the same rank as output ${w.length}, but got ${l.rank}`);let E=o.toNestedArray(w,t.data.get(l.dataId).values),A=o.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<f;++e)for(let t=0;t<y;++t){let r=t*k-v.top;for(let a=0;a<b;++a){let n=a*N-v.left;for(let s=0;s<x;++s){let o=Number.MIN_SAFE_INTEGER,i=r<0?0:r,l=n<0?0:n;for(let t=0;t<C;++t){let a=r+t*S;if(a>=0&&a<m)for(let r=0;r<T;++r){let u=n+r*I;if(u>=0&&u<g){let n=c[e][a][u][s]+h[t][r][s];n>o&&(o=n,i=a,l=u)}}}A[e][i][l][s]+=E[e][t][a][s]}}}return{dataId:t.write(o.toTypedArray(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}}}),o("dFawg",function(t,r){e(t.exports,"drawConfig",()=>a),s("i64bB");let a={kernelName:s("hl418").Draw,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{image:n}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:l}=o||{},u=(null==l?void 0:l.alpha)||1,p=(null==i?void 0:i.contextType)||"2d";if("2d"!==p)throw Error(`Context type ${i.contextType} is not supported by the CPU backend.`);let d=s.getContext(p,(null==i?void 0:i.contextAttributes)||{});if(null==d)throw Error(`Could not get the context with ${p} type.`);let[c,h]=n.shape.slice(0,2),f=2===n.shape.length?1:n.shape[2],m=r.data.get(n.dataId).values,g="float32"===n.dtype?255:1,x=new Uint8ClampedArray(h*c*4);for(let e=0;e<c*h;++e){let t=[0,0,0,255*u];for(let r=0;r<f;r++){let a=m[e*f+r];if("float32"===n.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[r]=a*g}let r=4*e;x[r+0]=Math.round(t[0]),x[r+1]=Math.round(t[1]),x[r+2]=Math.round(t[2]),x[r+3]=Math.round(t[3])}s.width=h,s.height=c;let y=new ImageData(x,h,c);return d.putImageData(y,0,0),n}}}),o("a65ub",function(t,r){e(t.exports,"einsumConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("gQOIy"),l=s("eL8rV"),u=s("b9JjM"),p=s("EOTYn");let d={kernelName:n.Einsum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:s}=n,{allDims:d,summedDims:c,idDims:h}=a.decodeEinsumEquation(s,t.length);a.checkEinsumDimSizes(d.length,h,t);let{path:f,steps:m}=a.getEinsumComputePath(c,h),g=m.length,x=null,y=d.length,b=[];for(let e=0;e<g;++e){for(let n of m[e]){let e,{permutationIndices:s,expandDims:u}=a.getEinsumPermutation(y,h[n]);a.isIdentityPermutation(s)?e=t[n]:(e=(0,p.transpose)({inputs:{x:t[n]},backend:r,attrs:{perm:s}}),b.push(e));let d=e.shape.slice();for(let e=0;e<u.length;++e)d.splice(u[e],0,1);o.arraysEqual(e.shape,d)||(e=(0,l.reshape)({inputs:{x:e},backend:r,attrs:{shape:d}}),b.push(e)),null===x?x=e:(x=(0,i.multiply)({inputs:{a:e,b:x},backend:r}),b.push(x))}e<g-1&&(f[e]>=0&&(x=(0,u.sum)({inputs:{x:x},backend:r,attrs:{axis:f[e]-(d.length-y),keepDims:!1}}),b.push(x)),y--)}for(let e of b)e!==x&&r.disposeIntermediateTensorInfo(e);return x}}}),o("gQOIy",function(t,r){e(t.exports,"multiplyImpl",()=>i),e(t.exports,"multiply",()=>u),e(t.exports,"multiplyConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e*t),l=(0,o.createComplexBinaryKernelImpl)((e,t,r,a)=>({real:e*r-t*a,imag:e*a+t*r})),u=(0,o.binaryKernelFunc)(a.Multiply,i,l),p={kernelName:a.Multiply,backendName:"cpu",kernelFunc:u}}),o("b9JjM",function(t,r){e(t.exports,"sum",()=>h),e(t.exports,"sumConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("3THkf"),u=s("7LLjQ"),p=s("lcqBv"),d=s("eL8rV"),c=s("EOTYn");function h(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:h}=r,{axis:f,keepDims:m}=s;(0,i.assertNotComplex)(h,"sum");let g=(t="bool"===h.dtype?(0,u.cast)({inputs:{x:h},backend:n,attrs:{dtype:"int32"}}):(0,p.identity)({inputs:{x:h},backend:n})).shape.length,x=o.parseAxisParam(f,t.shape),y=a.getAxesPermutation(x,g),b=x,v=t;null!=y&&(v=(0,c.transpose)({inputs:{x:t},backend:n,attrs:{perm:y}}),b=a.getInnerMostAxes(b.length,g)),a.assertAxesAreInnerMostDims("sum",b,v.shape.length);let[k,N]=a.computeOutAndReduceShapes(v.shape,b),C=a.upcastType(v.dtype,"int32"),T=(0,l.zeros)(n,k,C),S=o.sizeFromShape(N),I=n.data.get(T.dataId).values,w=n.data.get(v.dataId).values;for(let e=0;e<I.length;++e){let t=e*S,r=0;for(let e=0;e<S;++e)r+=w[t+e];I[e]=r}if(m){let e=a.expandShapeToKeepDim(T.shape,x),t=T;T=(0,d.reshape)({inputs:{x:T},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(t),null!=y&&n.disposeIntermediateTensorInfo(v),T}let f={kernelName:n.Sum,backendName:"cpu",kernelFunc:h}}),o("1UNyW",function(t,r){e(t.exports,"eluGradConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{dy:a,y:s}=t;(0,o.assertNotComplex)([a,s],"eluGrad");let i=new Float32Array(n.sizeFromShape(s.shape)),l=r.data.get(s.dataId).values,u=r.data.get(a.dataId).values;for(let e=0;e<l.length;++e){let t=l[e];t>=0?i[e]=u[e]:i[e]=u[e]*(t+1)}return r.makeTensorInfo(s.shape,"float32",i)}}}),o("diO4l",function(t,r){e(t.exports,"equalImpl",()=>i),e(t.exports,"equal",()=>l),e(t.exports,"equalConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e===t)),l=(0,o.binaryKernelFunc)(a.Equal,i,null,"bool"),u={kernelName:a.Equal,backendName:"cpu",kernelFunc:l}}),o("kqQPZ",function(t,r){e(t.exports,"erfConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("l6afd");let i=a.ERF_P,l=a.ERF_A1,u=a.ERF_A2,p=a.ERF_A3,d=a.ERF_A4,c=a.ERF_A5,h=(0,o.unaryKernelFunc)(n.Erf,e=>{let t=Math.sign(e),r=Math.abs(e),a=1/(1+i*r);return t*(1-((((c*a+d)*a+p)*a+u)*a+l)*a*Math.exp(-r*r))}),f={kernelName:n.Erf,backendName:"cpu",kernelFunc:h}}),o("2ANRn",function(t,r){e(t.exports,"expImpl",()=>i),e(t.exports,"exp",()=>l),e(t.exports,"expConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.exp(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Exp,i,"float32"),u={kernelName:a.Exp,backendName:"cpu",kernelFunc:l}}),o("YMdKk",function(t,r){e(t.exports,"expandDims",()=>i),e(t.exports,"expandDimsConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("eL8rV");function i(e){let{inputs:t,backend:r,attrs:a}=e,{input:s}=t,{dim:i}=a,l=s.shape.length,u=s.shape.slice(),p=i;return i<0&&(n.assert(-(l+1)<=i,()=>`Axis must be in the interval [${-(l+1)}, ${l}]`),p=l+i+1),u.splice(p,0,1),(0,o.reshape)({inputs:{x:s},backend:r,attrs:{shape:u}})}let l={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:i}}),o("jqUkN",function(t,r){e(t.exports,"expm1Impl",()=>i),e(t.exports,"expm1Config",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.expm1(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Expm1,i),u={kernelName:a.Expm1,backendName:"cpu",kernelFunc:l}}),o("ahJ6Y",function(t,r){e(t.exports,"fftConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("8ImkJ"),i=s("eL8rV");let l={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:a}=t,s=n.sizeFromShape(a.shape),l=a.shape[a.shape.length-1],u=(0,i.reshape)({inputs:{x:a},backend:r,attrs:{shape:[s/l,l]}}),p=(0,o.fftBatch)(u,!1,r),d=(0,i.reshape)({inputs:{x:p},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(p),d}}}),o("8ImkJ",function(t,r){e(t.exports,"fftBatch",()=>g),s("i64bB");var a=s("7MaPk"),n=s("jjNRA"),o=s("e8yCG"),i=s("bwMVz"),l=s("4kUws"),u=s("lcqBv"),p=s("32coj"),d=s("gQOIy"),c=s("linqd"),h=s("lI2hV"),f=s("aYBRE"),m=s("aT9VE");function g(e,t,r){let s=e.shape,g=s[0],x=s[1],y=r.data.get(e.dataId),b=y.complexTensorInfos.real,v=y.complexTensorInfos.imag,k=[g,x],N=n.sizeFromShape(k),C=n.getTypedArrayFromDType("float32",N),T=n.getTypedArrayFromDType("float32",N);for(let e=0;e<g;e++){let s=(0,f.slice)({inputs:{x:b},backend:r,attrs:{begin:[e,0],size:[1,x]}}),g=(0,f.slice)({inputs:{x:v},backend:r,attrs:{begin:[e,0],size:[1,x]}}),y=(0,i.complex)({inputs:{real:s,imag:g},backend:r}),{real:k,imag:N}=function(e,t,r){var s;let f=n.sizeFromShape(e.shape),g=r.data.get(e.dataId),x=r.data.get(g.complexTensorInfos.real.dataId).values,y=r.data.get(g.complexTensorInfos.imag.dataId).values;if(((s=f)&s-1)==0){let s=function e(t,r,n,s,u){if(1===n)return{real:t,imag:r};let h=a.mergeRealAndImagArrays(t,r),f=n/2,g=a.complexWithEvenIndex(h),x=g.real,y=g.imag,b=[x.length],v=u.makeTensorInfo(b,"float32",x),k=u.makeTensorInfo(b,"float32",y),N=(0,i.complex)({inputs:{real:v,imag:k},backend:u}),C=a.complexWithOddIndex(h),T=C.real,S=C.imag,I=[T.length],w=u.makeTensorInfo(I,"float32",T),E=u.makeTensorInfo(I,"float32",S),A=(0,i.complex)({inputs:{real:w,imag:E},backend:u}),R=e(x,y,f,s,u),P=R.real,$=R.imag,F=[P.length],B=u.makeTensorInfo(F,"float32",P),D=u.makeTensorInfo(F,"float32",$),M=(0,i.complex)({inputs:{real:B,imag:D},backend:u}),O=e(T,S,f,s,u),L=O.real,_=O.imag,V=[L.length],G=u.makeTensorInfo(V,"float32",L),z=u.makeTensorInfo(V,"float32",_),W=(0,i.complex)({inputs:{real:G,imag:z},backend:u}),U=a.exponents(n,s),j=[U.real.length],q=u.makeTensorInfo(j,"float32",U.real),H=u.makeTensorInfo(j,"float32",U.imag),K=(0,i.complex)({inputs:{real:q,imag:H},backend:u}),X=(0,d.multiply)({inputs:{a:K,b:W},backend:u}),Y=(0,o.add)({inputs:{a:M,b:X},backend:u}),Z=(0,m.sub)({inputs:{a:M,b:X},backend:u}),Q=(0,c.real)({inputs:{input:Y},backend:u}),J=(0,c.real)({inputs:{input:Z},backend:u}),ee=(0,p.imag)({inputs:{input:Y},backend:u}),et=(0,p.imag)({inputs:{input:Z},backend:u}),er=(0,l.concat)({inputs:[Q,J],backend:u,attrs:{axis:0}}),ea=(0,l.concat)({inputs:[ee,et],backend:u,attrs:{axis:0}}),en=u.data.get(er.dataId).values,es=u.data.get(ea.dataId).values;return u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(k),u.disposeIntermediateTensorInfo(N),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(E),u.disposeIntermediateTensorInfo(A),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(D),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(G),u.disposeIntermediateTensorInfo(z),u.disposeIntermediateTensorInfo(W),u.disposeIntermediateTensorInfo(q),u.disposeIntermediateTensorInfo(H),u.disposeIntermediateTensorInfo(K),u.disposeIntermediateTensorInfo(X),u.disposeIntermediateTensorInfo(Y),u.disposeIntermediateTensorInfo(Z),u.disposeIntermediateTensorInfo(Q),u.disposeIntermediateTensorInfo(ee),u.disposeIntermediateTensorInfo(J),u.disposeIntermediateTensorInfo(et),u.disposeIntermediateTensorInfo(er),u.disposeIntermediateTensorInfo(ea),{real:en,imag:es}}(x,y,f,t,r),g=[e.shape[0],e.shape[1]];if(t){let e=r.makeTensorInfo(g,"float32",s.real),t=r.makeTensorInfo(g,"float32",s.imag),a=r.makeTensorInfo([],"float32",n.createScalarValue(f,"float32")),o=(0,u.identity)({inputs:{x:a},backend:r}),i=h.realDivConfig.kernelFunc({inputs:{a:e,b:a},backend:r}),l=h.realDivConfig.kernelFunc({inputs:{a:t,b:o},backend:r}),p=r.data.get(i.dataId).values,d=r.data.get(l.dataId).values;return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),{real:p,imag:d}}return s}{let e=function(e,t,r){let n=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let n=0;n<t;n++){let l=a.exponent(s*n,t,r),u=a.getComplexWithIndex(e,n);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}r&&(o/=t,i/=t),a.assignToTypedArray(n,o,i,s)}return n}(a.mergeRealAndImagArrays(x,y),f,t);return a.splitRealAndImagArrays(e)}}(y,t,r),S=a.mergeRealAndImagArrays(k,N);for(let t=0;t<x;t++){let r=a.getComplexWithIndex(S,t);C[e*x+t]=r.real,T[e*x+t]=r.imag}r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y)}let S=r.makeTensorInfo(k,"float32",C),I=r.makeTensorInfo(k,"float32",T),w=(0,i.complex)({inputs:{real:S,imag:I},backend:r});return r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(I),w}}),o("lI2hV",function(t,r){e(t.exports,"div",()=>l),e(t.exports,"realDivConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e/t),l=(0,o.binaryKernelFunc)(a.RealDiv,i),u={kernelName:a.RealDiv,backendName:"cpu",kernelFunc:l}}),o("aT9VE",function(t,r){e(t.exports,"subImpl",()=>i),e(t.exports,"sub",()=>u),e(t.exports,"subConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e-t),l=(0,o.createComplexBinaryKernelImpl)((e,t,r,a)=>({real:e-r,imag:t-a})),u=(0,o.binaryKernelFunc)(a.Sub,i,l),p={kernelName:a.Sub,backendName:"cpu",kernelFunc:u}}),o("gj86F",function(t,r){e(t.exports,"fill",()=>o),e(t.exports,"fillConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA");function o(e){var t,r,a;let{backend:s,attrs:o}=e,{shape:i,value:l,dtype:u}=o,p=u||n.inferDtype(l),d=n.getArrayFromDType(p,n.sizeFromShape(i));return t=d,r=l,a=0,t.fill(r),s.makeTensorInfo(i,p,d)}let i={kernelName:a.Fill,backendName:"cpu",kernelFunc:o}}),o("lCuWf",function(t,r){e(t.exports,"flipLeftRightConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jjNRA");let o={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:a}=e,s=n.getTypedArrayFromDType(a.dtype,n.sizeFromShape(a.shape)),[o,i,l,u]=a.shape,p=r.data.get(a.dataId).values;for(let e=0;e<o;e++){let t=e*l*i*u;for(let e=0;e<i;e++){let r=l*u*e;for(let e=0;e<l;e++){let a=e*u;for(let n=0;n<u;n++){let o=Math.round(l-e-1),i=t+r+a+n,d=p[i];o>=0&&o<l&&(d=p[t+r+o*u+n]),s[i]=d}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}}}),o("Jvx9v",function(t,r){e(t.exports,"floorImpl",()=>i),e(t.exports,"floorConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.floor(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Floor,i),u={kernelName:a.Floor,backendName:"cpu",kernelFunc:l}}),o("hj1kT",function(t,r){e(t.exports,"floorDivImpl",()=>i),e(t.exports,"floorDivConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>Math.floor(e/t)),l=(0,o.binaryKernelFunc)(a.FloorDiv,i,null,"int32"),u={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:l}}),o("fGr9Q",function(t,r){e(t.exports,"fusedConv2DConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3XZpz"),o=s("e8yCG"),i=s("4qhwE"),l=s("eL8rV");let u={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,filter:u,bias:p,preluActivationWeights:d}=t,{strides:c,pad:h,dataFormat:f,dilations:m,dimRoundingMode:g,activation:x,leakyreluAlpha:y}=a,b=(0,i.conv2D)({inputs:{x:s,filter:u},backend:r,attrs:{strides:c,pad:h,dataFormat:f,dilations:m,dimRoundingMode:g}});if(p){let e=b;if("NCHW"===f&&1===p.shape.length&&1!==p.shape[0]){let e=(0,l.reshape)({inputs:{x:p},backend:r,attrs:{shape:[p.shape[0],1,1]}});b=(0,o.add)({inputs:{a:b,b:e},backend:r}),r.disposeIntermediateTensorInfo(e)}else b=(0,o.add)({inputs:{a:b,b:p},backend:r});r.disposeIntermediateTensorInfo(e)}if(x){let e=b;if("NCHW"===f&&"prelu"===x&&1===d.shape.length&&1!==d.shape[0]){let e=(0,l.reshape)({inputs:{x:d},backend:r,attrs:{shape:[d.shape[0],1,1]}});b=(0,n.applyActivation)(r,b,x,e,y),r.disposeIntermediateTensorInfo(e)}else b=(0,n.applyActivation)(r,b,x,d,y);r.disposeIntermediateTensorInfo(e)}return b}}}),o("eykWF",function(t,r){e(t.exports,"fusedDepthwiseConv2DConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3XZpz"),o=s("e8yCG"),i=s("990T6");let l={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,filter:l,bias:u,preluActivationWeights:p}=t,{strides:d,pad:c,dataFormat:h,dilations:f,dimRoundingMode:m,activation:g,leakyreluAlpha:x}=a,y=(0,i.depthwiseConv2dNative)({inputs:{x:s,filter:l},backend:r,attrs:{strides:d,pad:c,dataFormat:h,dilations:f,dimRoundingMode:m}});if(u){let e=y;y=(0,o.add)({inputs:{a:y,b:u},backend:r}),r.disposeIntermediateTensorInfo(e)}if(g){let e=y;y=(0,n.applyActivation)(r,y,g,p,x),r.disposeIntermediateTensorInfo(e)}return y}}}),o("dLMis",function(t,r){e(t.exports,"gatherNdConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("cC9SN");let l={kernelName:n.GatherNd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:s}=t,l=o.sizeFromShape(n.shape),u=s.shape,p=u[u.length-1],[d,c,h,f]=a.prepareAndValidate(n,s);if(0===c)return r.makeTensorInfo(d,n.dtype,[]);let m=r.data.get(s.dataId).values,g=r.bufferSync(n),x=(0,i.gatherNdImpl)(m,g,n.dtype,c,p,h,f,n.shape,l);return r.makeTensorInfo(d,n.dtype,x.values)}}}),o("cC9SN",function(t,r){e(t.exports,"gatherNdImpl",()=>n),s("i64bB");var a=s("iG87S");function n(e,t,r,n,s,o,i,l,u){let p=(0,a.buffer)([n,o],r);for(let r=0;r<n;r++){let a=[],n=0;for(let t=0;t<s;t++){let o=e[r*s+t];n+=o*i[t],a.push(o)}if(n<0||n>=u/o)throw Error(`Invalid indices: ${a} does not index into ${l}`);for(let e=0;e<o;e++)p.values[r*o+e]=t.get(...t.indexToLoc(n*o+e))}return p}}),o("aTb92",function(t,r){e(t.exports,"gatherV2Config",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("hNUKd"),u=s("eL8rV");let p={kernelName:n.GatherV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,indices:p}=t,{axis:d,batchDims:c}=n;(0,i.assertNotComplex)([s,p],"gatherV2");let h=o.parseAxisParam(d,s.shape)[0],f=r.data.get(p.dataId).values,m=s.shape[h];for(let e=0;e<f.length;++e){let t=f[e];o.assert(t<=m-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${m-1}]`)}let g=c;null==c&&(g=0);let x=o.sizeFromShape(p.shape),y=a.segment_util.collectGatherOpShapeInfo(s,p,h,g),b=(0,u.reshape)({inputs:{x:s},backend:r,attrs:{shape:[y.batchSize,y.outerSize,y.dimSize,y.sliceSize]}}),v=(0,u.reshape)({inputs:{x:p},backend:r,attrs:{shape:[y.batchSize,x/y.batchSize]}}),k=[y.batchSize,y.outerSize,x/y.batchSize,y.sliceSize],N=r.bufferSync(v),C=r.bufferSync(b),T=(0,l.gatherV2Impl)(C,N,k);return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.makeTensorInfo(y.outputShape,T.dtype,T.values)}}}),o("hNUKd",function(t,r){e(t.exports,"gatherV2Impl",()=>n),s("i64bB");var a=s("iG87S");function n(e,t,r){let n=(0,a.buffer)(r,e.dtype);for(let r=0;r<n.size;++r){let a=n.indexToLoc(r).slice(),s=a[0],o=a[2],i=t.locToIndex([s,o]);a[2]=t.values[i];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(n.values[r]=e.values[l])}return n}}),o("2Apjw",function(t,r){e(t.exports,"greaterImpl",()=>i),e(t.exports,"greaterConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e>t)),l=(0,o.binaryKernelFunc)(a.Greater,i,null,"bool"),u={kernelName:a.Greater,backendName:"cpu",kernelFunc:l}}),o("9yHtq",function(t,r){e(t.exports,"greaterEqualImpl",()=>i),e(t.exports,"greaterEqualConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e>=t)),l=(0,o.binaryKernelFunc)(a.GreaterEqual,i,null,"bool"),u={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:l}}),o("568uH",function(t,r){e(t.exports,"ifftConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("8ImkJ"),i=s("eL8rV");let l={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:a}=t,s=n.sizeFromShape(a.shape),l=a.shape[a.shape.length-1],u=(0,i.reshape)({inputs:{x:a},backend:r,attrs:{shape:[s/l,l]}}),p=(0,o.fftBatch)(u,!0,r),d=(0,i.reshape)({inputs:{x:p},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(p),d}}}),o("1u1a9",function(t,r){e(t.exports,"isFiniteConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.IsFinite,e=>+!!Number.isFinite(e),"bool"),o={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:n}}),o("gvn2E",function(t,r){e(t.exports,"isInfConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.IsInf,e=>+(Math.abs(e)===1/0),"bool"),o={kernelName:a.IsInf,backendName:"cpu",kernelFunc:n}}),o("g4tDm",function(t,r){e(t.exports,"isNaNConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.IsNan,e=>+!!Number.isNaN(e),"bool"),o={kernelName:a.IsNan,backendName:"cpu",kernelFunc:n}}),o("jJNGT",function(t,r){e(t.exports,"lessImpl",()=>i),e(t.exports,"lessConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e<t)),l=(0,o.binaryKernelFunc)(a.Less,i,null,"bool"),u={kernelName:a.Less,backendName:"cpu",kernelFunc:l}}),o("bwE16",function(t,r){e(t.exports,"lessEqualImpl",()=>i),e(t.exports,"lessEqualConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e<=t)),l=(0,o.binaryKernelFunc)(a.LessEqual,i,null,"bool"),u={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:l}}),o("1yK9J",function(t,r){e(t.exports,"linSpaceConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("6U5ue");let o={kernelName:a.LinSpace,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:a,stop:s,num:o}=r,i=(0,n.linSpaceImpl)(a,s,o);return t.makeTensorInfo([i.length],"float32",i)}}}),o("6U5ue",function(t,r){e(t.exports,"linSpaceImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r){let n=(t-e)/(r-1),s=a.makeZerosTypedArray(r,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}}),o("2La7K",function(t,r){e(t.exports,"logImpl",()=>i),e(t.exports,"logConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.log(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Log,i),u={kernelName:a.Log,backendName:"cpu",kernelFunc:l}}),o("ks7nX",function(t,r){e(t.exports,"log1pConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Log1p,e=>Math.log1p(e)),o={kernelName:a.Log1p,backendName:"cpu",kernelFunc:n}}),o("sLbSL",function(t,r){e(t.exports,"logicalAndConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e&&t),l=(0,o.binaryKernelFunc)(a.LogicalAnd,i,null,"bool"),u={kernelName:a.LogicalAnd,backendName:"cpu",kernelFunc:l}}),o("g3KIg",function(t,r){e(t.exports,"logicalNotConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.LogicalNot,e=>+!e,"bool"),o={kernelName:a.LogicalNot,backendName:"cpu",kernelFunc:n}}),o("6ZAdn",function(t,r){e(t.exports,"logicalOrConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>e||t),l=(0,o.binaryKernelFunc)(a.LogicalOr,i,null,"bool"),u={kernelName:a.LogicalOr,backendName:"cpu",kernelFunc:l}}),o("8drS8",function(t,r){e(t.exports,"LRNConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:l,alpha:u,beta:p}=a;(0,o.assertNotComplex)(s,"LRN");let d=s.shape[3],c=d-1,h=r.data.get(s.dataId).values,f=n.sizeFromShape(s.shape),m=new Float32Array(f);for(let e=0;e<f;e++){let t=function(e){let t=e%d,r=e-t+Math.max(0,t-i),a=e-t+Math.min(t+i,c),n=0;for(;r<=a;r++){let e=h[r];n+=e*e}return n}(e),r=h[e]*Math.pow(l+u*t,-p);m[e]=r}return r.makeTensorInfo(s.shape,s.dtype,m)}}}),o("34zOX",function(t,r){e(t.exports,"LRNGradConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,y:i,dy:l}=t,{depthRadius:u,bias:p,alpha:d,beta:c}=a;(0,o.assertNotComplex)(l,"LRNGrad");let h=n.sizeFromShape(l.shape),f=l.shape[3],m=r.data.get(l.dataId).values,g=r.data.get(s.dataId).values,x=r.data.get(i.dataId).values,y=new Float32Array(h);for(let e=0;e<h;e++){let t=e%f,r=e-t+Math.max(0,t-u),a=e-t+Math.min(f,t+u+1),n=0;for(let e=r;e<a;e++)n+=Math.pow(g[e],2);n=d*n+p;for(let t=r;t<a;t++){let r=-2*d*c*g[t]*x[e]/n;e===t&&(r+=Math.pow(n,-c)),r*=m[e],y[t]+=r}}return r.makeTensorInfo(l.shape,s.dtype,y)}}}),o("7BXZf",function(t,r){e(t.exports,"max",()=>p),e(t.exports,"maxConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("cjSsc"),u=s("4m8st");function p(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{reductionIndices:p,keepDims:d}=n,c=s.shape,h=c.length,f=o.parseAxisParam(p,c),m=f,g=a.getAxesPermutation(m,h),x=r.data.get(s.dataId).values;if(null!=g){let e=Array(h);for(let t=0;t<e.length;t++)e[t]=c[g[t]];x=(0,u.transposeImpl)(x,c,s.dtype,g,e),m=a.getInnerMostAxes(m.length,h),c=e}(0,i.assertNotComplex)(s,"max"),a.assertAxesAreInnerMostDims("max",m,h);let[y,b]=a.computeOutAndReduceShapes(c,m),v=o.sizeFromShape(b),k=(0,l.maxImpl)(x,v,y,s.dtype),N=r.write(k,y,s.dtype),C=y;return d&&(C=a.expandShapeToKeepDim(y,f)),{dataId:N,shape:C,dtype:s.dtype}}let d={kernelName:n.Max,backendName:"cpu",kernelFunc:p}}),o("cjSsc",function(t,r){e(t.exports,"maxImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r,n){let s=a.getTypedArrayFromDType(n,a.sizeFromShape(r));for(let r=0;r<s.length;++r){let a=r*t,n=e[a];for(let r=0;r<t;++r){let t=e[a+r];(Number.isNaN(t)||t>n)&&(n=t)}s[r]=n}return s}}),o("IzL7H",function(t,r){e(t.exports,"maximumImpl",()=>i),e(t.exports,"maximumConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>Math.max(e,t)),l=(0,o.binaryKernelFunc)(a.Maximum,i),u={kernelName:a.Maximum,backendName:"cpu",kernelFunc:l}}),o("jrpMF",function(t,r){e(t.exports,"maxPoolConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("k15kg"),u=s("lcqBv");let p={kernelName:n.MaxPool,backendName:"cpu",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:p}=r;(0,i.assertNotComplex)(p,"maxPool");let{filterSize:d,strides:c,pad:h,dimRoundingMode:f}=s;o.assert(a.eitherStridesOrDilationsAreOne(c,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`);let m=a.computePool2DInfo(p.shape,d,c,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.arraysEqual(m.inShape,m.outShape))t=(0,u.identity)({inputs:{x:p},backend:n});else{let e=n.data.get(p.dataId).values,r=o.computeStrides(p.shape),a=(0,l.pool)(e,p.shape,p.dtype,r,m,"max");t=n.makeTensorInfo(m.outShape,p.dtype,a.values)}return t}}}),o("hnBgh",function(t,r){e(t.exports,"maxPool3DConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("k15kg");let u={kernelName:n.MaxPool3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{filterSize:u,strides:p,pad:d,dimRoundingMode:c,dataFormat:h}=n;(0,i.assertNotComplex)(s,"maxPool3d");let f=a.computePool3DInfo(s.shape,u,p,1,d,c,h),m=r.data.get(s.dataId).values,g=(0,l.pool3d)(m,s.shape,s.dtype,o.computeStrides(s.shape),f,"max");return r.makeTensorInfo(g.shape,"float32",g.values)}}}),o("05cCa",function(t,r){e(t.exports,"maxPool3DGradConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("iG87S"),o=s("hl418"),i=s("csahy"),l=s("k15kg");let u={kernelName:o.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:s}=e,{dy:o,input:u}=t,{filterSize:p,strides:d,pad:c,dimRoundingMode:h}=s;(0,i.assertNotComplex)([o,u],"maxPool3DGrad");let f=a.computePool3DInfo(u.shape,p,d,1,c,h),m=r.bufferSync(u),g=(0,l.maxPool3dPositions)(m,f),x=f.strideDepth,y=f.strideHeight,b=f.strideWidth,v=f.dilationDepth,k=f.dilationHeight,N=f.dilationWidth,C=f.effectiveFilterDepth,T=f.effectiveFilterHeight,S=f.effectiveFilterWidth,I=C-1-f.padInfo.front,w=S-1-f.padInfo.left,E=T-1-f.padInfo.top,A=(0,n.buffer)(u.shape,"float32"),R=r.bufferSync(o);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let r=0;r<f.inDepth;++r)for(let a=0;a<f.inHeight;++a)for(let n=0;n<f.inWidth;++n){let s=r-I,o=a-E,i=n-w,l=0;for(let r=0;r<C;r+=v){let a=(s+r)/x;if(!(a<0)&&!(a>=f.outDepth)&&Math.floor(a)===a)for(let n=0;n<T;n+=k){let s=(o+n)/y;if(!(s<0)&&!(s>=f.outHeight)&&Math.floor(s)===s)for(let o=0;o<S;o+=N){let u=(i+o)/b;if(u<0||u>=f.outWidth||Math.floor(u)!==u)continue;let p=+(C*T*S-1-g.get(e,a,s,u,t)===r*T*S+n*S+o);0!==p&&(l+=R.get(e,a,s,u,t)*p)}}}A.set(l,e,r,a,n,t)}return r.makeTensorInfo(A.shape,A.dtype,A.values)}}}),o("4yBeA",function(t,r){e(t.exports,"maxPoolGradConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("iG87S"),o=s("hl418"),i=s("csahy"),l=s("k15kg");let u={kernelName:o.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:s}=e,{dy:o,input:u,output:p}=t;(0,i.assertNotComplex)([u,p],"maxPoolGrad");let{filterSize:d,strides:c,pad:h,dimRoundingMode:f}=s,m=a.computePool2DInfo(u.shape,d,c,1,h,f),g=r.data.get(u.dataId).values,x=(0,n.buffer)(m.outShape,u.dtype,(0,l.maxPoolPositions)(g,u.shape,u.dtype,m).values),y=m.strideHeight,b=m.strideWidth,v=m.dilationHeight,k=m.dilationWidth,N=m.effectiveFilterHeight,C=m.effectiveFilterWidth,T=C-1-m.padInfo.left,S=N-1-m.padInfo.top,I=(0,n.buffer)(u.shape,"float32"),w=r.data.get(o.dataId).values,E=(0,n.buffer)(o.shape,"float32",w);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let r=0;r<m.inHeight;++r)for(let a=0;a<m.inWidth;++a){let n=r-S,s=a-T,o=0;for(let r=0;r<N;r+=v){let a=(n+r)/y;if(!(a<0)&&!(a>=m.outHeight)&&Math.floor(a)===a)for(let n=0;n<C;n+=k){let i=(s+n)/b;if(i<0||i>=m.outWidth||Math.floor(i)!==i)continue;let l=+(N*C-1-x.get(e,a,i,t)===r*C+n);0!==l&&(o+=E.get(e,a,i,t)*l)}}I.set(o,e,r,a,t)}return r.makeTensorInfo(I.shape,I.dtype,I.values)}}}),o("55iAE",function(t,r){e(t.exports,"maxPoolWithArgmaxConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("csahy"),i=s("3woLI");let l={kernelName:n.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:s,strides:l,pad:u,includeBatchInIndex:p}=t;(0,o.assertNotComplex)(n,"MaxPoolWithArgmax");let d=r.data.get(n.dataId).values,c=a.computePool2DInfo(n.shape,s,l,[1,1],u),[h,f]=(0,i.maxPoolWithArgmaxImpl)(d,n.shape,n.dtype,p,c),m=r.write(h,c.outShape,n.dtype),g=r.write(f,c.outShape,n.dtype);return[{dataId:m,shape:c.outShape,dtype:n.dtype},{dataId:g,shape:c.outShape,dtype:"int32"}]}}}),o("3woLI",function(t,r){e(t.exports,"maxPoolWithArgmaxImpl",()=>o),s("i64bB");var a=s("jjNRA"),n=s("k15kg");function o(e,t,r,s,o){let i=a.computeStrides(t),l=(0,n.pool)(e,t,r,i,o,"max"),u=(0,n.maxPoolPositions)(e,t,r,o,!0,s);return[l.values,u.values]}}),o("f9iEq",function(t,r){e(t.exports,"meanConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("7LLjQ"),l=s("lI2hV"),u=s("b9JjM");let p={kernelName:n.Mean,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{axis:p,keepDims:d}=n,c=o.parseAxisParam(p,s.shape),h=a.computeOutAndReduceShapes(s.shape,c)[1],f=o.sizeFromShape(h),m=[],g=r.makeTensorInfo([],"float32",new Float32Array([f]));m.push(g);let x=(0,i.cast)({inputs:{x:s},backend:r,attrs:{dtype:"float32"}});m.push(x);let y=(0,l.div)({inputs:{a:x,b:g},backend:r});m.push(y);let b=(0,u.sum)({inputs:{x:y},backend:r,attrs:{axis:p,keepDims:d}});return m.forEach(e=>r.disposeIntermediateTensorInfo(e)),b}}}),o("8hCwj",function(t,r){e(t.exports,"minConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("eL8rV"),u=s("EOTYn");let p={kernelName:n.Min,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{axis:p,keepDims:d}=n;(0,i.assertNotComplex)(s,"min");let c=o.parseAxisParam(p,s.shape),h=c,f=a.getAxesPermutation(h,s.shape.length),m=s;null!=f&&(m=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:f}}),h=a.getInnerMostAxes(h.length,s.shape.length)),a.assertAxesAreInnerMostDims("min",h,m.shape.length);let[g,x]=a.computeOutAndReduceShapes(m.shape,h),y=o.sizeFromShape(x),b=o.makeZerosTypedArray(o.sizeFromShape(g),m.dtype),v=r.data.get(m.dataId).values;for(let e=0;e<b.length;++e){let t=e*y,r=v[t];for(let e=0;e<y;++e){let a=v[t+e];(Number.isNaN(a)||a<r)&&(r=a)}b[e]=r}null!=f&&r.disposeIntermediateTensorInfo(m);let k=r.makeTensorInfo(g,m.dtype,b);if(d){let e=a.expandShapeToKeepDim(g,c),t=(0,l.reshape)({inputs:{x:k},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(k),t}return k}}}),o("g7Z3x",function(t,r){e(t.exports,"minimumImpl",()=>i),e(t.exports,"minimumConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>Math.min(e,t)),l=(0,o.binaryKernelFunc)(a.Minimum,i),u={kernelName:a.Minimum,backendName:"cpu",kernelFunc:l}}),o("75PTj",function(t,r){e(t.exports,"mirrorPadConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.MirrorPad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{paddings:i,mode:l}=a;(0,o.assertNotComplex)(s,"mirrorPad");let u=i.map((e,t)=>e[0]+s.shape[t]+e[1]),p=i.map(e=>e[0]),d=i.map((e,t)=>e[0]+s.shape[t]),c=+("reflect"!==l),h=r.data.get(s.dataId).values,f=s.shape.length,m=n.computeStrides(s.shape),g=n.sizeFromShape(u),x=u.length,y=n.computeStrides(u),b=n.getTypedArrayFromDType(s.dtype,g);for(let e=0;e<g;e++){let t=n.indexToLoc(e,x,y);for(let e=0;e<x;e++)t[e]<p[e]?t[e]=2*p[e]-t[e]-c:t[e]>=d[e]&&(t[e]=(d[e]-1)*2-t[e]+c);t=t.map((e,t)=>e-p[t]);let r=n.locToIndex(t,f,m);b[e]=h[r]}return{dataId:r.write(b,u,s.dtype),shape:u,dtype:s.dtype}}}}),o("5to2D",function(t,r){e(t.exports,"modConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>{let r=e%t;return e<0&&t<0||e>=0&&t>=0?r:(r+t)%t}),l=(0,o.binaryKernelFunc)(a.Mod,i),u={kernelName:a.Mod,backendName:"cpu",kernelFunc:l}}),o("cjHWd",function(t,r){e(t.exports,"multinomialConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("3mnBW"),i=s("csahy"),l=s("j6gGc");let u={kernelName:a.Multinomial,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{logits:s}=t,{numSamples:u,seed:p,normalized:d}=a;(0,i.assertNotComplex)(s,"multinomial");let c=d?s:(0,l.softmax)({inputs:{logits:s},backend:r,attrs:{dim:-1}}),h=c.shape[0],f=c.shape[1],m=r.data.get(c.dataId).values,g=[h,u],x=n.makeZerosTypedArray(n.sizeFromShape(g),"int32");for(let e=0;e<h;++e){let t=e*f,r=new Float32Array(f-1);r[0]=m[t];for(let e=1;e<r.length;++e)r[e]=r[e-1]+m[t+e];let a=o.alea(p.toString()),n=e*u;for(let e=0;e<u;++e){let t=a();x[n+e]=r.length;for(let a=0;a<r.length;a++)if(t<r[a]){x[n+e]=a;break}}}return d||r.disposeIntermediateTensorInfo(c),r.makeTensorInfo(g,"int32",x)}}}),o("j6gGc",function(t,r){e(t.exports,"softmax",()=>h),e(t.exports,"softmaxConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("2ANRn"),l=s("7BXZf"),u=s("lI2hV"),p=s("eL8rV"),d=s("aT9VE"),c=s("b9JjM");function h(e){let{inputs:t,backend:r,attrs:n}=e,{logits:s}=t,{dim:h}=n,f=s.shape.length,m=h;if(-1===m&&(m=f-1),m!==f-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${f} and dim was ${m}`);let g=o.parseAxisParam([m],s.shape),x=(0,l.max)({inputs:{x:s},backend:r,attrs:{reductionIndices:g,keepDims:!1}}),y=a.expandShapeToKeepDim(x.shape,g),b=(0,p.reshape)({inputs:{x:x},backend:r,attrs:{shape:y}}),v=(0,d.sub)({inputs:{a:s,b:b},backend:r}),k=(0,i.exp)({inputs:{x:v},backend:r}),N=(0,c.sum)({inputs:{x:k},backend:r,attrs:{axis:g,keepDims:!1}}),C=(0,p.reshape)({inputs:{x:N},backend:r,attrs:{shape:y}}),T=(0,u.div)({inputs:{a:k,b:C},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),T}let f={kernelName:n.Softmax,backendName:"cpu",kernelFunc:h}}),o("9NYY4",function(t,r){e(t.exports,"negImpl",()=>l),e(t.exports,"negConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy"),i=s("gQOIy");function l(e,t,r){let a=n.createScalarValue(-1,r);return(0,i.multiplyImpl)([],t,a,e,r)}let u={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:a}=t;(0,o.assertNotComplex)(a,"neg");let[n,s]=l(r.data.get(a.dataId).values,a.shape,a.dtype);return r.makeTensorInfo(s,a.dtype,n)}}}),o("l27kK",function(t,r){e(t.exports,"nonMaxSuppressionV3Config",()=>l),s("i64bB");var a=s("lzjc8"),n=s("hl418"),o=s("csahy");let i=a.nonMaxSuppressionV3Impl,l={kernelName:n.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{boxes:n,scores:s}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p}=a;(0,o.assertNotComplex)(n,"NonMaxSuppression");let{selectedIndices:d}=i(r.data.get(n.dataId).values,r.data.get(s.dataId).values,l,u,p);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}}}),o("eiKqq",function(t,r){e(t.exports,"nonMaxSuppressionV4Config",()=>l),s("i64bB");var a=s("lzjc8"),n=s("hl418"),o=s("csahy");let i=a.nonMaxSuppressionV4Impl,l={kernelName:n.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{boxes:n,scores:s}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:d}=a;(0,o.assertNotComplex)(n,"NonMaxSuppressionPadded");let{selectedIndices:c,validOutputs:h}=i(r.data.get(n.dataId).values,r.data.get(s.dataId).values,l,u,p,d);return[r.makeTensorInfo([c.length],"int32",new Int32Array(c)),r.makeTensorInfo([],"int32",new Int32Array([h]))]}}}),o("39phV",function(t,r){e(t.exports,"nonMaxSuppressionV5Config",()=>l),s("i64bB");var a=s("lzjc8"),n=s("hl418"),o=s("csahy");let i=a.nonMaxSuppressionV5Impl,l={kernelName:n.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{boxes:n,scores:s}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p,softNmsSigma:d}=a;(0,o.assertNotComplex)(n,"NonMaxSuppressionWithScore");let c=r.data.get(n.dataId).values,{selectedIndices:h,selectedScores:f}=i(c,r.data.get(s.dataId).values,l,u,p,d);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([f.length],"float32",new Float32Array(f))]}}}),o("QHoEG",function(t,r){e(t.exports,"notEqualImpl",()=>i),e(t.exports,"notEqualConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>+(e!==t)),l=(0,o.binaryKernelFunc)(a.NotEqual,i,null,"bool"),u={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:l}}),o("5V8Hm",function(t,r){e(t.exports,"oneHotConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.OneHot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{indices:s}=t,{dtype:i,depth:l,onValue:u,offValue:p}=a;(0,o.assertNotComplex)(s,"oneHot");let d=n.sizeFromShape(s.shape),c=new Float32Array(d*l);c.fill(p);let h=r.data.get(s.dataId).values;for(let e=0;e<d;++e)h[e]>=0&&h[e]<l&&(c[e*l+h[e]]=u);return r.makeTensorInfo([...s.shape,l],i,c)}}}),o("5aWhS",function(t,r){e(t.exports,"onesLikeConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("bwMVz"),o=s("gj86F"),i=s("32coj"),l=s("linqd"),u=s("hZ8WQ");let p={kernelName:a.OnesLike,backendName:"cpu",kernelFunc:function e(t){let{inputs:r,backend:a}=t,{x:s}=r;if("string"===s.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==s.dtype)return(0,o.fill)({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}});{let t=(0,l.real)({inputs:{input:s},backend:a}),r=e({inputs:{x:t},backend:a}),o=(0,i.imag)({inputs:{input:s},backend:a}),p=(0,u.zerosLike)({inputs:{x:o},backend:a}),d=(0,n.complex)({inputs:{real:r,imag:p},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(p),d}}}}),o("hZ8WQ",function(t,r){e(t.exports,"zerosLike",()=>u),e(t.exports,"zerosLikeConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("bwMVz"),o=s("gj86F"),i=s("32coj"),l=s("linqd");function u(e){let{inputs:t,backend:r}=e,{x:a}=t;if("string"===a.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==a.dtype)return(0,o.fill)({backend:r,attrs:{shape:a.shape,value:0,dtype:a.dtype}});{let e=(0,l.real)({inputs:{input:a},backend:r}),t=u({inputs:{x:e},backend:r}),s=(0,i.imag)({inputs:{input:a},backend:r}),o=u({inputs:{x:s},backend:r}),p=(0,n.complex)({inputs:{real:t,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),p}}let p={kernelName:a.ZerosLike,backendName:"cpu",kernelFunc:u}}),o("hZ1GH",function(t,r){e(t.exports,"pack",()=>l),e(t.exports,"packConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("4kUws"),i=s("YMdKk");function l(e){let{inputs:t,backend:r,attrs:a}=e,{axis:s}=a;if(1===t.length)return(0,i.expandDims)({inputs:{input:t[0]},backend:r,attrs:{dim:s}});let l=t[0].shape,u=t[0].dtype;t.forEach(e=>{n.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),n.assert(u===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let p=[],d=t.map(e=>{let t=(0,i.expandDims)({inputs:{input:e},backend:r,attrs:{dim:s}});return p.push(t),t}),c=(0,o.concat)({inputs:d,backend:r,attrs:{axis:s}});return p.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}let u={kernelName:a.Pack,backendName:"cpu",kernelFunc:l}}),o("1H7BH",function(t,r){e(t.exports,"padV2Config",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.PadV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:l}=a;(0,o.assertNotComplex)(s,"pad");let u=i.map((e,t)=>e[0]+s.shape[t]+e[1]),p=i.map(e=>e[0]),d=r.data.get(s.dataId).values,c=n.sizeFromShape(s.shape),h=s.shape.length,f=n.computeStrides(s.shape),m=n.sizeFromShape(u),g=u.length,x=n.computeStrides(u),y=n.getTypedArrayFromDType(s.dtype,m);0!==l&&y.fill(l);for(let e=0;e<c;e++){let t=n.indexToLoc(e,h,f).map((e,t)=>e+p[t]);y[n.locToIndex(t,g,x)]=d[e]}return{dataId:r.write(y,u,s.dtype),shape:u,dtype:s.dtype}}}}),o("jwAmH",function(t,r){e(t.exports,"powConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>Math.pow(e,t)),l=(0,o.binaryKernelFunc)(a.Pow,i),u={kernelName:a.Pow,backendName:"cpu",kernelFunc:l}}),o("86TES",function(t,r){e(t.exports,"prodImpl",()=>p),e(t.exports,"prodConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("2MDja"),i=s("jjNRA"),l=s("csahy"),u=s("EOTYn");function p(e,t,r,n){let[s,l]=a.computeOutAndReduceShapes(e,n),u=(0,o.upcastType)(t,"int32"),p=i.makeZerosTypedArray(i.sizeFromShape(s),u),d=i.sizeFromShape(l);for(let e=0;e<p.length;++e){let t=e*d,a=1;for(let e=0;e<d;++e)a*=r[t+e];p[e]=a}return{outVals:p,outShape:s,outDtype:u}}let d={kernelName:n.Prod,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{axis:o,keepDims:d}=n;(0,l.assertNotComplex)(s,"prod");let c=s.shape.length,h=i.parseAxisParam(o,s.shape),f=a.getAxesPermutation(h,c),m=h,g=s,x=[];null!=f&&(x.push(g=(0,u.transpose)({inputs:{x:s},backend:r,attrs:{perm:f}})),m=a.getInnerMostAxes(m.length,c));let y=r.data.get(g.dataId).values,{outVals:b,outShape:v,outDtype:k}=p(g.shape,g.dtype,y,m),N=v;return d&&(N=a.expandShapeToKeepDim(v,h)),x.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(N,k,b)}}}),o("69RVO",function(t,r){e(t.exports,"raggedGatherConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4hb6Q");let o={kernelName:a.RaggedGather,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:o,indices:i}=t,{outputRaggedRank:l}=a,u=s.map(e=>r.data.get(e.dataId).values),p=s.map(e=>e.shape),d=r.data.get(o.dataId).values,c=r.data.get(i.dataId).values,[h,f,m]=(0,n.raggedGatherImpl)(u,p,d,o.shape,o.dtype,c,i.shape,l),g=h.map(e=>r.makeTensorInfo([e.length],"int32",e)),x=r.makeTensorInfo(m,o.dtype,f);return g.concat([x])}}}),o("4hb6Q",function(t,r){e(t.exports,"raggedGatherImpl",()=>o),s("i64bB");var a=s("jjNRA");function n(e,t){let r=e.slice(0,t);for(;r.length<t;)r.push(1);for(let a=t;a<e.length;a++)r[t-1]*=e[a];return r}function o(e,t,r,s,o,i,l,u){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");let p=t[0][0]-1;if(i.forEach((e,t)=>{if(e<0||e>=p){let r=a.indexToLoc(t,l.length,a.computeStrides(l)).join(",");throw Error(`indices[${r}] = ${e} is not in [0, ${p})`)}}),0===s.length)throw Error("params.rank must be nonzero");let{outSplits:d,valueSlices:c,numValues:h}=function(e,t,r,a){let n=[],s=0,o=Array(t.length-1+r.length).fill(null).map(()=>[0]);for(let e=0;e<r.length;++e){let t=r[e],n=e===r.length-1?a:r[e+1].length;if(0===t.length)throw Error("Ragged splits may not be empty");if(t[0]<0)throw Error("Ragged splits must be non-negative");if(t[t.length-1]>n)throw Error("Ragged splits must not point past values");for(let e=1;e<t.length;++e)if(t[e-1]>t[e])throw Error("Ragged splits must be sorted in ascending order")}let i=1;for(let e=0;e<t.length-1;++e){i*=t[e];let r=t[e+1];for(let t=1;t<i+1;++t)o[e].push(t*r)}for(let a=0;a<e.length;++a){let i=e[a],l=e[a]+1;for(let e=0;e<r.length;++e){let a=r[e],n=e+t.length-1;if(n>=0){let e=o[n],t=e[e.length-1]-a[i];for(let e=i;e<l;++e)o[n].push(a[e+1]+t)}i=a[i],l=a[l]}l!==i&&(n.push([i,l]),s+=l-i)}return{outSplits:o,valueSlices:n,numValues:s}}(i,l,e,s[0]),f=function(e){let t=[];for(let r=0;r<e.length;++r){let n=e[r].length,s=a.getArrayFromDType("int32",n);t.push(s),e[r].forEach((e,t)=>s[t]=e)}return t}(d),m=function(e,t,r,s,o){let i=t.slice();i[0]=o;let l=a.getArrayFromDType(r,a.sizeFromShape(i)),u=e.length,p=0===u?0:u/t[0];return!function(e,t,r,a,s,o){let i=n(t,2)[1],l=n(o,2)[1],u=0;for(let t of r)for(let r=t[0];r<t[1];++r){for(let t=0;t<a;++t)s[u*l+t]=e[r*i+t];++u}}(e,t,s,p,l,i),[l,i]}(r,s,o,c,h);return[f,m[0],m[1]]}}),o("9EaUw",function(t,r){e(t.exports,"raggedRangeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("2uK9D");let o={kernelName:a.RaggedRange,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:a,limits:s,deltas:o}=t,i=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=r.data.get(o.dataId).values,[p,d]=(0,n.raggedRangeImpl)(i,a.shape,a.dtype,l,s.shape,u,o.shape);return[r.makeTensorInfo([p.length],"int32",p),r.makeTensorInfo([d.length],a.dtype,d)]}}}),o("2uK9D",function(t,r){e(t.exports,"raggedRangeImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r,n,s,o,i){if(t.length>1)throw Error("starts must be a scalar or vector");if(s.length>1)throw Error("limits must be a scalar or vector");if(i.length>1)throw Error("deltas must be a scalar or vector");let l=0===t.length,u=0===s.length,p=0===i.length,d=[];l||d.push(t[0]),u||d.push(s[0]),p||d.push(i[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw Error("starts, limits, and deltas must have the same shape");let c=0===d.length?1:d[0],h=a.getArrayFromDType("int32",c+1);h[0]=0;for(let t=0;t<c;++t){let r,a=l?e[0]:e[t],s=u?n[0]:n[t],i=p?o[0]:o[t];if(0===i)throw Error("Requires delta != 0");if(i>0&&s<a||i<0&&s>a)r=0;else if((r=Math.ceil(Math.abs((s-a)/i)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");h[t+1]=h[t]+r}let f=h[c],m=a.getArrayFromDType(r,f),g=0;for(let t=0;t<c;++t){let r=h[t+1]-h[t],a=l?e[0]:e[t],n=p?o[0]:o[t];for(let e=0;e<r;++e)m[g++]=a,a+=n}return[h,m]}}),o("d7C5Q",function(t,r){e(t.exports,"raggedTensorToTensorConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("6AvWp");let o={kernelName:a.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{shape:s,values:o,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=a,p=r.data.get(s.dataId).values,d=r.data.get(o.dataId).values,c=r.data.get(i.dataId).values,h=l.map(e=>r.data.get(e.dataId).values),f=l.map(e=>e.shape),[m,g]=(0,n.raggedTensorToTensorImpl)(p,s.shape,d,o.shape,o.dtype,c,i.shape,h,f,u);return r.makeTensorInfo(m,o.dtype,g)}}}),o("6AvWp",function(t,r){e(t.exports,"raggedTensorToTensorImpl",()=>h),s("i64bB");var a=s("7MaPk"),n=s("aeB3Z"),o=s("4sqA7"),i=s("c2DT1"),l=s("jjNRA"),u=a.RowPartitionType;class p{constructor(e,t,r,n,s,o,i,l,u,p){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=n,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=a.getRowPartitionTypesHelper(p),this.raggedRank=a.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===u.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===u.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case u.VALUE_ROWIDS:return p.getMaxWidthValueRowID(t);case u.ROW_SPLITS:return p.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${u[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let r=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>r&&(r=t)}return r}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let r=0,a=e[0],n=0;for(let s=1;s<t;++s){let t=e[s];t!==a&&(a=t,n=Math.max(s-r,n),r=s)}return Math.max(t-r,n)}tensorShapeFromTensor(e,t,r=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return c(e,r)}calculateOutputSize(e){let t=this.valuesShape,r=this.defaultValueShape;a.validateDefaultValueShape(r,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=a.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,r){let a=Math.min(e,r),n=[],s=0;for(let e=0;e<a;++e,s+=t)n.push(s);for(let t=a;t<e;++t)n.push(-1);return l.assert(n.length===e,()=>"Final length of result must be equal to firstDimension."),n}calculateOutputIndexRowSplit(e,t,r,a){let n=e.length,s=[];for(let o=0;o<n-1;++o){let n=e[o+1]-e[o],i=Math.min(a,n),l=t[o];-1===l&&(i=0);for(let e=0;e<i;++e)s.push(l),l+=r;for(let e=0;e<n-i;++e)s.push(-1)}if(n>0&&s.length!==e[n-1])throw Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,r,a){let n=e.length,s=[];if(0===n)return[];let o=0,i=e[0];if(i>=t.length)throw Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let l=t[i];s.push(l);for(let u=1;u<n;++u){let n=e[u];if(n===i)l>=0&&(++o<a?l+=r:l=-1);else{if(o=0,i=n,n>=t.length)throw Error(`Got nextValueRowId=${n} which is not less than ${t.length}`);l=t[n]}s.push(l)}if(s.length!==e.length)throw Error("Invalid row ids.");return s}calculateOutputIndex(e,t,r,a){let n=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case u.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(n,t,r,a);case u.ROW_SPLITS:if(n.length-1>t.length)throw Error(`Row partition size is greater than output size: ${n.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(n,t,r,a);default:throw Error(`Unsupported partition type: ${u[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case u.FIRST_DIM_SIZE:return e[0];case u.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case u.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${u[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=Array(this.raggedRank+1);r[r.length-1]=1;for(let e=r.length-2;e>=0;--e)r[e]=r[e+1]*t[e+1];let a=c(t,!1),n=l.getArrayFromDType(this.valuesDType,l.sizeFromShape(a));if(r[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,r[e],t[e]);this.setOutput(this.raggedRank,s,n,a)}return[a,n]}setOutput(e,t,r,a){if(0===r.length)return;let s=this.values,u=a.slice();u=u.slice(e+1);let p=l.sizeFromShape(u),c=t.length,h=this.defaultValue;if(h.length!==p&&1!==h.length){let e=this.defaultValueShape;(0,i.tidy)(()=>{let t=(0,o.reshape)(h,e);h=(0,n.broadcastTo)(t,u).dataSync()})}let f=0,m=0,g=0;for(let e=0;e<=c;++e){let a=e<c?t[e]:-1;if(a===g){++g;continue}if(m<g){let e=s.subarray(f*p);d(r.subarray(m*p),e,(g-m)*p)}if(e>=c&&(a=Math.floor(r.length/p)),a>g)if(1===this.defaultValue.length)r.subarray(g*p,a*p).fill(this.defaultValue[0]),g=a;else for(;a>g;)d(r.slice(g*p),h,p),++g;a<0?(f=e+1,m=g):(f=e,g=(m=g)+1)}}}function d(e,t,r){for(let a=0;a<r;a++)e[a]=t[a]}function c(e,t){let r=[];for(let a of e){if(a<0){if(!t)throw Error(`Dimension ${a} must be >= 0`);if(a<-1)throw Error(`Dimension ${a} must be >= -1`);a=-1}r.push(a)}return r}function h(e,t,r,a,n,s,o,i,l,u){return new p(e,t,r,a,n,s,o,i,l,u).compute()}}),o("3iDlg",function(t,r){e(t.exports,"rangeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("caGrw");let o={kernelName:a.Range,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:a,stop:s,dtype:o,step:i}=r,l=(0,n.rangeImpl)(a,s,i,o);return t.makeTensorInfo([l.length],o,l)}}}),o("caGrw",function(t,r){e(t.exports,"rangeImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r,n){let s=e===t,o=e<t&&r<0,i=t<e&&r>1;if(s||o||i)return a.makeZerosTypedArray(0,n);let l=Math.abs(Math.ceil((t-e)/r)),u=a.makeZerosTypedArray(l,n);t<e&&1===r&&(r=-1),u[0]=e;for(let e=1;e<u.length;e++)u[e]=u[e-1]+r;return u}}),o("d3vHZ",function(t,r){e(t.exports,"reciprocalConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Reciprocal,e=>1/e),o={kernelName:a.Reciprocal,backendName:"cpu",kernelFunc:n}}),o("9HK0T",function(t,r){e(t.exports,"resizeBilinearConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:l,size:u}=a;(0,o.assertNotComplex)(s,"resizeBilinear");let p=n.computeStrides(s.shape),[d,c]=u,[h,f,m,g]=s.shape,x=r.data.get(s.dataId).values,y=new Float32Array(n.sizeFromShape([h,d,c,g])),b=[i&&d>1?f-1:f,i&&c>1?m-1:m],v=[i&&d>1?d-1:d,i&&c>1?c-1:c],k=0,N=b[0]/v[0],C=b[1]/v[1];for(let e=0;e<h;e++)for(let t=0;t<d;t++){let r,a=Math.max(0,Math.floor(r=l?N*(t+.5)-.5:N*t)),n=r-a,s=Math.min(f-1,Math.ceil(r)),o=e*p[0]+a*p[1],i=e*p[0]+s*p[1];for(let e=0;e<c;e++){let t,r=Math.max(0,Math.floor(t=l?C*(e+.5)-.5:C*e)),a=t-r,s=Math.min(m-1,Math.ceil(t)),u=o+r*p[2],d=i+r*p[2],c=o+s*p[2],h=i+s*p[2];for(let e=0;e<g;e++){let t=x[u+e],r=x[d+e],s=x[c+e],o=x[h+e],i=t+(s-t)*a,l=i+(r+(o-r)*a-i)*n;y[k++]=l}}}return r.makeTensorInfo([h,d,c,g],"float32",y)}}}),o("ko47e",function(t,r){e(t.exports,"resizeBilinearGradConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:l}=a;(0,o.assertNotComplex)([i,s],"resizeBilinearGrad");let u=n.computeStrides(s.shape),[p,d,c,h]=s.shape,[,f,m]=i.shape,g=new Float32Array(p*d*c*h),x=[l&&f>1?d-1:d,l&&m>1?c-1:c],y=[l&&f>1?f-1:f,l&&m>1?m-1:m],b=x[0]/y[0],v=x[1]/y[1],k=r.data.get(i.dataId).values,N=0;for(let e=0;e<p;e++){let t=e*u[0];for(let e=0;e<f;e++){let r=e*b,a=Math.floor(r),n=Math.min(Math.ceil(r),d-1),s=t+a*u[1],o=t+n*u[1],i=r-a,l=1-i;for(let e=0;e<m;e++){let t=e*v,r=Math.floor(t),a=Math.min(Math.ceil(t),c-1),n=t-r,p=1-n,d=s+r*u[2],f=s+a*u[2],m=o+r*u[2],x=o+a*u[2],y=l*p,b=l*n,C=i*p,T=i*n;for(let e=0;e<h;e++){let t=k[N++];g[d+e]+=t*y,g[f+e]+=t*b,g[m+e]+=t*C,g[x+e]+=t*T}}}}return r.makeTensorInfo([p,c,d,h],"float32",g)}}}),o("bCxBQ",function(t,r){e(t.exports,"resizeNearestNeighborConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:l,size:u}=a;(0,o.assertNotComplex)(s,"resizeNearestNeighbor");let p=n.computeStrides(s.shape),[d,c]=u,[h,f,m,g]=s.shape,x=r.data.get(s.dataId).values,y=new Float32Array(h*d*c*g),b=[i&&d>1?f-1:f,i&&c>1?m-1:m],v=[i&&d>1?d-1:d,i&&c>1?c-1:c],k=b[0]/v[0],N=b[1]/v[1],C=0;for(let e=0;e<h;e++){let t=e*p[0];for(let e=0;e<d;e++){let r=l?k*(e+.5):k*e,a=Math.min(f-1,i?Math.round(r):Math.floor(r));l&&(a=Math.max(0,a));let n=t+a*p[1];for(let e=0;e<c;e++){let t=l?N*(e+.5):N*e,r=Math.min(m-1,i?Math.round(t):Math.floor(t));l&&(r=Math.max(0,r));let a=n+r*p[2];for(let e=0;e<g;e++){let t=x[a+e];y[C++]=t}}}}return r.makeTensorInfo([h,d,c,g],s.dtype,y)}}}),o("8YR9V",function(t,r){e(t.exports,"resizeNearestNeighborGradConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy");let i={kernelName:a.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:l}=a;(0,o.assertNotComplex)([i,s],"resizeNearestNeighborGrad");let u=n.computeStrides(s.shape),p=n.computeStrides(i.shape),[d,c,h,f]=s.shape,[,m,g]=i.shape,x=new Float32Array(d*c*h*f),y=r.data.get(i.dataId).values,b=[l&&m>1?c-1:c,l&&g>1?h-1:h],v=[l&&m>1?m-1:m,l&&g>1?g-1:g],k=b[0]/v[0],N=b[1]/v[1],C=1/k,T=1/N,S=2*Math.ceil(C)+2,I=2*Math.ceil(T)+2;for(let e=0;e<d;e++){let t=e*u[0];for(let e=0;e<c;e++){let r=t+e*u[1],a=Math.floor(Math.floor(e*C)-S/2);for(let n=0;n<h;n++){let s=r+n*u[2],o=Math.floor(Math.floor(n*T)-I/2);for(let r=0;r<f;r++){let i=0;for(let s=0;s<S;s++){let u=s+a;if(u<0||u>=m)continue;let d=t+u*p[1],f=u*k;if(e===Math.min(c-1,l?Math.round(f):Math.floor(f)))for(let e=0;e<I;e++){let t=e+o;if(t<0||t>=g)continue;let a=d+t*p[2],s=t*N;n===Math.min(h-1,l?Math.round(s):Math.floor(s))&&(i+=y[a+r])}}x[s+r]=i}}}}return r.makeTensorInfo(s.shape,s.dtype,x)}}}),o("kt18Z",function(t,r){e(t.exports,"reverseConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("9jCh7"),o=s("jjNRA"),i=s("csahy"),l=s("lcqBv");let u={kernelName:a.Reverse,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{dims:u}=a;(0,i.assertNotComplex)(s,"reverse");let p=s.shape.length,d=o.parseAxisParam(u,s.shape);if(0===p)return(0,l.identity)({inputs:{x:s},backend:r});let c=new(0,n.TensorBuffer)(s.shape,s.dtype),h=r.bufferSync(s);for(let e=0;e<c.size;e++){let t=c.indexToLoc(e),r=t.slice();d.forEach(e=>r[e]=s.shape[e]-1-r[e]),c.set(h.get(...r),...t)}return r.makeTensorInfo(c.shape,c.dtype,c.values)}}}),o("5iKFL",function(t,r){e(t.exports,"rotateWithOffsetConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA");let i={kernelName:n.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:s,fillValue:i,center:l}=t,u=o.getTypedArrayFromDType(n.dtype,o.sizeFromShape(n.shape)),[p,d,c,h]=n.shape,[f,m]=a.getImageCenter(l,d,c),g=Math.sin(s),x=Math.cos(s),y=r.data.get(n.dataId).values;for(let e=0;e<p;e++){let t=e*c*d*h;for(let e=0;e<d;e++){let r=c*h*e;for(let a=0;a<c;a++){let n=a*h;for(let s=0;s<h;s++){let o=[p,e,a,s],l=o[2],b=o[1],v=(l-f)*x-(b-m)*g,k=(l-f)*g+(b-m)*x;v=Math.round(v+f),k=Math.round(k+m);let N=i;"number"!=typeof i&&(N=3===s?255:i[s]),v>=0&&v<c&&k>=0&&k<d&&(N=y[t+c*h*k+v*h+s]),u[t+r+n+s]=N}}}}return{dataId:r.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}}}),o("a450S",function(t,r){e(t.exports,"roundConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Round,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),o={kernelName:a.Round,backendName:"cpu",kernelFunc:n}}),o("GbeHD",function(t,r){e(t.exports,"rsqrtImpl",()=>i),e(t.exports,"rsqrtConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>1/Math.sqrt(e)),l=(0,o.unaryKernelFuncFromImpl)(a.Rsqrt,i),u={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:l}}),o("iO2qM",function(t,r){e(t.exports,"scatterNdConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("YcuAy");let i={kernelName:n.ScatterNd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:s,updates:i}=t,{shape:l}=n,{sliceRank:u,numUpdates:p,sliceSize:d,strides:c,outputSize:h}=a.calculateShapes(i,s,l),f=r.bufferSync(s),m=r.bufferSync(i),g=(0,o.scatterImpl)(f,m,l,h,d,p,u,c,0,!0);return r.makeTensorInfo(l,g.dtype,g.values)}}}),o("YcuAy",function(t,r){e(t.exports,"scatterImpl",()=>o),s("i64bB");var a=s("iG87S"),n=s("9jCh7");function o(e,t,r,s,o,i,l,u,p,d){let c=e.values,h=t.values;if(0===s)return(0,a.buffer)(r,t.dtype);let f=p instanceof n.TensorBuffer?p:(0,a.buffer)([s/o,o],t.dtype);"string"==typeof p||"number"==typeof p?f.values.fill(p):"boolean"==typeof p&&f.values.fill(+p);for(let e=0;e<i;e++){let a=[],n=0;for(let t=0;t<l;t++){let r=c[e*l+t];a.push(r),n+=r*u[t]}if(n<0||n>=s/o)throw Error(`Invalid indices: ${a} does not index into ${r}`);for(let r=0;r<o;r++)d?f.values[n*o+r]+=h[e*o+r]:f.values[n*o+r]=0===t.rank?h[0]:h[e*o+r]}return f}}),o("5YeYY",function(t,r){e(t.exports,"searchSortedConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("iJ3s2");let o={kernelName:a.SearchSorted,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{sortedSequence:s,values:o}=t,{side:i}=a,l=r.data.get(s.dataId).values,u=r.data.get(o.dataId).values,p=(0,n.searchSortedImpl)(l,u,s.shape[0],s.shape[1],o.shape[1],i);return r.makeTensorInfo(o.shape,"int32",p)}}}),o("iJ3s2",function(t,r){e(t.exports,"searchSortedImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r,n,s,o){let i=a.getArrayFromDType("int32",r*s);for(let a=0;a<r;++a){let r=e.slice(a*n,(a+1)*n),l=a*s;for(let e=0;e<s;++e)i[l+e]="left"===o?function(e,t){let r=0,a=e.length,n=0;for(;r<a;)e[n=Math.floor((r+a)/2)]<t?r=n+1:a=n;return a}(r,t[e+l]):function(e,t){let r=0,a=e.length,n=0;for(;r<a;)e[n=Math.floor((r+a)/2)]<=t?r=n+1:a=n;return a}(r,t[e+l])}return i}}),o("fzLyD",function(t,r){e(t.exports,"selectConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("2MDja"),o=s("jjNRA"),i=s("csahy");let l={kernelName:a.Select,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:a,t:s,e:l}=t;(0,i.assertNotComplex)([a,s,l],"select");let u=a.shape.length,p=r.data.get(a.dataId).values,d=r.data.get(s.dataId).values,c=r.data.get(l.dataId).values,h=(0,n.upcastType)(s.dtype,l.dtype),f=o.makeZerosTypedArray(o.sizeFromShape(s.shape),h),m=0,g=0===u||u>1||1===s.shape.length?1:o.sizeFromShape(s.shape.slice(1));for(let e=0;e<p.length;e++)for(let t=0;t<g;t++)1===p[e]?f[m++]=d[e]:f[m++]=c[e];return r.makeTensorInfo(s.shape,h,f)}}}),o("3CwP0",function(t,r){e(t.exports,"seluConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("l6afd");let i=a.SELU_SCALEALPHA,l=a.SELU_SCALE,u=(0,o.unaryKernelFunc)(n.Selu,e=>e>=0?l*e:i*(Math.exp(e)-1)),p={kernelName:n.Selu,backendName:"cpu",kernelFunc:u}}),o("9Uo4Q",function(t,r){e(t.exports,"signConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Sign,e=>e<0?-1:+(e>0)),o={kernelName:a.Sign,backendName:"cpu",kernelFunc:n}}),o("dykp3",function(t,r){e(t.exports,"sinConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Sin,e=>Math.sin(e)),o={kernelName:a.Sin,backendName:"cpu",kernelFunc:n}}),o("2qsDL",function(t,r){e(t.exports,"sinhConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Sinh,e=>Math.sinh(e)),o={kernelName:a.Sinh,backendName:"cpu",kernelFunc:n}}),o("kVxvF",function(t,r){e(t.exports,"softplusConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("l6afd");let o=Math.log(11920928955078125e-23)+2,i=(0,n.unaryKernelFunc)(a.Softplus,e=>{let t,r=Math.exp(e);return e<o?r:e>-o?e:Math.log(1+r)}),l={kernelName:a.Softplus,backendName:"cpu",kernelFunc:i}}),o("5e92z",function(t,r){e(t.exports,"spaceToBatchNDConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("1H7BH"),u=s("eL8rV"),p=s("EOTYn");let d={kernelName:n.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{blockShape:d,paddings:c}=n;(0,i.assertNotComplex)([s],"spaceToBatchND");let h=o.sizeFromShape(d),f=[[0,0]];f.push(...c);for(let e=1+d.length;e<s.shape.length;++e)f.push([0,0]);let m=l.padV2Config.kernelFunc({inputs:{x:s},backend:r,attrs:{paddings:f,constantValue:0}}),g=a.getReshaped(m.shape,d,h,!1),x=a.getPermuted(g.length,d.length,!1),y=a.getReshapedPermuted(m.shape,d,h,!1),b=(0,u.reshape)({inputs:{x:m},backend:r,attrs:{shape:g}}),v=(0,p.transpose)({inputs:{x:b},backend:r,attrs:{perm:x}}),k=(0,u.reshape)({inputs:{x:v},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),k}}}),o("gG4dT",function(t,r){e(t.exports,"sparseFillEmptyRowsConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("dkwAe");let o={kernelName:a.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:a,values:s,denseShape:o,defaultValue:i}=t;if(1!==o.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(2!==a.shape.length)throw Error(`Indices must be a matrix, saw:
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Values must be a vector, saw:
        ${s.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=r.data.get(o.dataId).values,d=r.data.get(i.dataId).values[0],[c,h,f,m,g]=(0,n.sparseFillEmptyRowsImpl)(l,a.shape,a.dtype,u,s.dtype,p,d);return[r.makeTensorInfo(h,a.dtype,c),r.makeTensorInfo([h[0]],s.dtype,f),r.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),r.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}}}),o("dkwAe",function(t,r){e(t.exports,"sparseFillEmptyRowsImpl",()=>o),s("i64bB");var a=s("7MaPk"),n=s("jjNRA");function o(e,t,r,s,o,i,l){let u=t[0],p=i[0],d=Array(p),c=Array(u),h=t[1];if(0===p){if(0!==u)throw Error(a.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[n.getArrayFromDType(r,0),[0,h],n.getArrayFromDType(o,0),d,c]}let f=!0,m=0,g=Array(p).fill(0);for(let t=0;t<u;++t){let r=e[t*h];if(r<0)throw Error(a.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,r));if(r>=p)throw Error(a.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,r,p));++g[r],f=f&&r>=m,m=r}let x=!0;for(let e=0;e<p;++e){let t=0===g[e];d[e]=t,x=x&&!t,g[e]=Math.max(g[e],1),e>0&&(g[e]+=g[e-1])}if(x&&f){for(let e=0;e<u;++e)c[e]=e;return[e,[u,h],s,d,c]}{let t=g[p-1],a=n.getArrayFromDType(r,t*h),i=n.getArrayFromDType(o,t),f=Array(p).fill(0);for(let t=0;t<u;++t){let r=e[t*h],n=f[r],o=(0===r?0:g[r-1])+n;f[r]++;for(let r=0;r<h;++r)a[o*h+r]=e[t*h+r];i[o]=s[t],c[t]=o}for(let e=0;e<p;++e)if(0===f[e]){let t=0===e?0:g[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;i[t]=l}return[a,[t,h],i,d,c]}}}),o("6cc8p",function(t,r){e(t.exports,"sparseReshapeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("9VxEX");let o={kernelName:a.SparseReshape,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:a,inputShape:s,newShape:o}=t;if(2!==a.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(1!==o.shape.length)throw Error(`Target shape should be a vector but received shape ${o.shape}`);let i=Array.from(r.data.get(s.dataId).values),l=r.data.get(a.dataId).values,u=Array.from(r.data.get(o.dataId).values),[p,d,c]=(0,n.sparseReshapeImpl)(l,a.shape,a.dtype,i,u);return[r.makeTensorInfo(d,a.dtype,p),r.makeTensorInfo([c.length],o.dtype,new Int32Array(c))]}}}),o("9VxEX",function(t,r){e(t.exports,"sparseReshapeImpl",()=>o),s("i64bB");var a=s("7MaPk"),n=s("jjNRA");function o(e,t,r,s,o){let i=n.sizeFromShape(s),l=t[0],u=o.length,p=[],d=1,c=-1;for(let e=0;e<u;++e){let t=o[e];if(-1===t){if(-1!==c)throw Error(a.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,p.push(1)}else{if(t<0)throw Error(a.getSparseReshapeNegativeOutputDimErrorMessage(e,t));d*=t,p.push(t)}}if(-1!==c){if(d<=0)throw Error(a.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(i/d);if(d*e!==i)throw Error(a.getSparseReshapeInputOutputMultipleErrorMessage(s,p));p[c]=e}if(n.sizeFromShape(p)!==i)throw Error(a.getSparseReshapeInputOutputMismatchErrorMessage(s,p));let h=s.length,f=[];if(h>0){f[h-1]=1;for(let e=h-2;e>=0;--e)f[e]=f[e+1]*s[e+1]}let m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*p[e+1]}let g=n.getArrayFromDType(r,l*u);for(let t=0;t<l;++t){let r=0;for(let a=0;a<h;++a)r+=e[t*h+a]*f[a];for(let e=0;e<u;++e)g[t*u+e]=Math.trunc(r/m[e]),r%=m[e]}return[g,[l,u],p]}}),o("eaQoz",function(t,r){e(t.exports,"sparseSegmentMeanConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("8ENVF");let o={kernelName:a.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:a,indices:s,segmentIds:o}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw Error(`Indices should be a vector but received shape
          ${s.shape}`);if(1!==o.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=r.data.get(o.dataId).values,[p,d]=(0,n.sparseSegmentReductionImpl)(i,a.shape,a.dtype,l,u,!0);return r.makeTensorInfo(d,a.dtype,p)}}}),o("8ENVF",function(t,r){e(t.exports,"sparseSegmentReductionImpl",()=>o),s("i64bB");var a=s("7MaPk"),n=s("jjNRA");function o(e,t,r,s,i,l=!1,u=0){let p=s.length,d=[t[0],e.length/t[0]],c=d[1],h=p>0?i[p-1]+1:0;if(h<0)throw Error(a.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=t.slice();f[0]=h;let m=f.reduce((e,t)=>e*t,1),g=n.getArrayFromDType(r,m);if(0===p)return h>0&&g.fill(u),[g,f];if(h<=0)throw Error(a.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let x=0,y=1,b=0,v=i[0];for(;;){let t=0;if(y<p){if(v===(t=i[y])){++y;continue}if(v>=t)throw Error(a.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(v<0||v>=h)throw Error(a.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v,h));v>b&&g.fill(u,b*c,v*c);for(let t=x;t<y;++t){let r=s[t];if(r<0||r>=d[0])throw Error(a.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,s[t],d[0]));for(let t=0;t<c;t++)g[v*c+t]+=e[r*c+t]}if(l)for(let e=0;e<c;e++)g[v*c+e]/=y-x;if(x=y,++y,b=v+1,v=t,y>p)break}return b<h&&g.fill(u,b*c,h*c),[g,f]}}),o("l3Q8t",function(t,r){e(t.exports,"sparseSegmentSumConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("8ENVF");let o={kernelName:a.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:a,indices:s,segmentIds:o}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw Error(`Indices should be a vector but received shape
         ${s.shape}`);if(1!==o.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=r.data.get(o.dataId).values,[p,d]=(0,n.sparseSegmentReductionImpl)(i,a.shape,a.dtype,l,u);return r.makeTensorInfo(d,a.dtype,p)}}}),o("1JBmQ",function(t,r){e(t.exports,"sparseToDenseConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("YcuAy");let l={kernelName:n.SparseToDense,backendName:"cpu",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{sparseIndices:l,sparseValues:u,defaultValue:p}=r,{outputShape:d}=s,{sliceRank:c,numUpdates:h,sliceSize:f,strides:m,outputSize:g}=a.calculateShapes(u,l,d),x=n.bufferSync(l);switch(u.dtype){case"bool":{let e=n.bufferSync(u),r=!!n.data.get(p.dataId).values[0];t=(0,i.scatterImpl)(x,e,d,g,f,h,c,m,r,!1);break}case"float32":{let e=n.bufferSync(u),r=n.data.get(p.dataId).values[0];t=(0,i.scatterImpl)(x,e,d,g,f,h,c,m,r,!1);break}case"int32":{let e=n.bufferSync(u),r=n.data.get(p.dataId).values[0];t=(0,i.scatterImpl)(x,e,d,g,f,h,c,m,r,!1);break}case"string":{let e=n.bufferSync(u),r=o.decodeString(n.data.get(p.dataId).values[0]);t=(0,i.scatterImpl)(x,e,d,g,f,h,c,m,r,!1);break}default:throw Error(`Unsupported type ${u.dtype}`)}return n.makeTensorInfo(d,t.dtype,t.values)}}}),o("cEVcR",function(t,r){e(t.exports,"splitVConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("aYBRE");let l={kernelName:n.SplitV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{numOrSizeSplits:l,axis:u}=n,p=o.parseAxisParam(u,s.shape)[0],d=a.prepareSplitSize(s,l,p),c=Array(s.shape.length).fill(0),h=s.shape.slice();return d.map(e=>{let t=[...h];t[p]=e;let a=(0,i.slice)({inputs:{x:s},backend:r,attrs:{begin:c,size:t}});return c[p]+=e,a})}}}),o("2a43t",function(t,r){e(t.exports,"sqrtImpl",()=>i),e(t.exports,"sqrtConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)(e=>Math.sqrt(e)),l=(0,o.unaryKernelFunc)(a.Sqrt,e=>Math.sqrt(e)),u={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:l}}),o("7LX70",function(t,r){e(t.exports,"squareConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("csahy");let o={kernelName:a.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e;(0,n.assertNotComplex)(r,"square");let a=t.data.get(r.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:t.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}}}),o("4QLZo",function(t,r){e(t.exports,"squaredDifferenceImpl",()=>i),e(t.exports,"squaredDifferenceConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jQJ39"),o=s("kgSwn");let i=(0,n.createSimpleBinaryKernelImpl)((e,t)=>{let r=e-t;return r*r}),l=(0,o.binaryKernelFunc)(a.SquaredDifference,i),u={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:l}}),o("hRUGg",function(t,r){e(t.exports,"staticRegexReplaceImpl",()=>i),e(t.exports,"staticRegexReplaceConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("19W3p"),o=s("l6afd");let i=(0,n.createSimpleUnaryImpl)((e,t)=>{let{pattern:r,replaceGlobal:a,rewrite:n}=t;return e.replace(new RegExp(r,a?"g":""),n)}),l=(0,o.unaryKernelFuncFromImpl)(a.StaticRegexReplace,i),u={kernelName:a.StaticRegexReplace,backendName:"cpu",kernelFunc:l}}),o("lGGZt",function(t,r){e(t.exports,"stepConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Step,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),o={kernelName:a.Step,backendName:"cpu",kernelFunc:n}}),o("eCAEs",function(t,r){e(t.exports,"stridedSliceConfig",()=>d),s("i64bB");var a=s("bszZn"),n=s("hl418"),o=s("jjNRA"),i=s("csahy"),l=s("eL8rV"),u=s("aYBRE"),p=s("6Syfk");let d={kernelName:n.StridedSlice,backendName:"cpu",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:d}=r,{begin:c,end:h,strides:f,beginMask:m,endMask:g,ellipsisMask:x,newAxisMask:y,shrinkAxisMask:b}=s;(0,i.assertNotComplex)(d,"stridedSlice");let{finalShapeSparse:v,finalShape:k,isIdentity:N,sliceDim0:C,isSimpleSlice:T,begin:S,end:I,strides:w}=a.sliceInfo(d.shape,c,h,f,m,g,x,y,b);if(N)t=(0,l.reshape)({inputs:{x:d},backend:n,attrs:{shape:k}});else if(C||T){o.assert(d.shape.length>=1,()=>`Input must have rank at least 1, got: ${d.shape.length}`);let e=a.computeOutShape(S,I,w),r=(0,u.slice)({inputs:{x:d},backend:n,attrs:{begin:S,size:e}});t=(0,l.reshape)({inputs:{x:r},backend:n,attrs:{shape:k}}),n.disposeIntermediateTensorInfo(r)}else{let e=n.bufferSync(d),r=(0,p.stridedSliceImpl)(v,e,w,S);t=n.makeTensorInfo(k,r.dtype,r.values)}return t}}}),o("6Syfk",function(t,r){e(t.exports,"stridedSliceImpl",()=>n),s("i64bB");var a=s("iG87S");function n(e,t,r,n){let s=(0,a.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){let a=s.indexToLoc(e),o=Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*r[e]+n[e];s.set(t.get(...o),...a)}return s}}),o("aw1fr",function(t,r){e(t.exports,"stringNGramsConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("fopkM");let o={kernelName:a.StringNGrams,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{separator:s,nGramWidths:o,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:p}=a,{data:d,dataSplits:c}=t,h=r.data.get(d.dataId).values,f=r.data.get(c.dataId).values,[m,g]=(0,n.stringNGramsImpl)(h,f,s,o,i,l,u,p);return[r.makeTensorInfo([m.length],"string",m),r.makeTensorInfo(c.shape,"int32",g)]}}}),o("fopkM",function(t,r){e(t.exports,"stringNGramsImpl",()=>o),s("i64bB");var a=s("jjNRA");class n{constructor(e,t,r,n,s,o){this.separator=a.encodeString(e),this.nGramWidths=t,this.leftPad=a.encodeString(r),this.rightPad=a.encodeString(n),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,r,a,n,s){for(let o=0;o<n;++o){let i,l=this.getPadWidth(s),u=Math.max(0,l-o),p=Math.max(0,l-(n-(o+1))),d=s-(u+p),c=t+(u>0?0:o-l);i=0+u*this.leftPad.length;for(let t=0;t<d;++t)i+=e[c+t].length;i+=p*this.rightPad.length,i+=(u+p+d-1)*this.separator.length,r[a+o]=new Uint8Array(i);let h=r[a+o],f=0,m=e=>e.forEach(e=>h[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[c+t]),m(this.separator);if(d>0){m(e[c+d-1]);for(let e=0;e<p;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<p-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let r=e.length,n=t.length;if(n>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let a=1;a<n;++a){let n=t[a]>=e;if(!(n=n&&t[a]<=r))throw Error(`Invalid split value ${t[a]}, must be in [${e}, ${r}]`);e=t[a]}if(e!==r)throw Error(`Last split value must be data size. Expected ${r}, got ${e}`)}let s=n-1,o=a.getArrayFromDType("int32",n);if(0===r||0===n){let e=Array(r);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){let r=t[e]-t[e-1],a=0;this.nGramWidths.forEach(e=>{a+=this.getNumNGrams(r,e)}),this.preserveShort&&r>0&&0===a&&(a=1),o[e]=o[e-1]+a}let i=Array(o[s]);for(let r=0;r<s;++r){let a=t[r],n=o[r];if(this.nGramWidths.forEach(s=>{let o=t[r+1]-t[r],l=this.getNumNGrams(o,s);this.createNGrams(e,a,i,n,l,s),n+=l}),this.preserveShort&&n===o[r]){let s=t[r+1]-t[r];if(0===s)continue;let o=s+2*this.padWidth;this.createNGrams(e,a,i,n,1,o)}}return[i,o]}}function o(e,t,r,a,s,o,i,l){return new n(r,a,s,o,i,l).compute(e,t)}}),o("8x6qM",function(t,r){e(t.exports,"stringSplitConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("5xLgA");let o={kernelName:a.StringSplit,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{skipEmpty:s}=a,{input:o,delimiter:i}=t;if("string"!==o.dtype)throw Error("Input must be of datatype string");if(1!==o.shape.length)throw Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let l=r.data.get(o.dataId).values,u=r.data.get(i.dataId).values[0],[p,d,c]=(0,n.stringSplitImpl)(l,u,s),h=d.length;return[r.makeTensorInfo([h,2],"int32",p),r.makeTensorInfo([h],"string",d),r.makeTensorInfo([2],"int32",new Int32Array(c))]}}}),o("5xLgA",function(t,r){e(t.exports,"stringSplitImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t,r){let n=e.length,s=[],o=0,i=0,l=Array(n);for(let a=0;a<n;++a){let n=s.length;!function(e,t,r,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let n=t[0],s=e.indexOf(n);for(;-1!==s;){let t=e.subarray(0,s);r&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(n)}r&&0===e.length||a.push(e);return}let n=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(n,s);r&&0===t.length||a.push(t),n=s+1}}(e[a],t,r,s);let u=s.length-n;l[a]=u,o+=u,i=Math.max(i,u)}let u=a.getArrayFromDType("int32",2*o),p=Array(o),d=[n,i],c=0;for(let e=0;e<n;++e)for(let t=0;t<l[e];++t)u[2*c]=e,u[2*c+1]=t,p[c]=s[c],++c;return[u,p,d]}}),o("dmWAX",function(t,r){e(t.exports,"stringToHashBucketFastConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("cWacD");let o={kernelName:a.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{numBuckets:s}=a,{input:o}=t;if("string"!==o.dtype)throw Error("Input must be of datatype string");if(s<=0)throw Error("Number of buckets must be at least 1");let i=r.data.get(o.dataId).values,l=(0,n.stringToHashBucketFastImpl)(i,s);return r.makeTensorInfo(o.shape,"int32",l)}}}),o("cWacD",function(t,r){e(t.exports,"stringToHashBucketFastImpl",()=>n),s("i64bB");var a=s("jjNRA");function n(e,t){let r=a.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)r[n]=a.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return r}}),o("4A00l",function(t,r){e(t.exports,"tanConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Tan,e=>Math.tan(e)),o={kernelName:a.Tan,backendName:"cpu",kernelFunc:n}}),o("3lmtf",function(t,r){e(t.exports,"tanhConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("l6afd").unaryKernelFunc)(a.Tanh,e=>Math.tanh(e)),o={kernelName:a.Tanh,backendName:"cpu",kernelFunc:n}}),o("eSPme",function(t,r){e(t.exports,"tensorScatterUpdateConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("YcuAy");let i={kernelName:n.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{tensor:n,indices:s,updates:i}=t,{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:c}=a.calculateShapes(i,s,n.shape),h=r.bufferSync(s),f=r.bufferSync(i),m=r.bufferSync(n),g=(0,o.scatterImpl)(h,f,n.shape,c,p,u,l,d,m,!1);return r.makeTensorInfo(n.shape,g.dtype,g.values)}}}),o("1P81J",function(t,r){e(t.exports,"tileConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("csahy"),o=s("bzU8O");let i={kernelName:a.Tile,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{reps:i}=a;(0,n.assertNotComplex)(s,"tile");let l=(0,o.tileImpl)(r.bufferSync(s),i);return r.makeTensorInfo(l.shape,l.dtype,l.values)}}}),o("bzU8O",function(t,r){e(t.exports,"tileImpl",()=>n),s("i64bB");var a=s("iG87S");function n(e,t){let r=Array(e.rank);for(let a=0;a<r.length;a++)r[a]=e.shape[a]*t[a];let n=(0,a.buffer)(r,e.dtype);for(let t=0;t<n.values.length;++t){let r=n.indexToLoc(t),a=Array(e.rank);for(let t=0;t<a.length;t++)a[t]=r[t]%e.shape[t];let s=e.locToIndex(a);n.values[t]=e.values[s]}return n}}),o("6dCHk",function(t,r){e(t.exports,"topKConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("csahy"),o=s("8tNzN");let i={kernelName:a.TopK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{k:i,sorted:l}=a;(0,n.assertNotComplex)(s,"topk");let u=r.data.get(s.dataId).values,[p,d]=(0,o.topKImpl)(u,s.shape,s.dtype,i,l);return[r.makeTensorInfo(p.shape,p.dtype,p.values),r.makeTensorInfo(d.shape,d.dtype,d.values)]}}}),o("8tNzN",function(t,r){e(t.exports,"topKImpl",()=>i),s("i64bB");var a=s("iG87S"),n=s("jjNRA");let o=(e,t)=>{let r=t.value-e.value;return 0===r?e.index-t.index:r};function i(e,t,r,s,i){let l=t[t.length-1],[u,p]=[e.length/l,l],d=n.getTypedArrayFromDType(r,u*s),c=n.getTypedArrayFromDType("int32",u*s);for(let t=0;t<u;t++){let r=t*p,a=e.subarray(r,r+p),l=Array(a.length);a.forEach((e,t)=>l[t]={value:e,index:t}),s<l.length&&(!function e(t,r,a=0,s=t.length-1){for(;s>a;){if(s-a>600){let n=s-a+1,o=r-a+1,i=Math.log(n),l=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*l*(n-l)/n)*Math.sign(o-n/2),p=Math.max(a,Math.floor(r-o*l/n+u)),d=Math.min(s,Math.floor(r+(n-o)*l/n+u));e(t,r,p,d)}let i=t[r],l=a,u=s;for(n.swap(t,a,r),o(t[s],i)>0&&n.swap(t,a,s);l<u;){for(n.swap(t,l,u),l++,u--;0>o(t[l],i);)l+=1;for(;o(t[u],i)>0;)u-=1}0===o(t[a],i)?n.swap(t,a,u):(u+=1,n.swap(t,u,s)),u<=r&&(a=u+1),r<=u&&(s=u-1)}}(l,s),l=l.slice(0,s)),i&&l.sort(o);let u=t*s,h=d.subarray(u,u+s),f=c.subarray(u,u+s);for(let e=0;e<s;e++)h[e]=l[e].value,f[e]=l[e].index}let h=t.slice();return h[h.length-1]=s,[(0,a.buffer)(h,r,d),(0,a.buffer)(h,"int32",c)]}}),o("kzm41",function(t,r){e(t.exports,"transformConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jjNRA");let o={kernelName:a.Transform,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:a}=e,{image:s,transforms:o}=t,{interpolation:u,fillMode:p,fillValue:d,outputShape:c}=r,[h,f,m,g]=s.shape,[x,y]=null!=c?c:[f,m],b=[h,x,y,g],v=n.computeStrides(s.shape),k=v[0],N=v[1],C=v[2],T=n.computeStrides(b),S=T[0],I=T[1],w=T[2],E=n.getTypedArrayFromDType(s.dtype,n.sizeFromShape(b));E.fill(d);let A=a.data.get(s.dataId).values,R=a.data.get(o.dataId).values;for(let e=0;e<h;++e){let t=1===o.shape[0]?R:R.subarray(8*e,8*e+8);for(let r=0;r<x;++r)for(let a=0;a<y;++a)for(let n=0;n<g;++n){let s,o=t[6]*a+t[7]*r+1;if(0===o)continue;let c=(t[0]*a+t[1]*r+t[2])/o,h=(t[3]*a+t[4]*r+t[5])/o,g=i(c,m,p),x=i(h,f,p);switch(u){case"nearest":s=l(A,f,m,k,N,C,e,Math.round(x),Math.round(g),n,d);break;case"bilinear":s=function(e,t,r,a,n,s,o,i,u,p,d){let c=Math.floor(i),h=Math.floor(u),f=c+1,m=h+1,g=(m-u)*l(e,t,r,a,n,s,o,c,h,p,d)+(u-h)*l(e,t,r,a,n,s,o,c,m,p,d),x=(m-u)*l(e,t,r,a,n,s,o,f,h,p,d)+(u-h)*l(e,t,r,a,n,s,o,f,m,p,d);return(f-i)*g+(i-c)*x}(A,f,m,k,N,C,e,x,g,n,d);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${u}`)}E[e*S+r*I+a*w+n]=s}return a.makeTensorInfo(b,s.dtype,E)}return{dataId:a.write(E,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function i(e,t,r){switch(r){case"reflect":var a,s,o,i,l,u=e,p=t;let d=u;if(d<0)if(p<=1)d=0;else{let e=2*p;d<e&&(d=e*Math.trunc(-d/e)+d),d=d<-p?d+e:-d-1}else if(d>p-1)if(p<=1)d=0;else{let e=2*p;(d-=e*Math.trunc(d/e))>=p&&(d=e-d-1)}return n.clamp(0,d,p-1);case"wrap":let c;return a=e,s=t,(c=a)<0?s<=1?c=0:c+=s*(Math.trunc(-c/(s-1))+1):c>s-1&&(s<=1?c=0:c-=s*Math.trunc(c/(s-1))),n.clamp(0,c,s-1);case"nearest":return o=e,i=t,n.clamp(0,o,i-1);default:return l=0,e}}function l(e,t,r,a,n,s,o,i,l,u,p){return 0<=i&&i<t&&0<=l&&l<r?e[o*a+i*n+l*s+u]:p}}),o("cbKbK",function(t,r){e(t.exports,"uniqueConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("csahy"),o=s("fjkAl");let i={kernelName:a.Unique,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:a}=e,{axis:s}=r,{x:i}=t;(0,n.assertNotComplex)(i,"unique");let l=a.data.get(i.dataId).values,{outputValues:u,outputShape:p,indices:d}=(0,o.uniqueImpl)(l,s,i.shape,i.dtype);return[a.makeTensorInfo(p,i.dtype,u),a.makeTensorInfo([d.length],"int32",d)]}}}),o("fjkAl",function(t,r){e(t.exports,"uniqueImpl",()=>o),s("i64bB");var a=s("9jCh7"),n=s("jjNRA");function o(e,t,r,s){let o=n.parseAxisParam(t,r)[0],i=[1,r[0],1];for(let e=0;e<o;e++)i[0]*=r[e];i[1]=r[o];for(let e=o+1;e<r.length;e++)i[2]*=r[e];let l=new Map,u=new Int32Array(r[o]),p=new(0,a.TensorBuffer)(i,s,e),d=[],c=1===i[0]&&1===i[2];for(let t=0;t<r[o];t++){let r;if(c)r=e[t].toString();else{let e=[];for(let r=0;r<i[0];r++)for(let a=0;a<i[2];a++)e.push(p.get(r,t,a));r=e.join(",")}let a=l.get(r);if(null!=a)u[t]=a;else{let e=l.size;l.set(r,e),u[t]=e,d.push(t)}}let h=i.slice();h[1]=l.size;let f=new(0,a.TensorBuffer)(h,s);d.forEach((e,t)=>{for(let r=0;r<i[0];r++)for(let a=0;a<i[2];a++)f.set(p.get(r,e,a),r,t,a)});let m=r.slice();return m[o]=h[1],{outputValues:f.values,outputShape:m,indices:u}}}),o("eXWuw",function(t,r){e(t.exports,"unpackConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("eL8rV"),o=s("aYBRE");let i={kernelName:a.Unpack,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{value:s}=t,{axis:i}=a;i<0&&(i+=s.shape.length);let l=s.shape.length,u=s.shape[i],p=Array(l-1),d=0;for(let e=0;e<l;e++)e!==i&&(p[d++]=s.shape[e]);let c=Array(l).fill(0),h=s.shape.slice();h[i]=1;let f=Array(u);for(let e=0;e<f.length;e++){c[i]=e;let t=(0,o.slice)({inputs:{x:s},backend:r,attrs:{begin:c,size:h}});f[e]=(0,n.reshape)({inputs:{x:t},backend:r,attrs:{shape:p}}),r.disposeIntermediateTensorInfo(t)}return f}}}),o("5S731",function(t,r){e(t.exports,"unsortedSegmentSumConfig",()=>h),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("csahy"),i=s("7LLjQ"),l=s("diO4l"),u=s("YMdKk"),p=s("gQOIy"),d=s("hZ1GH"),c=s("b9JjM");let h={kernelName:a.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,segmentIds:h}=t,{numSegments:f}=a;(0,o.assertNotComplex)(s,"unsortedSegmentSum");let m=s.shape.length,g=h.shape.length,x=[],y=[],b=m-g,v=h;for(let e=0;e<b;++e){let t=(0,u.expandDims)({inputs:{input:v},backend:r,attrs:{dim:e+1}});v=t,y.push(t)}for(let e=0;e<f;++e){let t=n.createScalarValue(e,"int32"),a=r.makeTensorInfo([],"int32",t),o=(0,l.equal)({inputs:{a:a,b:v},backend:r}),u=(0,i.cast)({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),d=(0,p.multiply)({inputs:{a:u,b:s},backend:r}),h=(0,c.sum)({inputs:{x:d},backend:r,attrs:{axis:0,keepDims:!1}});x.push(h),y.push(a),y.push(o),y.push(u),y.push(d),y.push(h)}let k=(0,d.pack)({inputs:x,backend:r,attrs:{axis:0}});return y.forEach(e=>r.disposeIntermediateTensorInfo(e)),k}}}),o("5jdc5",function(t,r){e(t.exports,"version_webgl",()=>s("cGozA").version),s("2P9qH"),s("gnziS")}),o("2P9qH",function(t,r){e(t.exports,"version_webgl",()=>s("cGozA").version),s("i64bB");var a=s("4GTZ3"),n=s("c2DT1"),o=s("eWcb0");s("cGozA");var i=s("2I5t7");a.isBrowser()&&(0,n.registerBackend)("webgl",()=>new(0,o.MathBackendWebGL),2),i.forceHalfFloat}),o("eWcb0",function(t,r){e(t.exports,"MathBackendWebGL",()=>B),s("363mu"),s("i64bB");var a=s("7MaPk"),n=s("iG87S"),o=s("fJqML"),i=s("c2DT1"),l=s("ibsdL"),u=s("lzjc8"),p=s("9LtVT"),d=s("3xp7o"),c=s("jjNRA"),h=s("6i1cu"),f=s("1qHPh"),m=s("accIG"),g=s("kyvnG"),x=s("k8qyu"),y=s("flFYC"),b=s("exdM9"),v=s("l74kj"),k=s("c4giy"),N=s("4Lbzm"),C=s("2fw6V"),T=s("6lSW0"),S=s("h9ECX"),I=s("byvLX"),w=s("inhaz"),E=s("ioSMC"),A=s("dqDgm"),R=s("ldAxw");let P=u.whereImpl,$={},F=(0,l.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class B extends o.KernelBackend{nextDataId(){return B.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,l.env)().getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");if(null!=e){if(e instanceof v.GPGPUContext)t=e;else{let r=(0,h.getWebGLContext)((0,l.env)().getNumber("WEBGL_VERSION"),e);t=new(0,v.GPGPUContext)(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{var r;let e=(0,h.getWebGLContext)((0,l.env)().getNumber("WEBGL_VERSION"));t=new(0,v.GPGPUContext)(e),this.binaryCache=((r=(0,l.env)().getNumber("WEBGL_VERSION"))in $||($[r]={}),$[r]),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new(0,I.TextureManager)(this.gpgpu),this.numMBBeforeWarning=null==(0,l.env)().global.screen?1024:(0,l.env)().global.screen.height*(0,l.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new(0,o.DataStorage)(this,(0,i.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,a,n,s){let o=this.makeTensorInfo(t,r),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,n]},i.texShape=[a,n];let l=R.getShapeAs3D(t),u=new(0,y.EncodeMatrixProgram)(l,!1,s),p=this.runWebGLProgram(u,[o],r,[[a,n]]);return p.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),p.dataId}write(e,t,r){if(((0,l.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,l.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:r,values:e,usage:S.TextureUsage.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,r,a,n){if((0,l.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:a,values:t,usage:S.TextureUsage.UPLOAD,refCount:n})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,r,{values:n,dtype:s,complexTensorInfos:o,slice:i,shape:l,isPacked:u}=this.texData.get(e);if(null!=i){let t;t=u?new(0,E.UnaryOpPackedProgram)(l,w.CLONE):new(0,w.UnaryOpProgram)(l,w.CLONE);let r=this.runWebGLProgram(t,[{dataId:e,shape:l,dtype:s}],s),a=this.readSync(r.dataId);return this.disposeIntermediateTensorInfo(r),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;let p=null!=this.activeTimers;if(p&&(t=c.now()),"complex64"===s){let e=this.readSync(o.real.dataId),t=this.readSync(o.imag.dataId);r=a.mergeRealAndImagArrays(e,t)}else r=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=c.now()-t),this.convertAndCacheOnCPU(e,r)}async read(e){let t,r;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:n,shape:s,slice:o,dtype:u,complexTensorInfos:p,isPacked:d}=this.texData.get(e);if(null!=o){let t;t=d?new(0,E.UnaryOpPackedProgram)(s,w.CLONE):new(0,w.UnaryOpProgram)(s,w.CLONE);let r=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:u}],u),a=this.read(r.dataId);return this.disposeIntermediateTensorInfo(r),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,l.env)().getBool("DEBUG")&&!(0,l.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,l.env)().getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h=null;if("complex64"!==u&&(0,l.env)().get("WEBGL_BUFFER_SUPPORTED")){t=this.decode(e);let r=this.texData.get(t.dataId);h=this.gpgpu.createBufferFromTexture(r.texture.texture,...S.getDenseTexShape(s))}if(this.pendingRead.set(e,[]),"complex64"!==u&&await this.gpgpu.createAndWaitForFence(),"complex64"===u){let e=await Promise.all([this.read(p.real.dataId),this.read(p.imag.dataId)]),t=e[0],n=e[1];r=a.mergeRealAndImagArrays(t,n)}else if(null==h)r=this.getValuesFromTexture(e);else{let e=c.sizeFromShape(s);r=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=t&&this.disposeIntermediateTensorInfo(t),null!=h){let e=this.gpgpu.gl;R.callAndCheck(e,()=>e.deleteBuffer(h))}let f=this.convertAndCacheOnCPU(e,r),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach(e=>e(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.engine)().removeDataId(e,this),this.pendingDeletes--),f}readToGPU(e,t={}){let{values:r,shape:a,slice:n,dtype:s,isPacked:o,texture:l}=this.texData.get(e);if("complex64"===s)throw Error("Does not support reading texture for complex64 dtype.");if(null!=n){let r;r=o?new(0,E.UnaryOpPackedProgram)(a,w.CLONE):new(0,w.UnaryOpProgram)(a,w.CLONE);let n=this.runWebGLProgram(r,[{dataId:e,shape:a,dtype:s}],s),i=this.readToGPU(n,t);return this.disposeIntermediateTensorInfo(n),i}if(null==l)if(null!=r)throw Error("Data is not on GPU but on CPU.");else throw Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape);return Object.assign({tensorRef:(0,i.engine)().makeTensorFromTensorInfo(u)},this.texData.get(u.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let r=t.map(e=>c.decodeString(e));return(0,n.buffer)(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return(0,n.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let r=e[t];if(!R.canBeRepresented(r)){if((0,l.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${r} cannot be represented on this device.`)}}}getValuesFromTexture(e){let{shape:t,dtype:r,isPacked:a}=this.texData.get(e),n=c.sizeFromShape(t);if((0,l.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let r=this.decode(e),a=this.texData.get(r.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...S.getDenseTexShape(t)).subarray(0,n);return this.disposeIntermediateTensorInfo(r),s}let s=(0,l.env)().getBool("WEBGL_PACK")&&!0===a,o=s?R.getShapeAs3D(t):t,i=s?new(0,x.EncodeFloatPackedProgram)(o):new(0,g.EncodeFloatProgram)(o),u=this.runWebGLProgram(i,[{shape:o,dtype:r,dataId:e}],"float32"),p=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,n);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return(0,l.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,r=[],a=!1;null==this.programTimersStack?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,e();let n=c.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=c.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,l.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(n);o.kernelMs=c.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,l.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:c.now(),endMs:null}}endTimer(e){return(0,l.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=c.now(),e}async getQueryTime(e){return(0,l.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:r,texShape:a,usage:n,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(t,a,n,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=F){return(0,l.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&c.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){a.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return P(e.shape,t)}packedUnaryOp(e,t,r){let a=new(0,E.UnaryOpPackedProgram)(e.shape,t),n=this.compileAndRun(a,[e],r);return(0,i.engine)().makeTensorFromTensorInfo(n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=(0,N.simpleAbsImplCPU)(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,l.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,w.ABS,e.dtype);let t=new(0,w.UnaryOpProgram)(e.shape,w.ABS),r=this.compileAndRun(t,[e]);return(0,i.engine)().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let a;if("string"===t&&null!=r&&r.length>0&&c.isString(r[0])){let n=r.map(e=>c.encodeString(e));a=this.write(n,e,t)}else a=this.write(r,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,r){return(0,i.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){let t=new(0,A.UnpackProgram)(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new(0,C.PackProgram)(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let r=[R.getBatchDim(e.shape),...R.getRowsCols(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},n=[R.getBatchDim(t),...R.getRowsCols(t)],s=new(0,T.ReshapePackedProgram)(n,r),o=this.runWebGLProgram(s,[a],e.dtype,[r],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let r,{isPacked:a,shape:n,dtype:s}=this.texData.get(e);if(null!=t){let e=c.sizeFromShape(n),r=t[0]*t[1]*4;c.assert(e<=r,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=R.getShapeAs3D(n);r=a?new(0,m.DecodeMatrixPackedProgram)(o):new(0,f.DecodeMatrixProgram)(o);let i=[null!=t?t:S.getDenseTexShape(o)],l=this.runWebGLProgram(r,[{shape:o,dtype:s,dataId:e}],s,i,!0,t);return{dtype:s,shape:n,dataId:l.dataId}}runWebGLProgram(e,t,r,a,n=!1,s){let o,i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===S.PackingScheme.DENSE&&(u.texShape=(null!=s?s:S.getDenseTexShape(e.outputShape)).map(e=>2*e)),null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===c.sizeFromShape(i.shape))return u.values=c.getTypedArrayFromDType(i.dtype,0),i;let p=[],d=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let r=this.texData.get(t.dataId);if(null==r.texture){if(!e.packedInputs&&c.sizeFromShape(t.shape)<=(0,l.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:r.values};e.packedInputs&&(r.isPacked=!0,r.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!r.isPacked!=!!e.packedInputs)t=r.isPacked?this.unpackTensor(t):this.packTensor(t),p.push(t),r=this.texData.get(t.dataId);else if(r.isPacked&&!R.isReshapeFree(r.shape,t.shape)){let e=t,a=t.shape;t.shape=r.shape,t=this.packedReshape(t,a),p.push(t),r=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:r,isUniform:!1}});this.uploadToGPU(i.dataId);let h={shape:i.shape,texData:u,isUniform:!1},f=k.makeShaderKey(e,d,h),m=this.getAndSaveBinary(f,()=>k.compileProgram(this.gpgpu,e,d,h)),g=null!=this.activeTimers;g&&(o=this.startTimer()),(0,l.env)().get("ENGINE_COMPILE_ONLY")||k.runProgram(this.gpgpu,m,d,h,a),p.forEach(e=>this.disposeIntermediateTensorInfo(e)),g&&(o=this.endTimer(o),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(o)}));let x=(0,l.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){let e=c.now();e-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,l.env)().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===n){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,r,a,n=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,a,n)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,l.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.tidy)(()=>{if(!(0,l.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=(0,l.env)().getBool("DEBUG");(0,l.env)().set("DEBUG",!1);let t=this.abs((0,d.scalar)(1e-8)).dataSync()[0];if((0,l.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t,r=this.texData.get(e),{shape:a,dtype:n,values:s,texture:o,usage:i,isPacked:u}=r;if(null!=o)return;let p=null!=this.activeTimers;p&&(t=c.now());let d=r.texShape;if(null==d&&(r.texShape=d=R.getTextureShapeFromLogicalShape(a,u)),null!=s){let e,o=R.getShapeAs3D(a),i=d[1],h=d[0],f=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!f)&&([i,h]=S.getPackedMatrixTextureShapeWidthHeight(d[0],d[1])),e=u?new(0,b.EncodeMatrixPackedProgram)(o,f):new(0,y.EncodeMatrixProgram)(o,f);let m=f?[h,i]:d,g=this.makeTensorInfo(m,n),x=this.texData.get(g.dataId);f?x.usage=S.TextureUsage.PIXELS:x.usage=S.TextureUsage.UPLOAD,x.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),i,h,s);let v=[[h,i]],k=this.runWebGLProgram(e,[g],n,v,!0),N=this.texData.get(k.dataId);r.texShape=N.texShape,r.isPacked=N.isPacked,r.usage=N.usage,(0,l.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(r.texture=N.texture,r.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(g),p&&(this.uploadWaitMs+=c.now()-t)}else r.texture=this.acquireTexture(d,i,n,u)}convertAndCacheOnCPU(e,t){let r=this.texData.get(e),{dtype:a}=r;return null!=t&&(r.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let r="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<r.length;++t)r[t]=Math.round(e[t]);return r}throw Error(`Unknown dtype ${t}`)}(t,a)),r.values}acquireTexture(e,t,r,a){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*c.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let r=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(r)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await (0,p.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw R.logShaderSourceAndInfoLog(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.");throw Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:r,infLoc:a,nanLoc:n,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=(0,k.getUniformLocations)(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=a,e.nanLoc=n,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";let{texture:a,height:n,width:s,channels:o}=e,l=(0,i.engine)().backend;if(!l.gpgpu.gl.isTexture(a))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=l.writeTexture(a,t,r,n,s,o);return(0,i.engine)().makeTensorFromDataId(u,t,r,l)}}B.nextDataId=0}),o("363mu",function(e,t){s("i64bB");var r=s("4GTZ3"),a=s("ibsdL"),n=s("ldAxw");let o=(0,a.env)();o.registerFlag("HAS_WEBGL",()=>o.getNumber("WEBGL_VERSION")>0),o.registerFlag("WEBGL_VERSION",()=>(0,n.isWebGLVersionEnabled)(2)?2:+!!(0,n.isWebGLVersionEnabled)(1)),o.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),o.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===o.get("WEBGL_VERSION")),o.registerFlag("WEBGL_CPU_FORWARD",()=>!0),o.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),o.registerFlag("WEBGL_PACK",()=>o.getBool("HAS_WEBGL")),o.registerFlag("WEBGL_PACK_NORMALIZATION",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_CLIP",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_REDUCE",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_LAZILY_UNPACK",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_CONV_IM2COL",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>o.getBool("WEBGL_PACK")),o.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(0,n.getWebGLMaxTextureSize)(o.getNumber("WEBGL_VERSION"))),o.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(0,n.getMaxTexturesInShader)(o.getNumber("WEBGL_VERSION"))),o.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=o.getNumber("WEBGL_VERSION");return 0===e?0:(0,n.getWebGLDisjointQueryTimerVersion)(e)}),o.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>o.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.isMobile()),o.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(0,n.isCapableOfRenderingToFloatTexture)(o.getNumber("WEBGL_VERSION"))),o.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!o.getBool("WEBGL_FORCE_F16_TEXTURES")&&o.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),o.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(0,n.isDownloadFloatTextureEnabled)(o.getNumber("WEBGL_VERSION"))),o.registerFlag("WEBGL_FENCE_API_ENABLED",()=>(0,n.isWebGLFenceEnabled)(o.getNumber("WEBGL_VERSION"))),o.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>4*!!o.getBool("WEBGL_RENDER_FLOAT32_ENABLED")),o.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),o.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>r.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),o.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),o.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),o.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),o.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),o.registerFlag("WEBGL_EXP_CONV",()=>!1),o.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>o.getBool("IS_TEST")),o.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),o.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),o.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),o.registerFlag("ENGINE_COMPILE_ONLY",()=>!1)}),o("ldAxw",function(t,r){let a,n;e(t.exports,"callAndCheck",()=>p),e(t.exports,"canBeRepresented",()=>d),e(t.exports,"getExtensionOrThrow",()=>c),e(t.exports,"createVertexShader",()=>h),e(t.exports,"createFragmentShader",()=>f),e(t.exports,"logShaderSourceAndInfoLog",()=>g),e(t.exports,"createProgram",()=>x),e(t.exports,"linkProgram",()=>y),e(t.exports,"validateProgram",()=>b),e(t.exports,"createStaticVertexBuffer",()=>v),e(t.exports,"createStaticIndexBuffer",()=>k),e(t.exports,"createTexture",()=>N),e(t.exports,"validateTextureSize",()=>C),e(t.exports,"createFramebuffer",()=>T),e(t.exports,"bindVertexBufferToProgramAttribute",()=>S),e(t.exports,"getProgramUniformLocationOrThrow",()=>I),e(t.exports,"getProgramUniformLocation",()=>w),e(t.exports,"bindTextureToProgramUniformSampler",()=>E),e(t.exports,"bindColorTextureToFramebuffer",()=>A),e(t.exports,"unbindColorTextureFromFramebuffer",()=>R),e(t.exports,"validateFramebuffer",()=>P),e(t.exports,"getBatchDim",()=>F),e(t.exports,"getRowsCols",()=>B),e(t.exports,"getShapeAs3D",()=>D),e(t.exports,"getTextureShapeFromLogicalShape",()=>M),e(t.exports,"isReshapeFree",()=>O),e(t.exports,"getWebGLMaxTextureSize",()=>L),e(t.exports,"getMaxTexturesInShader",()=>_),e(t.exports,"getWebGLDisjointQueryTimerVersion",()=>V),e(t.exports,"hasExtension",()=>G),e(t.exports,"isWebGLVersionEnabled",()=>z),e(t.exports,"isCapableOfRenderingToFloatTexture",()=>W),e(t.exports,"isDownloadFloatTextureEnabled",()=>U),e(t.exports,"isWebGLFenceEnabled",()=>q),e(t.exports,"assertNotComplex",()=>H),s("i64bB");var o=s("ibsdL"),i=s("jjNRA"),l=s("6i1cu"),u=s("h9ECX");function p(e,t){let r=t();return(0,o.env)().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),r}function d(e){return!!((0,o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||596e-10<Math.abs(e)&&65504>Math.abs(e))}function c(e,t){return $(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function h(e,t){let r=$(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(p(e,()=>e.shaderSource(r,t)),p(e,()=>e.compileShader(r)),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),Error("Failed to compile vertex shader.");return r}function f(e,t){let r=$(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(p(e,()=>e.shaderSource(r,t)),p(e,()=>e.compileShader(r)),(0,o.env)().get("ENGINE_COMPILE_ONLY"))return r;if(!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw g(t,e.getShaderInfoLog(r)),Error("Failed to compile fragment shader.");return r}let m=/ERROR: [0-9]+:([0-9]+):/g;function g(e,t){let r=m.exec(t);if(null==r){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let a=+r[1],n=e.split("\n"),s=n.length.toString().length+2,o=n.map((e,t)=>i.rightPad((t+1).toString(),s)+e),l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);let u=o.slice(0,a-1),p=o.slice(a-1,a),d=o.slice(a);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${i.rightPad(p[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function x(e){return $(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function y(e,t){if(p(e,()=>e.linkProgram(t)),!(0,o.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}function b(e,t){if(p(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function v(e,t){let r=$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),p(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function k(e,t){let r=$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return p(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),p(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function N(e){return $(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function C(e,t){let r=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>r||t>r)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${r}x${r}].`)}function T(e){return $(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function S(e,t,r,a,n,s,o){let i=e.getAttribLocation(t,r);return -1!==i&&(p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),p(e,()=>e.vertexAttribPointer(i,n,e.FLOAT,!1,s,o)),p(e,()=>e.enableVertexAttribArray(i)),!0)}function I(e,t,r){return $(e,()=>e.getUniformLocation(t,r),'uniform "'+r+'" not present in program.')}function w(e,t,r){return e.getUniformLocation(t,r)}function E(e,t,r,a){p(e,()=>{(function(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>r){let e=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw Error(`textureUnit must be in ${e}.`)}})(e,a),p(e,()=>e.activeTexture(e.TEXTURE0+a)),p(e,()=>e.bindTexture(e.TEXTURE_2D,t))}),p(e,()=>e.uniform1i(r,a))}function A(e,t,r){p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),p(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function R(e,t){p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),p(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function P(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,r){let a=p(e,()=>t());if(null==a)throw Error(r);return a}function F(e,t=2){return i.sizeFromShape(e.slice(0,e.length-t))}function B(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function D(e){let t=[1,1,1];return 0!==e.length&&(1!==e.length||1!==e[0])&&(t=[F(e),...B(e)]),t}function M(e,t=!1){let r=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,o.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&(0,o.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=r/2),t&&(r*=2,a*=2,1===(e=e.map((t,r)=>r>=e.length-2?i.nearestLargerEven(e[r]):e[r])).length&&(e=[2,e[0]])),2!==e.length&&(e=i.squeezeShape(e).newShape);let n=i.sizeFromShape(e),s=null;e.length<=1&&n<=r?s=[1,n]:2===e.length&&e[0]<=r&&e[1]<=r?s=e:3===e.length&&e[0]*e[1]<=r&&e[2]<=r?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=r&&e[1]*e[2]<=r?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r&&(s=[e[0],e[1]*e[2]*e[3]]);let l=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||l)if(t){let t=F(e),r=2,a=2;e.length&&([r,a]=B(e)),n=r/2*t*(a/2),s=i.sizeToSquarishShape(n).map(e=>2*e)}else s=i.sizeToSquarishShape(n);return s}function O(e,t){if(e=e.slice(-2),t=t.slice(-2),i.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let r=e[e.length-1],a=t[t.length-1];if(r===a||r%2==0&&a%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function L(e){if(null==a){let t=(0,l.getWebGLContext)(e);a=t.getParameter(t.MAX_TEXTURE_SIZE)}return a}function _(e){if(null==n){let t=(0,l.getWebGLContext)(e);n=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,n)}function V(e){let t;if(0===e)return 0;let r=(0,l.getWebGLContext)(e);return G(r,"EXT_disjoint_timer_query_webgl2")&&2===e?2:+!!G(r,"EXT_disjoint_timer_query")}function G(e,t){return null!=e.getExtension(t)}function z(e){try{let t=(0,l.getWebGLContext)(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function W(e){if(0===e)return!1;let t=(0,l.getWebGLContext)(e);if(1===e){if(!G(t,"OES_texture_float"))return!1}else if(!G(t,"EXT_color_buffer_float"))return!1;return j(t)}function U(e){if(0===e)return!1;let t=(0,l.getWebGLContext)(e);if(1===e){if(!G(t,"OES_texture_float")||!G(t,"WEBGL_color_buffer_float"))return!1}else{if(G(t,"EXT_color_buffer_float"))return j(t);let e="EXT_color_buffer_half_float";if(G(t,e)){let n=t.getExtension(e);var r=t,a=n;let s=(0,u.getTextureConfig)(r,a),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,s.internalFormatHalfFloat,1,1,0,s.textureFormatFloat,s.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let l=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(i),l}return!1}return j(t)}function j(e){let t=(0,u.getTextureConfig)(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let n=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),n}function q(e){return 2===e&&null!=(0,l.getWebGLContext)(e).fenceSync}function H(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&i.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}}),o("6i1cu",function(t,r){e(t.exports,"setWebGLContext",()=>i),e(t.exports,"getWebGLContext",()=>function e(t,r){if(!(t in n)||null!=r){let e=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=null==t?function(e){if(!(0,a.env)().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(r.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete n[e]},!1),(0,a.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(o.failIfMajorPerformanceCaveat=!1),1===e)?r.getContext("webgl",o)||r.getContext("experimental-webgl",o):r.getContext("webgl2",o)}(t,r);if(null===e)return console.log("Could not get context for WebGL version",t),null;n[t]=e}let s=n[t];return null==s||s.isContextLost()?(delete n[t],e(t)):(s.disable(s.DEPTH_TEST),s.disable(s.STENCIL_TEST),s.disable(s.BLEND),s.disable(s.DITHER),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SAMPLE_COVERAGE),s.enable(s.SCISSOR_TEST),s.enable(s.CULL_FACE),s.cullFace(s.BACK),n[t])}),s("i64bB");var a=s("ibsdL");let n={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){n[e]=t}}),o("h9ECX",function(t,r){e(t.exports,"PackingScheme",()=>i),e(t.exports,"TextureUsage",()=>l),e(t.exports,"PhysicalTextureType",()=>u),e(t.exports,"getUnpackedMatrixTextureShapeWidthHeight",()=>c),e(t.exports,"getUnpackedArraySizeFromMatrixSize",()=>h),e(t.exports,"getDenseTexShape",()=>f),e(t.exports,"getPackedMatrixTextureShapeWidthHeight",()=>m),e(t.exports,"getPackedRGBAArraySizeFromMatrixShape",()=>g),e(t.exports,"getTextureConfig",()=>x),s("i64bB");var a,n,o,i,l,u,p=s("ibsdL"),d=s("jjNRA");function c(e,t){return[t,e]}function h(e,t){return e*t}function f(e){let t=Math.ceil(d.sizeFromShape(e)/4);return d.sizeToSquarishShape(t)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){let[r,a]=m(e,t);return r*a*4}function x(e,t){let r,a,n,s,o,i,l,u,d,c;return 2===(0,p.env)().getNumber("WEBGL_VERSION")?(r=e.R32F,a=e.R16F,n=e.RGBA16F,s=e.RGBA32F,o=e.RED,l=4,u=1,d=e.HALF_FLOAT,c=e.FLOAT,i=e.RGBA8):(r=e.RGBA,a=e.RGBA,n=e.RGBA,s=e.RGBA,o=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT,i=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:n,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:i,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:c}}(a=i||(i={}))[a.DENSE=0]="DENSE",a[a.SHARED_BATCH=1]="SHARED_BATCH",(n=l||(l={}))[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",(o=u||(u={}))[o.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",o[o.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",o[o.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",o[o.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",o[o.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}),o("1qHPh",function(t,r){e(t.exports,"DecodeMatrixProgram",()=>l);var a=s("3A9Dm"),n=s("c4giy"),o=s("4cl39"),i=s("h9ECX");class l{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=(0,a.getGlslDifferences)();this.outputShape=e,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?o.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],e):o.getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}}),o("3A9Dm",function(t,r){e(t.exports,"getGlslDifferences",()=>n),s("i64bB");var a=s("ibsdL");function n(){let e,t,r,n,s,o,i,l,u,p;return 2===(0,a.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",r="out",n="in",s="texture",o="outputColor",i="out vec4 outputColor;",l=(0,a.env)().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",n="varying",s="texture2D",o="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:n,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:p}}}),o("c4giy",function(t,r){e(t.exports,"compileProgram",()=>u),e(t.exports,"getUniformLocations",()=>p),e(t.exports,"runProgram",()=>c),e(t.exports,"makeShaderKey",()=>h),e(t.exports,"useShapeUniforms",()=>f),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("jjNRA"),i=s("fYZIp"),l=s("ldAxw");function u(e,t,r,a){let s=r.map((e,r)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[r],shapeInfo:a}}),o=s.map(e=>e.shapeInfo),u={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},d=i.makeShader(s,u,t),c=(0,l.createFragmentShader)(e.gl,d),h=e.createProgram(c);return(0,n.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:d,webGLProgram:h,inShapeInfos:o,outShapeInfo:u,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(h),Object.assign({program:t,fragmentShader:c,source:d,webGLProgram:h,inShapeInfos:o,outShapeInfo:u},p(e,t,h)))}function p(e,t,r){let a,s,o,i=[],l=[],u=null,p=null;for(let a of(p=e.getUniformLocation(r,"NAN",!1),1===(0,n.env)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(r,"INFINITY",!1)),t.variableNames)){let n={name:a,uniform:e.getUniformLocation(r,a,!1),offset:e.getUniformLocation(r,`offset${a}`,!1)};t.enableShapeUniforms&&(n.shape=e.getUniformLocation(r,`${a}Shape`,!1),n.texShape=e.getUniformLocation(r,`${a}TexShape`,!1)),i.push(n)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(r,"outShape",!1),o=e.getUniformLocation(r,"outShapeStrides",!1),s=e.getUniformLocation(r,"outTexShape",!1)),t.customUniforms)for(let a of t.customUniforms)l.push(e.getUniformLocation(r,a.name,!1));return{variablesLocations:i,customUniformLocations:l,infLoc:u,nanLoc:p,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:s}}function d(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,r)=>{let a=e.logicalShape,n=t[r],s=n.shape;if(!o.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&n.isUniform)return;let i=e.texShape,l=n.isUniform?null:n.texData.texShape;if(!o.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function c(e,t,r,a,s){t.program.enableShapeUniforms||(d(t.inShapeInfos,r),d([t.outShapeInfo],[a]));let l=a.texData.texture,u=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(l.texture,u[0],u[1]):e.setOutputMatrixTexture(l.texture,u[0],u[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,n.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<r.length;++a){let n=r[a],{uniform:s,offset:l,shape:u,texShape:p}=t.variablesLocations[a];if(u){let{uniformShape:r}=i.getUniformInfoFromShape(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(p&&e.gl.uniform2i(p,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(2>o.sizeFromShape(n.shape))e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=n.texData.slice&&null!=l&&e.gl.uniform1i(l,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,a)}}let p=t.outShapeLocation;if(p)switch(a.shape.length){case 1:e.gl.uniform1iv(p,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(p,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(p,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(p,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let r=o.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(r));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(r));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(r))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s)for(let r=0;r<t.program.customUniforms.length;++r){let a=t.program.customUniforms[r],n=t.customUniformLocations[r],o=s[r];if("float"===a.type)e.gl.uniform1fv(n,o);else if("vec2"===a.type)e.gl.uniform2fv(n,o);else if("vec3"===a.type)e.gl.uniform3fv(n,o);else if("vec4"===a.type)e.gl.uniform4fv(n,o);else if("int"===a.type)e.gl.uniform1iv(n,o);else if("ivec2"===a.type)e.gl.uniform2iv(n,o);else if("ivec3"===a.type)e.gl.uniform3iv(n,o);else if("ivec4"===a.type)e.gl.uniform4iv(n,o);else throw Error(`uniform type ${a.type} is not supported yet.`)}e.executeProgram()}function h(e,t,r){let s="";t.concat(r).forEach(t=>{let n=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let l=t.texData.texShape,{useSqueezeShape:u,uniformShape:p,keptDims:d}=i.getUniformInfoFromShape(e.packedInputs,t.shape,l),c="",h="",f="";if(1===p.length&&e.packedInputs){let e=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==p.length||e.packedInputs){if(p.length>2&&!e.packedInputs){let e=o.computeStrides(p);f=`${e[0]===l[1]}_${e[e.length-1]===l[1]}`}}else h=`${p[0]>1}_${p[1]>1}`;let m=t.shape.length,g=2===p.length&&o.arraysEqual(t.shape,l),x=1===o.sizeFromShape(t.shape),y=a.getBroadcastDims(t.shape,r.shape),b=!e.packedInputs&&m===r.shape.length&&o.arraysEqual(l,r.texData.texShape),v=e.packedInputs||p.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${b}_${u?d:""}_${p.length}_${x}_${y}_${g}_${c}_${h}_${f}_${v}_${n}`}else{let e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${n}`}});let l=e.userCode,u=e.constructor.name;return u+("_"+s+"_"+l+`${(0,n.env)().getNumber("WEBGL_VERSION")}`)}function f(e){return(0,n.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}}),o("fYZIp",function(t,r){e(t.exports,"makeShader",()=>u),e(t.exports,"getUniformInfoFromShape",()=>y),e(t.exports,"getCoordsDataType",()=>x),s("i64bB");var a=s("7MaPk"),n=s("jjNRA"),o=s("3A9Dm"),i=s("4cl39");let{getBroadcastDims:l}=a;function u(e,t,r){var a,s,u,k;let N,C,T=[];if(e.forEach(e=>{let t=n.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?T.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(T.push(`uniform sampler2D ${e.name};`),T.push(`uniform int offset${e.name};`)),r.enableShapeUniforms){let{uniformShape:t}=y(r.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:T.push(`uniform int ${e.name}Shape;`);break;case 2:T.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:T.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:T.push(`uniform ivec4 ${e.name}Shape;`)}T.push(`uniform ivec2 ${e.name}TexShape;`)}}),r.enableShapeUniforms){switch(t.logicalShape.length){case 1:T.push("uniform int outShape;");break;case 2:T.push("uniform ivec2 outShape;"),T.push("uniform int outShapeStrides;");break;case 3:T.push("uniform ivec3 outShape;"),T.push("uniform ivec2 outShapeStrides;");break;case 4:T.push("uniform ivec4 outShape;"),T.push("uniform ivec3 outShapeStrides;")}T.push("uniform ivec2 outTexShape;")}r.customUniforms&&r.customUniforms.forEach(e=>{T.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let S=T.join("\n"),I=e.map(e=>(function(e,t,r=!1,a){let s="";r?s+=function e(t,r){switch(t.shapeInfo.logicalShape.length){case 0:var a=t;let s=a.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),l=(0,o.getGlslDifferences)();return`
    vec4 ${i}() {
      return ${l.texture2D}(${s}, halfCR);
    }
  `;case 1:return function(e,t){let r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),n=e.shapeInfo.texShape,s=(0,o.getGlslDifferences)();if(t)return`
    vec4 ${a}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${r}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${a}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${r}, uv);
    }
  `}(t,r);case 2:return function(e,t){let r=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,l=i[0],u=i[1],p=(0,o.getGlslDifferences)();if(null!=i&&n.arraysEqual(r,i))return t?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);

        return ${p.texture2D}(${a}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${l}.0);

        return ${p.texture2D}(${a}, uv);
      }
    `;if(t)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${p.texture2D}(${a}, uv);
    }
  `;let d=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(r[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${d[0]}, ${d[1]}, row, col);
      return ${p.texture2D}(${a}, uv);
    }
  `}(t,r);case 3:return function(t,r){let a=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===a[0]){let n=b(t,a.slice(1));return`
        ${e(n,r)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${v(["b","row","col"],[1,2])});
        }
      `}let u=(0,o.getGlslDifferences)();if(r)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let p=l[0],d=l[1],c=Math.ceil(a[2]/2),h=c*Math.ceil(a[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${d}, ${h}, ${c}, b, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}(t,r);default:return function(e,t){let r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),n=(0,o.getGlslDifferences)();if(t)return`
    vec4 ${a}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${r}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${r}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${r}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,l=e.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],p=u[0],d=u[1],c=Math.ceil(s[i-1]/2),h=c*Math.ceil(s[i-2]/2),f="int b, int row, int col",m=`b * ${h} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<i-1;e++)f=`int b${e}, `+f,h*=s[i-e-1],m=`b${e} * ${h} + `+m;return`
    vec4 ${a}(${f}) {
      int index = ${m};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${p});
      return ${n.texture2D}(${r}, uv);
    }
  `}(t,r)}}(e,a):s+=function e(t,r=!1){let a=t.shapeInfo.logicalShape;switch(a.length){case 0:return function(e,t){let r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${r};}`;let[n,s]=e.shapeInfo.texShape;if(1===n&&1===s)return`
      float ${a}() {
        return sampleTexture(${r}, halfCR);
      }
    `;let o=m(r);if(t)return`
    float ${a}() {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], ${o});
      return sampleTexture(${r}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${a}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 1:return function(e,t){let r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`
      float ${a}(int index) {
        ${g(e)}
      }
    `;let n=e.shapeInfo.texShape,s=n[0],o=n[1];if(1===o&&1===s)return`
      float ${a}(int index) {
        return sampleTexture(${r}, halfCR);
      }
    `;let i=m(r);return 1===o?t?`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${r}, uv);
      }
    `:1===s?t?`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${r}, uv);
      }
    `:t?`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${i});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 2:return function(t,r){let a=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape;if(null!=i&&n.arraysEqual(a,i)){if(r)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let e=i[0],t=i[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:l,keptDims:u}=n.squeezeShape(a);if(l.length<a.length){let a=b(t,l);return`
      ${e(a,r)}
      float ${o}(int row, int col) {
        return ${o}(${v(["row","col"],u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${g(t)}
      }
    `;let p=i[0],d=i[1],c=m(s);return 1===d?r?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `:1===p?r?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:r?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${c};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${c};
    vec2 uv = uvFromFlat(${p}, ${d}, index);
    return sampleTexture(${s}, uv);
  }
`}(t,r);case 3:return function(t,r){let a=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=a[1]*a[2],l=a[2],{newShape:u,keptDims:p}=n.squeezeShape(a);if(u.length<a.length){let a=b(t,u);return`
        ${e(a,r)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${v(["row","col","depth"],p)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${l}, 1)));
        ${g(t)}
      }
    `;let d=t.shapeInfo.texShape,c=d[0],h=d[1],f=t.shapeInfo.flatOffset;if(h===i&&null==f)return r?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${l}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${c}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===l&&null==f)return r?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `;let x=m(s);return r?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${x};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${l} + depth + ${x};
        vec2 uv = uvFromFlat(${c}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}(t,r);case 4:return function(t,r){let a=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=a[3],l=a[2]*i,u=a[1]*l,{newShape:p,keptDims:d}=n.squeezeShape(a);if(p.length<a.length){let a=b(t,p);return`
      ${e(a,r)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${v(["row","col","depth","depth2"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${u}, ${l}, ${i}, 1)));
        ${g(t)}
      }
    `;let c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],x=h[1],y=`int stride2 = ${s}Shape[3];`,k=`int stride1 = ${s}Shape[2] * stride2;`,N=`int stride0 = ${s}Shape[1] * stride1;`;if(x===u&&null==c)return r?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${y}
        ${k}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${l}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(x===i&&null==c)return r?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;let C=m(s);return r?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${y}
      ${k}
      ${N}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${C});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${f}, ${x}, index + ${C});
      return sampleTexture(${s}, uv);
    }
  `}(t,r);case 5:return function(t){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=r[4],i=r[3]*o,l=r[2]*i,u=r[1]*l,{newShape:p,keptDims:d}=n.squeezeShape(r);if(p.length<r.length){let r=b(t,p);return`
      ${e(r)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${v(["row","col","depth","depth2","depth3"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${i}, ${o})) +
          depth3;
        ${g(t)}
      }
    `;let c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],x=h[1];if(x===u&&null==c)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${l}, ${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${f}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(x===o&&null==c)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]},
               ${r[2]*r[3]}, ${r[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${f}.0);
        return sampleTexture(${a}, uv);
      }
    `;let y=m(a);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${i} +
          depth2 * ${o} + depth3 + ${y};
      vec2 uv = uvFromFlat(${f}, ${x}, index);
      return sampleTexture(${a}, uv);
    }
  `}(t);case 6:return function(t){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:o,keptDims:i}=n.squeezeShape(r);if(o.length<r.length){let r=b(t,o);return`
      ${e(r)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${v(["row","col","depth","depth2","depth3","depth4"],i)});
      }
    `}let l=r[5],u=r[4]*l,p=r[3]*u,d=r[2]*p,c=r[1]*d;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${d}, ${p}, ${u})) +
          dot(
            vec2(depth3, depth4),
            vec2(${l}, 1)));
        ${g(t)}
      }
    `;let h=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,x=f[0],y=f[1];if(y===c&&null==h)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${p}, ${u}, ${l})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${x}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(y===l&&null==h)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]*r[4]},
               ${r[2]*r[3]*r[4]},
               ${r[3]*r[4]},
               ${r[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${x}.0);
        return sampleTexture(${a}, uv);
      }
    `;let k=m(a);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${d} + depth * ${p} +
          depth2 * ${u} + depth3 * ${l} + depth4 + ${k};
      vec2 uv = uvFromFlat(${x}, ${y}, index);
      return sampleTexture(${a}, uv);
    }
  `}(t);default:throw Error(`${a.length}-D input sampling is not yet supported`)}}(e,a);let i=e.shapeInfo.logicalShape,u=t.logicalShape;return i.length<=u.length&&(r?s+=function(e,t){let r,a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=l(e.shapeInfo.logicalShape,t.logicalShape),p=x(i),d=i-o,c=["x","y","z","w","u","v"];r=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${c[e+d]} = 0;`).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+d]}`).join(", ");let f="return outputValue;",m=1===n.sizeFromShape(e.shapeInfo.logicalShape),g=1===n.sizeFromShape(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(u.length){let e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+s+"AtOutCoords"}() {
      ${p} coords = getOutputCoords();
      ${r}
      vec4 outputValue = get${s}(${h});
      ${f}
    }
  `}(e,t):s+=function(e,t){let r,a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),o="get"+s+"AtOutCoords",i=t.texShape,u=e.shapeInfo.texShape,p=e.shapeInfo.logicalShape.length,d=t.logicalShape.length;if(!e.shapeInfo.isUniform&&p===d&&null==e.shapeInfo.flatOffset&&n.arraysEqual(u,i))return`
      float ${o}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let c=x(d),h=l(e.shapeInfo.logicalShape,t.logicalShape),f=d-p,m=["x","y","z","w","u","v"];r=0===p?"":d<2&&h.length>=1?"coords = 0;":h.map(e=>`coords.${m[e+f]} = 0;`).join("\n");let g="";return g=d<2&&p>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${m[t+f]}`).join(", "),`
    float ${o}() {
      ${c} coords = getOutputCoords();
      ${r}
      return get${s}(${g});
    }
  `}(e,t)),s})(e,t,r.packedInputs,r.enableShapeUniforms)).join("\n"),w=t.texShape,E=(0,o.getGlslDifferences)(),A=(a=E,`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${a.texture2D}(textureSampler, uv).r;
    }
  `),R=(s=E,`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${p}
    ${d}
    ${c}
  `);return t.isPacked?(N=function(e,t,r){switch(e.length){case 0:return f();case 1:var a=0,s=t,o=r;let i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return 1===i[0]?o?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${i[1]}.0);
      }
    `:1===i[1]?o?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${i[0]}.0);
      }
    `:o?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));
      return 2 * (resTexRC.x * ${i[1]} + resTexRC.y);
    }
  `;case 2:var l=e,u=t,p=r;let d=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];if(n.arraysEqual(l,u))return p?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${d[0]}, ${d[1]}));
      }
    `;let c=Math.ceil(l[1]/2);return p?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${d[0]}, ${d[1]}));

      int index = resTexRC.x * ${d[1]} + resTexRC.y;
      int r = 2 * (index / ${c});
      int c = imod(index, ${c}) * 2;

      return ivec2(r, c);
    }
  `;case 3:var h=e,m=t,g=r;if(g)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let x=[Math.ceil(m[0]/2),Math.ceil(m[1]/2)],y=Math.ceil(h[2]/2),b=y*Math.ceil(h[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${x[0]}, ${x[1]}));
      int index = resTexRC.x * ${x[1]} + resTexRC.y;

      int b = index / ${b};
      index -= b * ${b};

      int r = 2 * (index / ${y});
      int c = imod(index, ${y}) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(e[e.length-1]/2),s=n*Math.ceil(e[e.length-2]/2),o=s,i="",l="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`
      int b${t} = index / ${o};
      index -= b${t} * ${o};
    `+i,l=`b${t}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${e.length}(${l});
    }
  `}(e,t,r)}}(t.logicalShape,w,r.enableShapeUniforms),u=E,C=`
    void setOutput(vec4 val) {
      ${u.output} = val;
    }
  `):(N=function(e,t,r){switch(e.length){case 0:return f();case 1:return a=0,s=t,o=r,1===s[0]?o?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${s[1]}.0);
      }
    `:1===s[1]?o?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${s[0]}.0);
      }
    `:o?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return resTexRC.x * ${s[1]} + resTexRC.y;
    }
  `;case 2:return l=e,u=t,p=r,n.arraysEqual(l,u)?p?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${u[0]}, ${u[1]}));
      }
    `:1===l[1]?p?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${u[0]}, ${u[1]}));
        int index = resTexRC.x * ${u[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===l[0]?p?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${u[0]}, ${u[1]}));
        int index = resTexRC.x * ${u[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:p?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${u[0]}, ${u[1]}));
      int index = resTexRC.x * ${u[1]} + resTexRC.y;
      int r = index / ${l[1]};
      int c = index - r * ${l[1]};
      return ivec2(r, c);
    }
  `;case 3:var a,s,o,l,u,p,d=e,c=t,h=r;if(h){let e=i.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],d);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${e}
    return ivec3(r, c, d);
  }
`}let m=i.getLogicalCoordinatesFromFlatIndex(["r","c","d"],d);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${c[0]}, ${c[1]}));
      int index = resTexRC.x * ${c[1]} + resTexRC.y;
      ${m}
      return ivec3(r, c, d);
    }
  `;case 4:var g=e,x=t,y=r;if(y){let e=i.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d","d2"],g);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}let b=i.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],g);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${x[0]}, ${x[1]}));
      int index = resTexRC.x * ${x[1]} + resTexRC.y;
      ${b}
      return ivec4(r, c, d, d2);
    }
  `;case 5:var v=e,k=t;let N=i.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],v);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${k[0]},
                             ${k[1]}));

      int index = resTexRC.x * ${k[1]} + resTexRC.y;

      ${N}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `;case 6:var C=e,T=t;let S=i.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],C);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${T[0]}, ${T[1]}));
      int index = resTexRC.x * ${T[1]} + resTexRC.y;

      ${S}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `;default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,w,r.enableShapeUniforms),k=E,C=`
    void setOutput(float val) {
      ${k.output} = vec4(val, 0, 0, 0);
    }
  `),r.packedInputs&&(R+=h),[R,A,C,S,N,I,r.userCode].join("\n")}let p=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,d=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,c=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,h=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function f(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function m(e){return`offset${e}`}function g(e){let t=e.name,r=n.sizeFromShape(e.shapeInfo.logicalShape);return r<2?`return ${t};`:`
    for (int i = 0; i < ${r}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function x(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";else if(6===e)return"ivec6";else throw Error(`GPU for rank ${e} is not yet supported`)}function y(e,t,r){let{newShape:a,keptDims:s}=n.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],l=i?t.slice(1):a,u=!e&&o>1&&!n.arraysEqual(t,r)&&a.length<o||i,p=u?l:t;return{useSqueezeShape:u,uniformShape:p,keptDims:s}}function b(e,t){let r=JSON.parse(JSON.stringify(e));return r.shapeInfo.logicalShape=t,r}function v(e,t){return t.map(t=>e[t]).join(", ")}}),o("4cl39",function(t,r){e(t.exports,"getLogicalCoordinatesFromFlatIndex",()=>n),e(t.exports,"getOutputLogicalCoordinatesFromFlatIndexByUniform",()=>o),e(t.exports,"getLogicalCoordinatesFromFlatIndexByUniform",()=>i),e(t.exports,"getFlatIndexFrom3D",()=>l),e(t.exports,"getFlatIndexFrom3DOutput",()=>u),e(t.exports,"ENCODE_FLOAT_SNIPPET",()=>p),s("i64bB");var a=s("jjNRA");function n(e,t,r="index"){let s=a.computeStrides(t);return s.map((t,a)=>{let n=`int ${e[a]} = ${r} / ${t}`,o=a===s.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${n}; ${o};`}).join("")}function o(e,t,r="index"){let n=a.computeStrides(t);return n.map((t,a)=>{let s=`int ${e[a]} = ${r} / outShapeStrides[${a}]`,o=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${o};`}).join("")}function i(e,t,r="index"){let a=function(e,t){let r=e.length,a=e.map(e=>`${t}[${e}]`),n=Array(r-1);n[r-2]=a[r-1];for(let e=r-3;e>=0;--e)n[e]=`(${n[e+1]} * ${a[e+1]})`;return n}(e.map((e,t)=>t),t);return a.map((t,n)=>{let s=`int ${e[n]} = ${r} / ${a[n]}`,o=n===a.length-1?`int ${e[n+1]} = ${r} - ${e[n]} * ${a[n]}`:`index -= ${e[n]} * ${a[n]}`;return`${s}; ${o};`}).join("")}function l(e){let t=a.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function u(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}let p=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`}),o("accIG",function(t,r){e(t.exports,"DecodeMatrixPackedProgram",()=>l);var a=s("3A9Dm"),n=s("c4giy"),o=s("4cl39"),i=s("h9ECX");class l{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=(0,a.getGlslDifferences)();this.outputShape=e,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?o.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],e):o.getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}}),o("kyvnG",function(t,r){e(t.exports,"EncodeFloatProgram",()=>i);var a=s("3A9Dm"),n=s("4cl39"),o=s("h9ECX");class i{constructor(e){this.variableNames=["A"],this.outTexUsage=o.TextureUsage.DOWNLOAD;let t=(0,a.getGlslDifferences)();this.outputShape=e,this.userCode=`
      ${n.ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}}),o("k8qyu",function(t,r){e(t.exports,"EncodeFloatPackedProgram",()=>i);var a=s("3A9Dm"),n=s("4cl39"),o=s("h9ECX");class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=o.TextureUsage.DOWNLOAD;let t=(0,a.getGlslDifferences)();this.outputShape=e,this.userCode=`
      ${n.ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}}),o("flFYC",function(t,r){e(t.exports,"EncodeMatrixProgram",()=>l);var a=s("3A9Dm"),n=s("c4giy"),o=s("4cl39");let i={R:0,G:1,B:2,A:3};class l{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let s=(0,a.getGlslDifferences)();this.outputShape=e,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);let l="result";t&&(l="floor(result * 255. + 0.5)");let u="";for(let e=0;e<r.length;e++){let t=r[e];u+=`
          if(offset == ${e}) {
            result = values[${i[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?o.getFlatIndexFrom3DOutput():o.getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${u}
        }
        ${s.output} = vec4(${l}, 0., 0., 0.);
      }
    `}}}),o("exdM9",function(t,r){e(t.exports,"EncodeMatrixPackedProgram",()=>i);var a=s("3A9Dm"),n=s("c4giy"),o=s("4cl39");class i{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=(0,a.getGlslDifferences)();this.outputShape=e,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);let s="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let n=2*t+a;s+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${n}] = values[0];
            } else if (offset == 1) {
              result[${n}] = values[1];
            } else if (offset == 2) {
              result[${n}] = values[2];
            } else {
              result[${n}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?o.getFlatIndexFrom3DOutput():o.getFlatIndexFrom3D(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${i};
        }
    `}}}),o("l74kj",function(t,r){e(t.exports,"GPGPUContext",()=>p),s("i64bB");var a=s("ibsdL"),n=s("jjNRA"),o=s("6i1cu"),i=s("jG3bf"),l=s("h9ECX"),u=s("ldAxw");class p{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=(0,a.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,(0,o.setWebGLContext)(t,e)):this.gl=(0,o.getWebGLContext)(t),e=this.gl,2===(0,a.env)().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>u.callAndCheck(t,()=>t.createVertexArray()),this.bindVertexArray=e=>u.callAndCheck(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>u.callAndCheck(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>u.callAndCheck(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>u.callAndCheck(e,()=>t.createVertexArrayOES()),this.bindVertexArray=r=>u.callAndCheck(e,()=>t.bindVertexArrayOES(r)),this.deleteVertexArray=r=>u.callAndCheck(e,()=>t.deleteVertexArrayOES(r)),this.getVertexArray=()=>u.callAndCheck(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,a.env)().getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=u.getExtensionOrThrow(this.gl,"OES_texture_float"),u.hasExtension(this.gl,e))this.textureHalfFloatExtension=u.getExtensionOrThrow(this.gl,e);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),u.hasExtension(this.gl,n))this.colorBufferHalfFloatExtension=u.getExtensionOrThrow(this.gl,n);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",u.hasExtension(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(u.hasExtension(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=i.createVertexBuffer(this.gl),this.indexBuffer=i.createIndexBuffer(this.gl),this.framebuffer=u.createFramebuffer(this.gl),this.textureConfig=l.getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;u.callAndCheck(e,()=>e.finish()),u.callAndCheck(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),u.callAndCheck(e,()=>e.deleteFramebuffer(this.framebuffer)),u.callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),u.callAndCheck(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),u.callAndCheck(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat32MatrixTexture(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat16MatrixTexture(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),i.createUnsignedBytesMatrixTexture(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),i.uploadPixelDataToTexture(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,a){this.throwIfDisposed(),i.uploadDenseMatrixToTexture(this.gl,e,t,r,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),i.createFloat16PackedMatrixTexture(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),i.createPackedMatrixTexture(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(u.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),u.callAndCheck(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>i.downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,a,n,s){return i.downloadPackedMatrixFromBuffer(this.gl,e,t,r,a,n,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return i.downloadFloat32MatrixFromBuffer(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let a=i.createBufferFromOutputTexture(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if((0,a.env)().getBool("WEBGL_FENCE_API_ENABLED")){let a=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let t=e.clientWaitSync(a,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=a}else(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>i.downloadMatrixFromPackedOutputTexture(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=i.createVertexShader(t));let r=u.createProgram(t);u.callAndCheck(t,()=>t.attachShader(r,this.vertexShader)),u.callAndCheck(t,()=>t.attachShader(r,e)),u.linkProgram(t,r);let a=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&u.validateProgram(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;u.callAndCheck(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),i.bindVertexProgramAttributeStreams(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(u.callAndCheck(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&u.validateProgram(this.gl,this.program),u.callAndCheck(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return(this.throwIfDisposed(),r)?u.getProgramUniformLocationOrThrow(this.gl,e,t):u.getProgramUniformLocation(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),u.callAndCheck(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),u.bindTextureToProgramUniformSampler(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[a,n]=l.getPackedMatrixTextureShapeWidthHeight(t,r);this.setOutputMatrixTextureDriver(e,a,n)}setOutputMatrixWriteRegion(e,t,r,a){this.setOutputMatrixWriteRegionDriver(r,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,r,a){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&u.validateProgram(this.gl,this.program),u.validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),u.callAndCheck(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),u.callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=u.getExtensionOrThrow(this.gl,2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await n.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),r=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let r;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in(0,a.env)().platform&&(r=(0,a.env)().platform.setTimeoutCustom.bind((0,a.env)().platform)),n.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),u.bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&u.validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(u.bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&u.validateFramebuffer(this.gl)):u.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let a=this.gl;u.bindColorTextureToFramebuffer(a,e,this.framebuffer),this.debug&&u.validateFramebuffer(a),this.outputTexture=e,u.callAndCheck(a,()=>a.viewport(0,0,t,r)),u.callAndCheck(a,()=>a.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,a){this.throwIfDisposed(),u.callAndCheck(this.gl,()=>this.gl.scissor(e,t,r,a))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}}),o("jG3bf",function(t,r){e(t.exports,"createVertexShader",()=>l),e(t.exports,"createVertexBuffer",()=>u),e(t.exports,"createIndexBuffer",()=>p),e(t.exports,"getInternalFormatForFloat32MatrixTexture",()=>c),e(t.exports,"createFloat32MatrixTexture",()=>h),e(t.exports,"getInternalFormatForFloat16MatrixTexture",()=>f),e(t.exports,"createFloat16MatrixTexture",()=>m),e(t.exports,"getInternalFormatForUnsignedBytesMatrixTexture",()=>g),e(t.exports,"createUnsignedBytesMatrixTexture",()=>x),e(t.exports,"getInternalFormatForPackedMatrixTexture",()=>y),e(t.exports,"createPackedMatrixTexture",()=>b),e(t.exports,"getInternalFormatForFloat16PackedMatrixTexture",()=>v),e(t.exports,"createFloat16PackedMatrixTexture",()=>k),e(t.exports,"bindVertexProgramAttributeStreams",()=>N),e(t.exports,"uploadDenseMatrixToTexture",()=>C),e(t.exports,"uploadPixelDataToTexture",()=>T),e(t.exports,"createBufferFromOutputTexture",()=>S),e(t.exports,"downloadFloat32MatrixFromBuffer",()=>I),e(t.exports,"downloadByteEncodedFloatMatrixFromOutputTexture",()=>w),e(t.exports,"downloadPackedMatrixFromBuffer",()=>E),e(t.exports,"downloadMatrixFromPackedOutputTexture",()=>A),s("i64bB");var a=s("ibsdL"),n=s("3A9Dm"),o=s("h9ECX"),i=s("ldAxw");function l(e){let t=(0,n.getGlslDifferences)(),r=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return i.createVertexShader(e,r)}function u(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return i.createStaticVertexBuffer(e,t)}function p(e){let t=new Uint16Array([0,1,2,2,1,3]);return i.createStaticIndexBuffer(e,t)}function d(e,t,r,n,s,o){i.validateTextureSize(t,r);let l=i.createTexture(e),u=e.TEXTURE_2D;return i.callAndCheck(e,()=>e.bindTexture(u,l)),i.callAndCheck(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),i.callAndCheck(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),i.callAndCheck(e,()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)),i.callAndCheck(e,()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===(0,a.env)().getNumber("WEBGL_VERSION")?i.callAndCheck(e,()=>e.texImage2D(u,0,n,t,r,0,s,o,null)):i.callAndCheck(e,()=>e.texStorage2D(u,1,n,t,r)),i.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:l,texShape:[r,t]}}function c(e){return e.internalFormatFloat}function h(e,t,r,a){let[n,s]=o.getUnpackedMatrixTextureShapeWidthHeight(t,r);return d(e,n,s,c(a),a.textureFormatFloat,e.FLOAT)}function f(e){return e.internalFormatHalfFloat}function m(e,t,r,a){let[n,s]=o.getUnpackedMatrixTextureShapeWidthHeight(t,r);return d(e,n,s,f(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function g(e){return e.downloadTextureFormat}function x(e,t,r,a){let[n,s]=o.getUnpackedMatrixTextureShapeWidthHeight(t,r);return d(e,n,s,g(a),e.RGBA,e.UNSIGNED_BYTE)}function y(e){return e.internalFormatPackedFloat}function b(e,t,r,a){let[n,s]=o.getPackedMatrixTextureShapeWidthHeight(t,r);return d(e,n,s,y(a),e.RGBA,e.FLOAT)}function v(e){return e.internalFormatPackedHalfFloat}function k(e,t,r,a){let[n,s]=o.getPackedMatrixTextureShapeWidthHeight(t,r);return d(e,n,s,v(a),e.RGBA,a.textureTypeHalfFloat)}function N(e,t,r){return i.callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),i.bindVertexBufferToProgramAttribute(e,t,"clipSpacePos",r,3,20,0)&&i.bindVertexBufferToProgramAttribute(e,t,"uv",r,2,20,12)}function C(e,t,r,n,s,o){let l,u,p;i.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(l=new Uint8Array(r*n*4),u=e.UNSIGNED_BYTE,p=e.RGBA):(l=new Float32Array(r*n*4),u=e.FLOAT,p=o.internalFormatPackedFloat),l.set(s),2===(0,a.env)().getNumber("WEBGL_VERSION")?i.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r,n,e.RGBA,u,l)):i.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,p,r,n,0,e.RGBA,u,l)),i.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function T(e,t,r){i.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,t)),r.data instanceof Uint8Array?2===(0,a.env)().getNumber("WEBGL_VERSION")?i.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r.width,r.height,e.RGBA,e.UNSIGNED_BYTE,r.data)):i.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)):2===(0,a.env)().getNumber("WEBGL_VERSION")?i.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,r)):i.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)),i.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function S(e,t,r,a){let n=e.createBuffer();i.callAndCheck(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,n));let s=16*t*r;return i.callAndCheck(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),i.callAndCheck(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),i.callAndCheck(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),n}function I(e,t,r){let a=new Float32Array(r);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,a),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),a}function w(e,t,r,a){let[n,s]=o.getUnpackedMatrixTextureShapeWidthHeight(t,r),l=new Uint8Array(o.getUnpackedArraySizeFromMatrixSize(t*r,4));return i.callAndCheck(e,()=>e.readPixels(0,0,n,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function E(e,t,r,a,n,s,i,l){let u=new Float32Array(o.getPackedRGBAArraySizeFromMatrixShape(s,i));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,u),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),u}function A(e,t,r){let a=new Float32Array(t*r*4);return i.callAndCheck(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,a)),a}}),o("4Lbzm",function(t,r){e(t.exports,"addImplCPU",()=>a),e(t.exports,"bincountImplCPU",()=>n),e(t.exports,"bincountReduceImplCPU",()=>o),e(t.exports,"bitwiseAndImplCPU",()=>i),e(t.exports,"castImplCPU",()=>l),e(t.exports,"ceilImplCPU",()=>u),e(t.exports,"concatImplCPU",()=>p),e(t.exports,"equalImplCPU",()=>d),e(t.exports,"expImplCPU",()=>c),e(t.exports,"expm1ImplCPU",()=>h),e(t.exports,"floorImplCPU",()=>f),e(t.exports,"gatherNdImplCPU",()=>m),e(t.exports,"gatherV2ImplCPU",()=>g),e(t.exports,"greaterImplCPU",()=>x),e(t.exports,"greaterEqualImplCPU",()=>y),e(t.exports,"lessImplCPU",()=>b),e(t.exports,"lessEqualImplCPU",()=>v),e(t.exports,"linSpaceImplCPU",()=>k),e(t.exports,"logImplCPU",()=>N),e(t.exports,"maxImplCPU",()=>C),e(t.exports,"maximumImplCPU",()=>T),e(t.exports,"minimumImplCPU",()=>S),e(t.exports,"multiplyImplCPU",()=>I),e(t.exports,"negImplCPU",()=>w),e(t.exports,"notEqualImplCPU",()=>E),e(t.exports,"prodImplCPU",()=>A),e(t.exports,"raggedGatherImplCPU",()=>R),e(t.exports,"raggedRangeImplCPU",()=>P),e(t.exports,"raggedTensorToTensorImplCPU",()=>$),e(t.exports,"rangeImplCPU",()=>F),e(t.exports,"rsqrtImplCPU",()=>B),e(t.exports,"scatterImplCPU",()=>D),e(t.exports,"sigmoidImplCPU",()=>M),e(t.exports,"simpleAbsImplCPU",()=>O),e(t.exports,"sliceImplCPU",()=>L),e(t.exports,"sparseFillEmptyRowsImplCPU",()=>_),e(t.exports,"sparseReshapeImplCPU",()=>V),e(t.exports,"sparseSegmentReductionImplCPU",()=>G),e(t.exports,"sqrtImplCPU",()=>z),e(t.exports,"staticRegexReplaceImplCPU",()=>W),e(t.exports,"stridedSliceImplCPU",()=>U),e(t.exports,"stringNGramsImplCPU",()=>j),e(t.exports,"stringSplitImplCPU",()=>q),e(t.exports,"stringToHashBucketFastImplCPU",()=>H),e(t.exports,"subImplCPU",()=>K),e(t.exports,"tileImplCPU",()=>X),e(t.exports,"topKImplCPU",()=>Y),e(t.exports,"transposeImplCPU",()=>Z),e(t.exports,"uniqueImplCPU",()=>Q);let{addImpl:a,bincountImpl:n,bincountReduceImpl:o,bitwiseAndImpl:i,castImpl:l,ceilImpl:u,concatImpl:p,equalImpl:d,expImpl:c,expm1Impl:h,floorImpl:f,gatherNdImpl:m,gatherV2Impl:g,greaterImpl:x,greaterEqualImpl:y,lessImpl:b,lessEqualImpl:v,linSpaceImpl:k,logImpl:N,maxImpl:C,maximumImpl:T,minimumImpl:S,multiplyImpl:I,negImpl:w,notEqualImpl:E,prodImpl:A,raggedGatherImpl:R,raggedRangeImpl:P,raggedTensorToTensorImpl:$,rangeImpl:F,rsqrtImpl:B,scatterImpl:D,sigmoidImpl:M,simpleAbsImpl:O,sliceImpl:L,sparseFillEmptyRowsImpl:_,sparseReshapeImpl:V,sparseSegmentReductionImpl:G,sqrtImpl:z,staticRegexReplaceImpl:W,stridedSliceImpl:U,stringNGramsImpl:j,stringSplitImpl:q,stringToHashBucketFastImpl:H,subImpl:K,tileImpl:X,topKImpl:Y,transposeImpl:Z,uniqueImpl:Q}=s("9nCi0")}),o("9nCi0",function(t,r){e(t.exports,"simpleAbsImpl",()=>s("ep8sG").simpleAbsImpl),e(t.exports,"addImpl",()=>s("e8yCG").addImpl),e(t.exports,"bincountImpl",()=>s("34gHf").bincountImpl),e(t.exports,"bincountReduceImpl",()=>s("34gHf").bincountReduceImpl),e(t.exports,"bitwiseAndImpl",()=>s("eYl2h").bitwiseAndImpl),e(t.exports,"castImpl",()=>s("7LLjQ").castImpl),e(t.exports,"ceilImpl",()=>s("bs8Xr").ceilImpl),e(t.exports,"concatImpl",()=>s("3wcyL").concatImpl),e(t.exports,"equalImpl",()=>s("diO4l").equalImpl),e(t.exports,"expImpl",()=>s("2ANRn").expImpl),e(t.exports,"expm1Impl",()=>s("jqUkN").expm1Impl),e(t.exports,"floorImpl",()=>s("Jvx9v").floorImpl),e(t.exports,"floorDivImpl",()=>s("hj1kT").floorDivImpl),e(t.exports,"gatherNdImpl",()=>s("cC9SN").gatherNdImpl),e(t.exports,"gatherV2Impl",()=>s("hNUKd").gatherV2Impl),e(t.exports,"greaterImpl",()=>s("2Apjw").greaterImpl),e(t.exports,"greaterEqualImpl",()=>s("9yHtq").greaterEqualImpl),e(t.exports,"lessImpl",()=>s("jJNGT").lessImpl),e(t.exports,"lessEqualImpl",()=>s("bwE16").lessEqualImpl),e(t.exports,"linSpaceImpl",()=>s("6U5ue").linSpaceImpl),e(t.exports,"logImpl",()=>s("2La7K").logImpl),e(t.exports,"maxImpl",()=>s("cjSsc").maxImpl),e(t.exports,"maximumImpl",()=>s("IzL7H").maximumImpl),e(t.exports,"minimumImpl",()=>s("g7Z3x").minimumImpl),e(t.exports,"multiplyImpl",()=>s("gQOIy").multiplyImpl),e(t.exports,"negImpl",()=>s("9NYY4").negImpl),e(t.exports,"notEqualImpl",()=>s("QHoEG").notEqualImpl),e(t.exports,"prodImpl",()=>s("86TES").prodImpl),e(t.exports,"raggedGatherImpl",()=>s("4hb6Q").raggedGatherImpl),e(t.exports,"raggedRangeImpl",()=>s("2uK9D").raggedRangeImpl),e(t.exports,"raggedTensorToTensorImpl",()=>s("6AvWp").raggedTensorToTensorImpl),e(t.exports,"rangeImpl",()=>s("caGrw").rangeImpl),e(t.exports,"rsqrtImpl",()=>s("GbeHD").rsqrtImpl),e(t.exports,"scatterImpl",()=>s("YcuAy").scatterImpl),e(t.exports,"sigmoidImpl",()=>s("dMdBj").sigmoidImpl),e(t.exports,"sliceImpl",()=>s("aYBRE").sliceImpl),e(t.exports,"sparseFillEmptyRowsImpl",()=>s("dkwAe").sparseFillEmptyRowsImpl),e(t.exports,"sparseReshapeImpl",()=>s("9VxEX").sparseReshapeImpl),e(t.exports,"sparseSegmentReductionImpl",()=>s("8ENVF").sparseSegmentReductionImpl),e(t.exports,"sqrtImpl",()=>s("2a43t").sqrtImpl),e(t.exports,"squaredDifferenceImpl",()=>s("4QLZo").squaredDifferenceImpl),e(t.exports,"staticRegexReplaceImpl",()=>s("hRUGg").staticRegexReplaceImpl),e(t.exports,"stridedSliceImpl",()=>s("6Syfk").stridedSliceImpl),e(t.exports,"stringNGramsImpl",()=>s("fopkM").stringNGramsImpl),e(t.exports,"stringSplitImpl",()=>s("5xLgA").stringSplitImpl),e(t.exports,"stringToHashBucketFastImpl",()=>s("cWacD").stringToHashBucketFastImpl),e(t.exports,"subImpl",()=>s("aT9VE").subImpl),e(t.exports,"tileImpl",()=>s("bzU8O").tileImpl),e(t.exports,"topKImpl",()=>s("8tNzN").topKImpl),e(t.exports,"transposeImpl",()=>s("4m8st").transposeImpl),e(t.exports,"uniqueImpl",()=>s("fjkAl").uniqueImpl),s("ep8sG"),s("e8yCG"),s("34gHf"),s("eYl2h"),s("7LLjQ"),s("bs8Xr"),s("3wcyL"),s("diO4l"),s("2ANRn"),s("jqUkN"),s("Jvx9v"),s("hj1kT"),s("cC9SN"),s("hNUKd"),s("2Apjw"),s("9yHtq"),s("jJNGT"),s("bwE16"),s("6U5ue"),s("2La7K"),s("cjSsc"),s("IzL7H"),s("g7Z3x"),s("gQOIy"),s("9NYY4"),s("QHoEG"),s("86TES"),s("4hb6Q"),s("2uK9D"),s("6AvWp"),s("caGrw"),s("GbeHD"),s("YcuAy"),s("dMdBj"),s("aYBRE"),s("dkwAe"),s("9VxEX"),s("8ENVF"),s("2a43t"),s("4QLZo"),s("hRUGg"),s("6Syfk"),s("fopkM"),s("5xLgA"),s("cWacD"),s("aT9VE"),s("bzU8O"),s("8tNzN"),s("4m8st"),s("fjkAl")}),o("2fw6V",function(t,r){e(t.exports,"PackProgram",()=>i);var a=s("c4giy"),n=s("4awkX"),o=s("fYZIp");class i{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=(0,n.getChannels)("rc",this.rank),t=(0,o.getCoordsDataType)(this.rank),r=this.getOutOfBoundsCondition(e),a=this.getSetup(e),s=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let n=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)n=`${e[e.length-1-t]},`+n;t.push(n)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}}),o("4awkX",function(t,r){function a(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function n(e,t){return 1===t?[e]:a(e,t)}function s(e,t){if(1===e)return"rc";let r="";for(let a=0;a<e;a++)r+=t[a],a<e-1&&(r+=",");return r}e(t.exports,"getVecChannels",()=>a),e(t.exports,"getChannels",()=>n),e(t.exports,"getSourceCoords",()=>s)}),o("6lSW0",function(t,r){e(t.exports,"ReshapePackedProgram",()=>o);var a=s("c4giy"),n=s("4cl39");class o{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length);let r="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),r+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let r=t?n.getLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],"inputShape"):n.getLogicalCoordinatesFromFlatIndex(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${r}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?n.getFlatIndexFrom3DOutput():n.getFlatIndexFrom3D(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}}),o("byvLX",function(t,r){e(t.exports,"TextureManager",()=>i),s("i64bB");var a=s("ibsdL"),n=s("jG3bf"),o=s("h9ECX");class i{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){let a,n=u(t,r),s=p(e,n,r);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=l(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}return n===o.PhysicalTextureType.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===o.PhysicalTextureType.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===o.PhysicalTextureType.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===o.PhysicalTextureType.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===o.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,r,n){if(null==this.freeTextures)return;let s=u(r,n),o=p(t,s,n);o in this.freeTextures||(this.freeTextures[o]=[]);let i=l(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),d=(0,a.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==d&&this._numBytesAllocated>d?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let c=this.usedTextures[o],h=c&&c.indexOf(e);if(null==h||h<0)throw Error("Cannot release a texture that was never provided by this texture manager");c[h]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function l(e,t,r,a,s){let i,l=function(e,t){switch(e){case o.PhysicalTextureType.PACKED_2X2_FLOAT32:return(0,n.getInternalFormatForPackedMatrixTexture)(t);case o.PhysicalTextureType.PACKED_2X2_FLOAT16:return(0,n.getInternalFormatForFloat16PackedMatrixTexture)(t);case o.PhysicalTextureType.UNPACKED_FLOAT32:return(0,n.getInternalFormatForFloat32MatrixTexture)(t);case o.PhysicalTextureType.UNPACKED_FLOAT16:return(0,n.getInternalFormatForFloat16MatrixTexture)(t);case o.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return(0,n.getInternalFormatForUnsignedBytesMatrixTexture)(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,a);if(s){let[t,r]=(0,o.getPackedMatrixTextureShapeWidthHeight)(e[0],e[1]);i=t*r}else{let[t,r]=(0,o.getUnpackedMatrixTextureShapeWidthHeight)(e[0],e[1]);i=t*r}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;else if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(r,l)}function u(e,t){if(e===o.TextureUsage.UPLOAD)return o.PhysicalTextureType.PACKED_2X2_FLOAT32;if(e===o.TextureUsage.RENDER||null==e)return(0,a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?o.PhysicalTextureType.PACKED_2X2_FLOAT32:o.PhysicalTextureType.UNPACKED_FLOAT32:t?o.PhysicalTextureType.PACKED_2X2_FLOAT16:o.PhysicalTextureType.UNPACKED_FLOAT16;if(e===o.TextureUsage.DOWNLOAD||e===o.TextureUsage.PIXELS)return o.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function p(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}}),o("inhaz",function(t,r){e(t.exports,"UnaryOpProgram",()=>n),e(t.exports,"CHECK_NAN_SNIPPET",()=>o),e(t.exports,"LINEAR",()=>i),e(t.exports,"ABS",()=>l),e(t.exports,"ELU",()=>u),e(t.exports,"RELU",()=>p),e(t.exports,"RELU6",()=>d),e(t.exports,"CLONE",()=>c),e(t.exports,"SIGMOID",()=>h);var a=s("c4giy");class n{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let o="if (isnan(x)) return x;",i="return x;",l="return abs(x);",u="return (x >= 0.0) ? x : (exp(x) - 1.0);",p=o+`
  return (x < 0.0) ? 0.0 : x;
`,d=o+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,c="return x;",h="return 1.0 / (1.0 + exp(-1.0 * x));"}),o("ioSMC",function(t,r){e(t.exports,"LINEAR",()=>n),e(t.exports,"ELU",()=>o),e(t.exports,"RELU",()=>i),e(t.exports,"RELU6",()=>l),e(t.exports,"SIGMOID",()=>u),e(t.exports,"UnaryOpPackedProgram",()=>p);var a=s("c4giy");let n="return x;",o=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,i=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,l=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u="return 1.0 / (1.0 + exp(-1.0 * x));";class p{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}}),o("dqDgm",function(t,r){e(t.exports,"UnpackProgram",()=>i);var a=s("c4giy"),n=s("4awkX"),o=s("fYZIp");class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length);let t=e.length,r=(0,n.getChannels)("rc",t),s=(0,o.getCoordsDataType)(t),i=(0,n.getSourceCoords)(t,r),l=r.slice(-2),u=t<=1?"rc":`vec2(${l.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${u}));
      }
    `}}}),o("cGozA",function(t,r){e(t.exports,"version",()=>a);let a="4.22.0"}),o("2I5t7",function(t,r){e(t.exports,"forceHalfFloat",()=>n),s("i64bB");var a=s("ibsdL");function n(){(0,a.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}}),o("gnziS",function(e,t){s("i64bB");var r=s("eky5o"),a=s("3E734"),n=s("hWnMN"),o=s("bTsdk"),i=s("5cPLf"),l=s("llZjp"),u=s("j1UxE"),p=s("gL8CM"),d=s("jMJF1"),c=s("8ZXwU"),h=s("601Ed"),f=s("8QBir"),m=s("5N1Nd"),g=s("jpxbz"),x=s("5eHE0"),y=s("Gnq8j"),b=s("bNvwQ"),v=s("5GRQv"),k=s("aLZLI"),N=s("486un"),C=s("19H3w"),T=s("FFQhb"),S=s("1f5Jt"),I=s("5wxcO"),w=s("gW4IT"),E=s("lVyeH"),A=s("jSnwT"),R=s("ffj0Z"),P=s("2oePR"),$=s("kNpt1"),F=s("7nPA2"),B=s("h7j1v"),D=s("dcWsu"),M=s("3kqa5"),O=s("5pwPT"),L=s("dU9Wj"),_=s("lNehB"),V=s("1mSbf"),G=s("802Oo"),z=s("hdttz"),W=s("4kHQ9"),U=s("cRnS1"),j=s("jL969"),q=s("3kkKs"),H=s("049ko"),K=s("5iPW3"),X=s("3gaXp"),Y=s("5e6fM"),Z=s("jdAZB"),Q=s("aX7l5"),J=s("hYdU1"),ee=s("drdFG"),et=s("6AaGc"),er=s("alIQ0"),ea=s("gKp4C"),en=s("l4dMu"),es=s("18hUI"),eo=s("gNaVz"),ei=s("5YqB7"),el=s("38yGI"),eu=s("k6SQX"),ep=s("39Amp"),ed=s("dIP7j"),ec=s("7zSzo"),eh=s("h33Xf"),ef=s("eDDAo"),em=s("5Hs80"),eg=s("cUTEq"),ex=s("iCKa4"),ey=s("esRJa"),eb=s("3HiLX"),ev=s("6Mq1u"),ek=s("3lutj"),eN=s("kosWd"),eC=s("fMC2x"),eT=s("9JB55"),eS=s("5QXhD"),eI=s("eLJJ9"),ew=s("9yCny"),eE=s("1Vyz3"),eA=s("7cERh"),eR=s("dSzs9"),eP=s("keCaY"),e$=s("kk836"),eF=s("aFIg8"),eB=s("iTv3f"),eD=s("fIFxS"),eM=s("9T87T"),eO=s("cF6Xd"),eL=s("1LMNc"),e_=s("4xX2M"),eV=s("8yoxY"),eG=s("3M2Mx"),ez=s("eL0V3"),eW=s("6ozAk"),eU=s("4DZW6"),ej=s("2k7nd"),eq=s("1BVgX"),eH=s("5BA7M"),eK=s("dmf4i"),eX=s("1NnK1"),eY=s("gimoH"),eZ=s("hfhh8"),eQ=s("3fJiP"),eJ=s("i4ZnD"),e0=s("4itVN"),e1=s("bnObR"),e2=s("2vhs6"),e4=s("5PvWR"),e3=s("4M3Xo"),e8=s("cl36T"),e6=s("hS4Mq"),e5=s("jeitA"),e7=s("1PwbL"),e9=s("1lbZ0"),te=s("g4GRp"),tt=s("d162J"),tr=s("5eRqX"),ta=s("03geB"),tn=s("6x9nd"),ts=s("kRIzD"),to=s("kqBCk"),ti=s("9u3yv"),tl=s("iwOo8"),tu=s("1vuRE"),tp=s("8yD0x"),td=s("jZndi"),tc=s("lz08S"),th=s("7zwsd"),tf=s("ef5R2"),tm=s("cQhRJ"),tg=s("fAaSu"),tx=s("jDmNL"),ty=s("f5s9w"),tb=s("nNUZH"),tv=s("CL0ac"),tk=s("cwXZ1"),tN=s("5cDtb"),tC=s("dcuct"),tT=s("gT460"),tS=s("7wKlj"),tI=s("2GpAV"),tw=s("7u84P"),tE=s("eQUmc"),tA=s("k2TSU"),tR=s("ltnQB"),tP=s("71RAl"),t$=s("3oUvt"),tF=s("5eXiV"),tB=s("hFJpZ"),tD=s("dAe2m"),tM=s("lOQ0Z"),tO=s("dnpTh"),tL=s("41g8D"),t_=s("fnlSb"),tV=s("6EcN9"),tG=s("fNAgd"),tz=s("eJLAL"),tW=s("2lJzR"),tU=s("7wpuU"),tj=s("dqY84"),tq=s("6i4UP"),tH=s("4UDlw"),tK=s("go2gh"),tX=s("9kiut"),tY=s("ioG0T"),tZ=s("9kr8m"),tQ=s("kupuZ"),tJ=s("aih4s"),t0=s("9f0kI"),t1=s("6FaXC");for(let e of[a._fusedMatMulConfig,n.absConfig,o.acosConfig,i.acoshConfig,l.addConfig,u.addNConfig,p.allConfig,d.anyConfig,c.argMaxConfig,h.argMinConfig,f.asinConfig,m.asinhConfig,g.atanConfig,x.atan2Config,y.atanhConfig,b.avgPoolConfig,v.avgPool3DConfig,k.avgPool3DGradConfig,N.avgPoolGradConfig,C.batchMatMulConfig,T.batchNormConfig,S.batchToSpaceNDConfig,I.bincountConfig,w.bitwiseAndConfig,E.broadcastArgsConfig,A.castConfig,R.ceilConfig,P.clipByValueConfig,$.complexConfig,F.complexAbsConfig,B.concatConfig,D.conv2DConfig,M.conv2DBackpropFilterConfig,O.conv2DBackpropInputConfig,L.conv3DConfig,_.conv3DBackpropFilterV2Config,V.conv3DBackpropInputConfig,G.cosConfig,z.coshConfig,W.cropAndResizeConfig,U.cumprodConfig,j.cumsumConfig,q.denseBincountConfig,H.depthToSpaceConfig,K.depthwiseConv2dNativeConfig,X.depthwiseConv2dNativeBackpropFilterConfig,Y.depthwiseConv2dNativeBackpropInputConfig,Z.diagConfig,Q.dilation2DConfig,J.einsumConfig,ee.eluConfig,et.eluGradConfig,er.equalConfig,ea.erfConfig,en.expConfig,es.expandDimsConfig,eo.expm1Config,ei.fftConfig,el.fillConfig,eu.flipLeftRightConfig,ep.floorConfig,ed.floorDivConfig,ec.fromPixelsConfig,eh.fusedConv2DConfig,ef.fusedDepthwiseConv2DConfig,em.gatherNdConfig,eg.gatherV2Config,ex.greaterConfig,ey.greaterEqualConfig,eb.identityConfig,ev.ifftConfig,ek.imagConfig,eN.isFiniteConfig,eC.isInfConfig,eT.isNaNConfig,eS.leakyReluConfig,eI.lessConfig,ew.lessEqualConfig,eE.linSpaceConfig,eA.logConfig,eR.log1pConfig,eP.logicalAndConfig,e$.logicalNotConfig,eF.logicalOrConfig,eB.LRNConfig,eD.LRNGradConfig,eM.maxConfig,eO.maximumConfig,eL.maxPoolConfig,e_.maxPool3DConfig,eV.maxPool3DGradConfig,eG.maxPoolGradConfig,ez.maxPoolWithArgmaxConfig,eW.meanConfig,eU.minConfig,ej.minimumConfig,eq.mirrorPadConfig,eH.modConfig,eK.multinomialConfig,eX.multiplyConfig,eY.negConfig,eZ.nonMaxSuppressionV3Config,eQ.nonMaxSuppressionV4Config,eJ.nonMaxSuppressionV5Config,e0.notEqualConfig,e1.oneHotConfig,e2.onesLikeConfig,e4.packConfig,e3.padV2Config,e8.powConfig,e6.preluConfig,e5.prodConfig,e7.raggedGatherConfig,e9.raggedRangeConfig,te.raggedTensorToTensorConfig,tt.rangeConfig,tr.realConfig,ta.realDivConfig,tn.reciprocalConfig,ts.reluConfig,to.relu6Config,ti.reshapeConfig,tl.resizeBilinearConfig,tu.resizeBilinearGradConfig,tp.resizeNearestNeighborConfig,td.resizeNearestNeighborGradConfig,tc.reverseConfig,th.rotateWithOffsetConfig,tf.roundConfig,tm.rsqrtConfig,tg.scatterNdConfig,tx.searchSortedConfig,ty.selectConfig,tb.seluConfig,tv.sigmoidConfig,tk.signConfig,tN.sinConfig,tC.sinhConfig,tT.sliceConfig,tS.softmaxConfig,tI.softplusConfig,tw.spaceToBatchNDConfig,tE.sparseFillEmptyRowsConfig,tA.sparseReshapeConfig,tR.sparseSegmentMeanConfig,tP.sparseSegmentSumConfig,t$.sparseToDenseConfig,tF.splitVConfig,tB.sqrtConfig,tD.squareConfig,tM.squaredDifferenceConfig,tO.staticRegexReplaceConfig,tL.stepConfig,t_.stridedSliceConfig,tV.stringNGramsConfig,tG.stringSplitConfig,tz.stringToHashBucketFastConfig,tW.subConfig,tU.sumConfig,tj.tanConfig,tq.tanhConfig,tH.tensorScatterUpdateConfig,tK.tileConfig,tX.topKConfig,tY.transformConfig,tZ.transposeConfig,tQ.uniqueConfig,tJ.unpackConfig,t0.unsortedSegmentSumConfig,t1.zerosLikeConfig])(0,r.registerKernel)(e)}),o("3E734",function(t,r){e(t.exports,"_fusedMatMulConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("5uMGV");let o={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{a:s,b:o,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:p,activation:d,leakyreluAlpha:c}=a;return(0,n.batchMatMulImpl)({a:s,b:o,transposeA:u,transposeB:p,backend:r,bias:i,preluActivationWeights:l,leakyreluAlpha:c,activation:d})}}}),o("5uMGV",function(t,r){e(t.exports,"MATMUL_SHARED_DIM_THRESHOLD",()=>h),e(t.exports,"batchMatMulImpl",()=>f),s("i64bB");var a=s("8BaGO"),n=s("2MDja"),o=s("jjNRA"),i=s("3YXxe"),l=s("iisXJ"),u=s("1NnK1"),p=s("9u3yv"),d=s("7wpuU"),c=s("9kr8m");let h=1e3;function f({a:e,b:t,transposeA:r,transposeB:s,backend:f,bias:m=null,preluActivationWeights:g=null,leakyreluAlpha:x=0,activation:y=null}){let b,v=e.shape.length,k=t.shape.length,N=r?e.shape[v-2]:e.shape[v-1],C=s?t.shape[k-1]:t.shape[k-2],T=r?e.shape[v-1]:e.shape[v-2],S=s?t.shape[k-2]:t.shape[k-1],I=e.shape.slice(0,-2),w=t.shape.slice(0,-2),E=o.sizeFromShape(I),A=o.sizeFromShape(w),R=a.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([T,S]);o.assert(N===C,()=>`Error in matMul: inner shapes (${N}) and (${C}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${s} must match.`);let P=r?[E,N,T]:[E,T,N],$=s?[A,S,C]:[A,C,S],F=(0,p.reshape)({inputs:{x:e},backend:f,attrs:{shape:P}}),B=(0,p.reshape)({inputs:{x:t},backend:f,attrs:{shape:$}}),D=[F,B],M=Math.max(E,A),O=r?F.shape[1]:F.shape[2],L=null!=m,_=null!=g,V="leakyrelu"===y,G=null!=y?(0,i.mapActivationToShaderProgram)(y,!0):null,z=L||_||V||null!=G;if((1===T||1===S)&&O>h&&!1===z){let e=F,t=B;r&&(e=(0,c.transpose)({inputs:{x:F},backend:f,attrs:{perm:[0,2,1]}}),D.push(e)),s&&(t=(0,c.transpose)({inputs:{x:B},backend:f,attrs:{perm:[0,2,1]}}),D.push(t));let a=1!==S,n=1===S,o=e;a&&(o=(0,p.reshape)({inputs:{x:e},backend:f,attrs:{shape:[M,O,1]}}),D.push(o));let i=t;n&&(i=(0,p.reshape)({inputs:{x:t},backend:f,attrs:{shape:[M,1,O]}}),D.push(i));let l=(0,u.multiply)({inputs:{a:o,b:i},backend:f});b=(0,d.sum)({inputs:{x:l},backend:f,attrs:{axis:1===S?2:1,keepDims:!0}}),D.push(l)}else{let a=(0,n.upcastType)(e.dtype,t.dtype),i=new(0,l.MatMulPackedProgram)(P,$,[M,T,S],r,s,L,G,_,V),u=[F,B];if(null!=m&&u.push(m),_&&u.push(g),V){let e=f.makeTensorInfo([],"float32",o.createScalarValue(x,"float32"));u.push(e),D.push(e)}b=f.runWebGLProgram(i,u,a)}let W=(0,p.reshape)({inputs:{x:b},backend:f,attrs:{shape:R}});for(let e of(D.push(b),D))f.disposeIntermediateTensorInfo(e);return W}}),o("3YXxe",function(t,r){e(t.exports,"CHECK_NAN_SNIPPET_UNARY",()=>f),e(t.exports,"unaryKernelFunc",()=>m),e(t.exports,"binaryKernelFunc",()=>g),e(t.exports,"mapActivationToShaderProgram",()=>x),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("2MDja"),i=s("e1oGB"),l=s("2jJh2"),u=s("kNpt1"),p=s("5QXhD"),d=s("hS4Mq"),c=s("inhaz"),h=s("ioSMC");let f="if (isnan(x)) return x;";function m({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:a}){return({inputs:s,backend:o})=>{let i,{x:l}=s,u=a||l.dtype;if(o.shouldExecuteOnCPU([l])&&null!=r){let e=r(o.texData.get(l.dataId).values,u);return o.makeTensorInfo(l.shape,u,e)}return i=(0,n.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new(0,h.UnaryOpPackedProgram)(l.shape,t):new(0,c.UnaryOpProgram)(l.shape,e),o.runWebGLProgram(i,[l],u)}}function g({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:p,dtype:d}){return({inputs:c,backend:h})=>{let f,{a:m,b:g}=c;if(s&&"complex64"===m.dtype){let t=h.texData.get(m.dataId),r=h.texData.get(g.dataId),[a,n]=[[t.complexTensorInfos.real,r.complexTensorInfos.real],[t.complexTensorInfos.imag,r.complexTensorInfos.imag]].map(t=>{let[r,a]=t,n={dataId:r.dataId,dtype:r.dtype,shape:m.shape},s={dataId:a.dataId,dtype:a.dtype,shape:g.shape},l=new(0,i.BinaryOpProgram)(e,m.shape,g.shape);return h.runWebGLProgram(l,[n,s],(0,o.upcastType)(r.dtype,a.dtype))}),s=(0,u.complex)({inputs:{real:a,imag:n},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(n),s}let x=d||(0,o.upcastType)(m.dtype,g.dtype);if(("string"===m.dtype||"string"===g.dtype||h.shouldExecuteOnCPU([m,g]))&&null!=p){let e=h.texData.get(m.dataId).values,t=h.texData.get(g.dataId).values,r="string"===m.dtype?a.fromUint8ToStringArray(e):e,n="string"===m.dtype?a.fromUint8ToStringArray(t):t,[s,o]=p(m.shape,g.shape,r,n,x),i=h.makeTensorInfo(o,x);return h.texData.get(i.dataId).values=s,i}return f=(0,n.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new(0,l.BinaryOpPackedProgram)(t,m.shape,g.shape,r):new(0,i.BinaryOpProgram)(e,m.shape,g.shape),h.runWebGLProgram(f,[m,g],x)}}function x(e,t=!1){if("linear"===e)return t?h.LINEAR:c.LINEAR;if("relu"===e)return t?h.RELU:c.RELU;if("elu"===e)return t?h.ELU:c.ELU;if("relu6"===e)return t?h.RELU6:c.RELU6;if("prelu"===e)return t?d.PRELU_PACKED:d.PRELU;else if("leakyrelu"===e)return t?p.LEAKYRELU_PACKED:p.LEAKYRELU;else if("sigmoid"===e)return t?h.SIGMOID:c.SIGMOID;throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}}),o("e1oGB",function(t,r){e(t.exports,"CHECK_NAN_SNIPPET",()=>o),e(t.exports,"BinaryOpProgram",()=>i),s("i64bB");var a=s("7MaPk"),n=s("c4giy");let o=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class i{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=a.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}}),o("2jJh2",function(t,r){e(t.exports,"CHECK_NAN_SNIPPET_PACKED",()=>u),e(t.exports,"BinaryOpPackedProgram",()=>p),s("i64bB");var a=s("7MaPk"),n=s("jjNRA"),o=s("c4giy"),i=s("4awkX"),l=s("fYZIp");let u=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class p{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.assertAndGetBroadcastShape(t,r);let u=this.outputShape.length;this.enableShapeUniforms=(0,o.useShapeUniforms)(u);let p="";if(s)if(0===u||1===n.sizeFromShape(this.outputShape))p=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=(0,l.getCoordsDataType)(u);if(p=`
          ${e} coords = getOutputCoords();
        `,1===u)this.enableShapeUniforms?p+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:p+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=(0,i.getChannels)("coords",u);this.enableShapeUniforms?p+=`
            bool nextRowOutOfBounds =
              (${e[u-2]} + 1) >= outShape[${u} - 2];
            bool nextColOutOfBounds =
              (${e[u-1]} + 1) >= outShape[${u} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:p+=`
            bool nextRowOutOfBounds =
              (${e[u-2]} + 1) >= ${this.outputShape[u-2]};
            bool nextColOutOfBounds =
              (${e[u-1]} + 1) >= ${this.outputShape[u-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${p}

        setOutput(result);
      }
    `}}}),o("kNpt1",function(t,r){e(t.exports,"complex",()=>o),e(t.exports,"complexConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("3HiLX");function o(e){let{inputs:t,backend:r}=e,{real:a,imag:s}=t,o=r.makeTensorInfo(a.shape,"complex64"),i=r.texData.get(o.dataId);return i.complexTensorInfos={real:(0,n.identity)({inputs:{x:a},backend:r}),imag:(0,n.identity)({inputs:{x:s},backend:r})},o}let i={kernelName:a.Complex,backendName:"webgl",kernelFunc:o}}),o("3HiLX",function(t,r){function a(e){let{inputs:t,backend:r}=e,{x:a}=t;return r.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}e(t.exports,"identity",()=>a),e(t.exports,"identityConfig",()=>n),s("i64bB");let n={kernelName:s("hl418").Identity,backendName:"webgl",kernelFunc:a}}),o("5QXhD",function(t,r){e(t.exports,"LEAKYRELU",()=>u),e(t.exports,"LEAKYRELU_PACKED",()=>p),e(t.exports,"leakyReluConfig",()=>d),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("jjNRA"),i=s("e1oGB"),l=s("2jJh2");let u="return (a < 0.) ? b * a : a;",p=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,d={kernelName:n.LeakyRelu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{alpha:d}=n,c=r.makeTensorInfo([],"float32",o.createScalarValue(d,"float32")),h=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new(0,l.BinaryOpPackedProgram)(p,s.shape,c.shape):new(0,i.BinaryOpProgram)(u,s.shape,c.shape),f=r.runWebGLProgram(h,[s,c],"float32");return r.disposeIntermediateTensorInfo(c),f}}}),o("hS4Mq",function(t,r){e(t.exports,"PRELU",()=>l),e(t.exports,"PRELU_PACKED",()=>u),e(t.exports,"preluConfig",()=>p),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("e1oGB"),i=s("2jJh2");let l="return (a < 0.) ? b * a : a;",u=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,p={kernelName:n.Prelu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n,alpha:s}=t,p=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new(0,i.BinaryOpPackedProgram)(u,n.shape,s.shape):new(0,o.BinaryOpProgram)(l,n.shape,s.shape);return r.runWebGLProgram(p,[n,s],"float32")}}}),o("iisXJ",function(t,r){e(t.exports,"MatMulPackedProgram",()=>n);var a=s("c4giy");class n{constructor(e,t,r,n=!1,s=!1,o=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length);let p=Math.ceil((n?e[1]:e[2])/2),d=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],c=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],h="",f="";i&&(h=l?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,f="result = activation(result);"),o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let m="rc.x",g="rc.x";e[0]<t[0]?m=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(g=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${m};
        int batchB = ${g};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${n?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${s?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${c[0]});
          result += (${d[1]} * ${c[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${o?"result += getBiasAtOutCoords();":""}

        ${f}

        setOutput(result);
      }
    `}}}),o("1NnK1",function(t,r){e(t.exports,"multiply",()=>h),e(t.exports,"multiplyConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("hl418"),i=s("dBot6"),l=s("e1oGB"),u=s("2jJh2"),p=s("4Lbzm"),d=s("kNpt1");let c="return a * b;";function h(e){let t,{inputs:r,backend:s}=e,{a:o,b:h}=r,f=a.upcastType(o.dtype,h.dtype);if("complex64"===o.dtype){let e=s.texData.get(o.dataId),t=s.texData.get(h.dataId),r=new(0,i.BinaryOpComplexProgram)(i.COMPLEX_MULTIPLY.REAL,o.shape,h.shape),a=new(0,i.BinaryOpComplexProgram)(i.COMPLEX_MULTIPLY.IMAG,o.shape,h.shape),n=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:o.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:h.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:h.shape}],l=s.runWebGLProgram(r,n,"float32"),u=s.runWebGLProgram(a,n,"float32"),p=(0,d.complex)({inputs:{real:l,imag:u},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),p}if(s.shouldExecuteOnCPU([o,h])){let e=s.texData.get(o.dataId),t=s.texData.get(h.dataId),[r,a]=(0,p.multiplyImplCPU)(o.shape,h.shape,e.values,t.values,f),n=s.makeTensorInfo(a,f);return s.texData.get(n.dataId).values=r,n}return t=(0,n.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new(0,u.BinaryOpPackedProgram)(c,o.shape,h.shape):new(0,l.BinaryOpProgram)(c,o.shape,h.shape),s.runWebGLProgram(t,[o,h],f)}let f={kernelName:o.Multiply,backendName:"webgl",kernelFunc:h}}),o("dBot6",function(t,r){e(t.exports,"COMPLEX_MULTIPLY",()=>n),e(t.exports,"BinaryOpComplexProgram",()=>o),s("i64bB");var a=s("7MaPk");let n={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class o{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}}),o("9u3yv",function(t,r){e(t.exports,"reshape",()=>l),e(t.exports,"reshapeConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("fraQU"),i=s("ldAxw");function l(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{shape:l}=a,u=n.sizeFromShape(s.shape),p=n.inferFromImplicitShape(l,u),d=n.sizeFromShape(p);n.assert(u===d,()=>`The new shape (${p}) has ${d} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);let c=r.texData.get(s.dataId);return!c.isPacked||(0,i.isReshapeFree)(s.shape,p)||null!==c.texture&&(0,i.isReshapeFree)(c.shape,p)?(r.incRef(s.dataId),{dataId:s.dataId,shape:p,dtype:s.dtype}):(0,o.packedReshape)(s,p,r)}let u={kernelName:a.Reshape,backendName:"webgl",kernelFunc:l}}),o("fraQU",function(t,r){e(t.exports,"packedReshape",()=>o);var a=s("6lSW0"),n=s("ldAxw");function o(e,t,r){let s=[(0,n.getBatchDim)(e.shape),...(0,n.getRowsCols)(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},i=[(0,n.getBatchDim)(t),...(0,n.getRowsCols)(t)],l=new(0,a.ReshapePackedProgram)(i,s),u=r.runWebGLProgram(l,[o],e.dtype,[s],!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}}),o("7wpuU",function(t,r){e(t.exports,"sum",()=>o),e(t.exports,"sumConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("gPEjH");function o(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;return(0,n.sumImpl)(s,o,i,r)}let i={kernelName:a.Sum,backendName:"webgl",kernelFunc:o}}),o("gPEjH",function(t,r){e(t.exports,"sumImpl",()=>p),s("i64bB");var a=s("7MaPk"),n=s("2MDja"),o=s("jjNRA"),i=s("c1MNH"),l=s("9u3yv"),u=s("5tZ2c");function p(e,t,r,s){let p=e.shape.length,d=o.parseAxisParam(t,e.shape),c=d,h=a.getAxesPermutation(c,p),f=null!=h,m=e;f&&(m=(0,u.transposeImpl)(e,h,s),c=a.getInnerMostAxes(c.length,p)),a.assertAxesAreInnerMostDims("sum",c,p);let[g,x]=a.computeOutAndReduceShapes(m.shape,c),y=g;r&&(y=a.expandShapeToKeepDim(g,d));let b=o.sizeFromShape(x),v=o.sizeFromShape(e.shape),k=(0,l.reshape)({inputs:{x:m},attrs:{shape:[v/b,b]},backend:s}),N=(0,n.sumOutType)(e.dtype),C=(0,i.reduce)(k,N,"sum",s),T=(0,l.reshape)({inputs:{x:C},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(C),f&&s.disposeIntermediateTensorInfo(m),T}}),o("c1MNH",function(t,r){e(t.exports,"reduce",()=>i),s("i64bB");var a=s("7MaPk"),n=s("3K2oC"),o=s("jl0vT");function i(e,t,r,s){let i=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let r=t.length?t[t.length-1].outSize:e[1],n=a.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}(e.shape),l=e;for(let a=0;a<i.length;a++){let u,p,{inSize:d,windowSize:c,outSize:h}=i[a];u="mean"===r?0===a?new(0,n.MeanProgram)({windowSize:c,inSize:d,batchSize:e.shape[0],outSize:h},d):new(0,n.MeanProgram)({windowSize:c,inSize:d,batchSize:e.shape[0],outSize:h}):new(0,o.ReduceProgram)({windowSize:c,inSize:d,batchSize:e.shape[0],outSize:h},r),p=l,l=s.runWebGLProgram(u,[l],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return l}}),o("3K2oC",function(t,r){e(t.exports,"MeanProgram",()=>n),s("i64bB");var a=s("jjNRA");class n{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:s,outSize:o}=e;this.outputShape=[n,o];let i=4*Math.floor(r/4),l=r%4,u="sumValue += dot(values, ones);";if(null!=t){let e=1/t;u=`sumValue += dot(values * ${a.isInt(e)?e.toPrecision(2):e}, ones);`}let p="";s%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${1===l}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}}),o("jl0vT",function(t,r){e(t.exports,"ReduceProgram",()=>a);class a{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:a,inSize:n,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(r/4),p=r%4,d=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,c="vec4";"all"===t?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,c="bvec4"):"any"===t&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,c="bvec4");let h="";n%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${1===p}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${2===p}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${3===p}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}}),o("5tZ2c",function(t,r){e(t.exports,"transposeImpl",()=>i),s("i64bB");var a=s("ibsdL");s("4Lbzm");var n=s("hJ2aW"),o=s("cC7RJ");function i(e,t,r){let s=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new(0,o.TransposePackedProgram)(e.shape,t):new(0,n.TransposeProgram)(e.shape,t);return r.runWebGLProgram(s,[e],e.dtype)}}),o("hJ2aW",function(t,r){e(t.exports,"TransposeProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;let n=(0,a.getCoordsDataType)(this.rank),s=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=Array(t);for(let t=0;t<e.length;t++)a[e[t]]=r[t];return a.join()}(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}}}),o("cC7RJ",function(t,r){e(t.exports,"TransposePackedProgram",()=>o);var a=s("4awkX"),n=s("fYZIp");class o{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=(0,n.getCoordsDataType)(this.rank),o=(0,a.getVecChannels)("rc",this.rank),i=Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=o[e];let l=`vec2(${i.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,p=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${p};
      if(${u}) {
        result[1] = ${p};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${p};
        if(${u}) {
          result[3] = ${p};
        }
      }
      setOutput(result);
    }
    `}}}),o("9kr8m",function(t,r){e(t.exports,"transpose",()=>i),e(t.exports,"transposeConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("5tZ2c"),o=s("4Lbzm");function i(e){let t,{inputs:r,backend:a,attrs:s}=e,{x:i}=r,{perm:l}=s,u=Array(i.shape.length);for(let e=0;e<u.length;e++)u[e]=i.shape[l[e]];if(a.shouldExecuteOnCPU([i])){let e=a.texData.get(i.dataId).values,r=(0,o.transposeImplCPU)(e,i.shape,i.dtype,l,u);t=a.makeTensorInfo(u,i.dtype),a.texData.get(t.dataId).values=r}else t=(0,n.transposeImpl)(i,l,a);return t}let l={kernelName:a.Transpose,backendName:"webgl",kernelFunc:i}}),o("hWnMN",function(t,r){e(t.exports,"absConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("ibsdL"),o=s("4Lbzm"),i=s("inhaz"),l=s("ioSMC");let u="return abs(x);",p={kernelName:a.Abs,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:a}=e,{x:s}=r;if(a.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){let e=a.texData.get(s.dataId),t=(0,o.simpleAbsImplCPU)(e.values);return a.makeTensorInfo(s.shape,s.dtype,t)}return t=(0,n.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new(0,l.UnaryOpPackedProgram)(s.shape,u):new(0,i.UnaryOpProgram)(s.shape,u),a.runWebGLProgram(t,[s],s.dtype)}}}),o("bTsdk",function(t,r){e(t.exports,"acosConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Acos,backendName:"webgl",kernelFunc:i}}),o("5cPLf",function(t,r){e(t.exports,"acoshConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Acosh,backendName:"webgl",kernelFunc:i}}),o("llZjp",function(t,r){e(t.exports,"addConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return a + b;",l=(0,n.binaryKernelFunc)({opSnippet:i,packedOpSnippet:i,supportsComplex:!0,cpuKernelImpl:o.addImplCPU}),u={kernelName:a.Add,backendName:"webgl",kernelFunc:l}}),o("j1UxE",function(t,r){e(t.exports,"addNConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("ibsdL"),o=s("2MDja"),i=s("d8b6B"),l=s("851Vm"),u=s("3HiLX");let p={kernelName:a.AddN,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:a}=t;if(1===r.length)return(0,u.identity)({inputs:{x:r[0]},backend:a});if(r.length>(0,n.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}let s=r.map(e=>e.dtype).reduce((e,t)=>(0,o.upcastType)(e,t)),p=r.map(e=>e.shape),d=(0,n.env)().getBool("WEBGL_PACK")?new(0,l.AddNPackedProgram)(r[0].shape,p):new(0,i.AddNProgram)(r[0].shape,p);return a.runWebGLProgram(d,r,s)}}}),o("d8b6B",function(t,r){e(t.exports,"AddNProgram",()=>a);class a{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`float v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        float result = ${a};
        setOutput(result);
      }
    `}}}),o("851Vm",function(t,r){e(t.exports,"AddNPackedProgram",()=>a);class a{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`vec4 v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}}),o("gL8CM",function(t,r){e(t.exports,"allConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("c1MNH"),l=s("9u3yv"),u=s("9kr8m");let p={kernelName:a.All,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:a,attrs:s}=e,{x:p}=r,{axis:d,keepDims:c}=s,h=p.shape.length,f=o.parseAxisParam(d,p.shape),m=f,g=n.getAxesPermutation(m,h),x=p;null!=g&&(x=(0,u.transpose)({inputs:{x:p},backend:a,attrs:{perm:g}}),m=n.getInnerMostAxes(m.length,h)),n.assertAxesAreInnerMostDims("all",m,h);let[y,b]=n.computeOutAndReduceShapes(x.shape,m),v=o.sizeFromShape(b),k=(0,l.reshape)({inputs:{x:x},backend:a,attrs:{shape:[-1,v]}}),N=(0,i.reduce)(k,k.dtype,"all",a);if(c){let e=n.expandShapeToKeepDim(y,f);t=(0,l.reshape)({inputs:{x:N},backend:a,attrs:{shape:e}})}else t=(0,l.reshape)({inputs:{x:N},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(N),null!=g&&a.disposeIntermediateTensorInfo(x),t}}}),o("jMJF1",function(t,r){e(t.exports,"anyConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("c1MNH"),l=s("9u3yv"),u=s("9kr8m");let p={kernelName:a.Any,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:a,attrs:s}=e,{x:p}=r,{axis:d,keepDims:c}=s,h=p.shape.length,f=o.parseAxisParam(d,p.shape),m=f,g=n.getAxesPermutation(m,h),x=p;null!=g&&(x=(0,u.transpose)({inputs:{x:p},backend:a,attrs:{perm:g}}),m=n.getInnerMostAxes(m.length,h)),n.assertAxesAreInnerMostDims("any",m,h);let[y,b]=n.computeOutAndReduceShapes(x.shape,m),v=o.sizeFromShape(b),k=(0,l.reshape)({inputs:{x:x},backend:a,attrs:{shape:[-1,v]}}),N=(0,i.reduce)(k,k.dtype,"any",a);if(c){let e=n.expandShapeToKeepDim(y,f);t=(0,l.reshape)({inputs:{x:N},backend:a,attrs:{shape:e}})}else t=(0,l.reshape)({inputs:{x:N},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(N),null!=g&&a.disposeIntermediateTensorInfo(x),t}}}),o("8ZXwU",function(t,r){e(t.exports,"argMaxConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("XQAV5"),l=s("9kr8m");let u={kernelName:a.ArgMax,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:u}=a,p=o.parseAxisParam(u,s.shape),d=n.getAxesPermutation(p,s.shape.length),c=s,h=[];null!=d&&(h.push(c=(0,l.transpose)({inputs:{x:s},backend:r,attrs:{perm:d}})),p=n.getInnerMostAxes(p.length,c.shape.length)),n.assertAxesAreInnerMostDims("argMax",[p[0]],c.shape.length);let f=(0,i.argMinMaxReduce)(r,c,p[0],"max");return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),f}}}),o("XQAV5",function(t,r){e(t.exports,"argMinMaxReduce",()=>p),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("jjNRA"),i=s("kauJO"),l=s("hNgpB"),u=s("9u3yv");function p(e,t,r,s){let p=[r];if(a.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),p,t.shape.length),!(0,n.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let r=[],n=e.texData.get(t.dataId),l=null!==n&&n.isPacked,d=t;l&&r.push(d=e.unpackTensor(t));let[c,h]=a.computeOutAndReduceShapes(d.shape,p),f=o.sizeFromShape(h),m=(0,u.reshape)({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}});r.push(m);let g=function e(t,r,n,s=null){let o=r.shape[0],l=r.shape[1];null!=s&&(o=s.shape[0],l=s.shape[1]);let u=a.computeOptimalWindowSize(l),p={windowSize:u,inSize:l,batchSize:o,outSize:Math.ceil(l/u)},d=new(0,i.ArgMinMaxProgram)(p,n,null==s),c=[r];null!=s&&c.push(s);let h=t.runWebGLProgram(d,c,"int32");if(1===h.shape[1])return h;let f=e(t,r,n,h);return t.disposeIntermediateTensorInfo(h),f}(e,m,s);r.push(g);let x=(0,u.reshape)({inputs:{x:g},backend:e,attrs:{shape:c}});return r.forEach(t=>e.disposeIntermediateTensorInfo(t)),x}return function e(t,r,n,s=null){let o=null!=s?s.shape:r.shape,i=o[o.length-1],u=a.computeOptimalWindowSize(i),p=new(0,l.ArgMinMaxPackedProgram)(o,u,n,null==s),d=null==s?[r]:[r,s],c=t.runWebGLProgram(p,d,"int32");if(c.shape.length===r.shape.length){let a=e(t,r,n,c);return t.disposeIntermediateTensorInfo(c),a}return c}(e,t,s)}}),o("kauJO",function(t,r){e(t.exports,"ArgMinMaxProgram",()=>a);class a{constructor(e,t,r){this.variableNames=["A"];let{windowSize:a,batchSize:n,outSize:s}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[n,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}}),o("hNgpB",function(t,r){e(t.exports,"ArgMinMaxPackedProgram",()=>i),s("i64bB");var a=s("jjNRA"),n=s("4awkX"),o=s("fYZIp");class i{constructor(e,t,r,s){let i,l;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let u=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),u>1&&this.outputShape.push(u),s||this.variableNames.push("bestIndicesA");let p=this.outputShape,d=p.length,c=(0,o.getCoordsDataType)(d),h=(0,n.getChannels)("coords",d);if(1===u){l=d+1;let e=(0,o.getCoordsDataType)(l);i=`
        ${e} sourceLocR = ${e}(${h.join()}, 0);
        ++${h[d-1]};
        ${e} sourceLocG = ${e}(${h.join()}, 0);
        ++${h[d-2]};
        ${e} sourceLocA = ${e}(${h.join()}, 0);
        --${h[d-1]};
        ${e} sourceLocB = ${e}(${h.join()}, 0);
        --${h[d-2]};`}else l=d,i=`
        ${c} sourceLocR = coords;
        ++${h[d-1]};
        ${c} sourceLocG = coords;
        ++${h[d-2]};
        ${c} sourceLocA = coords;
        --${h[d-1]};
        ${c} sourceLocB = coords;
        --${h[d-2]};`;let f=["x","y","z","w","u","v"].slice(0,l),m="."+f[l-1],g=f.map(e=>"int "+e),x=(0,n.getChannels)("sourceLocR",l-1).concat("inIdx.r"),y=(0,n.getChannels)("sourceLocG",l-1).concat("inIdx.g"),b=(0,n.getChannels)("sourceLocB",l-1).concat("inIdx.b"),v=(0,n.getChannels)("sourceLocA",l-1).concat("inIdx.a"),k="max"===r?"greaterThan":"lessThan",N=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()})));`,C=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,T=s?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${h[d-1]} < ${p[d-1]-1};
        bool hasNextRow = ${h[d-2]} < ${p[d-2]-1};
        ${i}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${N}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}}),o("601Ed",function(t,r){e(t.exports,"argMinConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("XQAV5"),l=s("9kr8m");let u={kernelName:a.ArgMin,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:u}=a,p=o.parseAxisParam(u,s.shape),d=n.getAxesPermutation(p,s.shape.length),c=s,h=[];null!=d&&(h.push(c=(0,l.transpose)({inputs:{x:s},backend:r,attrs:{perm:d}})),p=n.getInnerMostAxes(p.length,c.shape.length)),n.assertAxesAreInnerMostDims("argMin",[p[0]],c.shape.length);let f=(0,i.argMinMaxReduce)(r,c,p[0],"min");return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),f}}}),o("8QBir",function(t,r){e(t.exports,"asinConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Asin,backendName:"webgl",kernelFunc:i}}),o("5N1Nd",function(t,r){e(t.exports,"asinhConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+"return log(x + sqrt(x * x + 1.0));",i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Asinh,backendName:"webgl",kernelFunc:i}}),o("jpxbz",function(t,r){e(t.exports,"atanConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  return atan(x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Atan,backendName:"webgl",kernelFunc:i}}),o("5eHE0",function(t,r){e(t.exports,"atan2Config",()=>d),s("i64bB");var a=s("hl418"),n=s("e1oGB"),o=s("2jJh2"),i=s("3YXxe");let l=n.CHECK_NAN_SNIPPET+`
  return atan(a, b);
`,u=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+o.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,p=(0,i.binaryKernelFunc)({opSnippet:l,packedOpSnippet:u}),d={kernelName:a.Atan2,backendName:"webgl",kernelFunc:p}}),o("Gnq8j",function(t,r){e(t.exports,"atanhConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Atanh,backendName:"webgl",kernelFunc:i}}),o("bNvwQ",function(t,r){e(t.exports,"avgPoolConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("jjNRA"),i=s("8pBBE"),l=s("ldAxw"),u=s("3HiLX");let p={kernelName:a.AvgPool,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t;(0,l.assertNotComplex)(s,"avgPool");let{filterSize:p,strides:d,pad:c,dimRoundingMode:h}=a;o.assert(n.eitherStridesOrDilationsAreOne(d,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`);let f=n.computePool2DInfo(s.shape,p,d,1,c,h);if(1===f.filterWidth&&1===f.filterHeight&&o.arraysEqual(f.inShape,f.outShape))return(0,u.identity)({inputs:{x:s},backend:r});let m=new(0,i.Pool2DProgram)(f,"avg",!1);return r.runWebGLProgram(m,[s],"float32")}}}),o("8pBBE",function(t,r){e(t.exports,"Pool2DProgram",()=>a),e(t.exports,"Pool3DProgram",()=>n);class a{constructor(e,t,r,a=!1,n=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,x="0.0";if(f||(x="-1.0 / 1e-20"),r){this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${c}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?n?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");let b=4*Math.floor(s/4),v=s%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${c}, ${h});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${1===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${2===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${3===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${y});
      }
    `}}class n{constructor(e,t,r,a=!1,n=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,d=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;let y="avg"===t,b="0.0";if(y||(b="-1.0 / 1e-20"),r){this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${c};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?n?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let k=4*Math.floor(s/4),N=s%4,C=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${x});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${C}
            }

            int xC = xCCorner + ${k};
            if (${1===N}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${2===N}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${3===N}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${C}
            }
          }
        }
        setOutput(${v});
      }
    `}}}),o("5GRQv",function(t,r){e(t.exports,"avgPool3DConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("8pBBE");let i={kernelName:a.AvgPool3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:p,dataFormat:d}=a,c=n.computePool3DInfo(s.shape,i,l,[1,1,1],u,p,d),h=new(0,o.Pool3DProgram)(c,"avg",!1);return r.runWebGLProgram(h,[s],"float32")}}}),o("aLZLI",function(t,r){e(t.exports,"avgPool3DGradConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("5SsLq");let i={kernelName:a.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{dy:s,input:i}=t,{filterSize:l,strides:u,pad:p,dimRoundingMode:d}=a,c=n.computePool3DInfo(i.shape,l,u,[1,1,1],p,d),h=new(0,o.AvgPool3DBackpropProgram)(c);return r.runWebGLProgram(h,[s],i.dtype)}}}),o("5SsLq",function(t,r){e(t.exports,"AvgPool2DBackpropProgram",()=>a),e(t.exports,"AvgPool3DBackpropProgram",()=>n);class a{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,p=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${1/(t*r)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class n{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,a=e.filterWidth,n=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=p-1-e.padInfo.front,f=d-1-e.padInfo.top,m=c-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*r*a)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}}),o("486un",function(t,r){e(t.exports,"avgPoolGradConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("7MaPk"),o=s("5SsLq"),i=s("ldAxw");let l={kernelName:a.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{dy:s,input:l}=t;(0,i.assertNotComplex)([s,l],"avgPoolGrad");let{filterSize:u,strides:p,pad:d}=a,c=n.computePool2DInfo(l.shape,u,p,1,d),h=new(0,o.AvgPool2DBackpropProgram)(c);return r.runWebGLProgram(h,[s],l.dtype)}}}),o("19H3w",function(t,r){e(t.exports,"batchMatMulConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("5uMGV");let o={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{a:s,b:o}=t,{transposeA:i,transposeB:l}=a;return(0,n.batchMatMulImpl)({a:s,b:o,transposeA:i,transposeB:l,backend:r})}}}),o("FFQhb",function(t,r){e(t.exports,"batchNormConfig",()=>u),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("jjNRA"),i=s("1mdtV"),l=s("fRQei");let u={kernelName:n.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:s,variance:u,offset:p,scale:d}=e;o.assert(s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o.assert(null==p||s.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o.assert(null==d||s.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=r;null==c&&(c=.001);let h=[n,s,u],f=null;null!=p&&(f=p.shape,h.push(p));let m=null;null!=d&&(m=d.shape,h.push(d));let g=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new(0,l.BatchNormPackedProgram)(n.shape,s.shape,u.shape,f,m,c):new(0,i.BatchNormProgram)(n.shape,s.shape,u.shape,f,m,c);return t.runWebGLProgram(g,h,h[0].dtype)}}}),o("1mdtV",function(t,r){e(t.exports,"BatchNormProgram",()=>n),s("i64bB");var a=s("7MaPk");class n{constructor(e,t,r,n,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],a.assertAndGetBroadcastShape(e,t),a.assertAndGetBroadcastShape(e,r);let i="0.0";null!=n&&(a.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";null!=s&&(a.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}}),o("fRQei",function(t,r){e(t.exports,"BatchNormPackedProgram",()=>n),s("i64bB");var a=s("7MaPk");class n{constructor(e,t,r,n,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.assertAndGetBroadcastShape(e,t),a.assertAndGetBroadcastShape(e,r);let i="vec4(0.0)";null!=n&&(a.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=s&&(a.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}}),o("1f5Jt",function(t,r){e(t.exports,"batchToSpaceNDConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("9u3yv"),l=s("gT460"),u=s("9kr8m");let p={kernelName:n.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{blockShape:p,crops:d}=n;o.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let c=p.reduce((e,t)=>e*t),h=a.getReshaped(s.shape,p,c),f=a.getPermuted(h.length,p.length),m=a.getReshapedPermuted(s.shape,p,c),g=a.getSliceBeginCoords(d,p.length),x=a.getSliceSize(m,d,p.length),y=[],b=(0,i.reshape)({inputs:{x:s},backend:r,attrs:{shape:h}}),v=(0,u.transpose)({inputs:{x:b},backend:r,attrs:{perm:f}}),k=(0,i.reshape)({inputs:{x:v},backend:r,attrs:{shape:m}}),N=(0,l.slice)({inputs:{x:k},backend:r,attrs:{begin:g,size:x}});return y.push(b),y.push(v),y.push(k),y.forEach(e=>r.disposeIntermediateTensorInfo(e)),N}}}),o("gT460",function(t,r){e(t.exports,"slice",()=>d),e(t.exports,"sliceConfig",()=>c),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("bszZn"),i=s("jjNRA"),l=s("4Lbzm"),u=s("euT5S"),p=s("iCBkm");function d(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{begin:d,size:c}=n,[h,f]=o.parseSliceParams(s,d,c);if(o.assertParamsValid(s,h,f),0===i.sizeFromShape(f))return r.makeTensorInfo(f,s.dtype,[]);if(r.shouldExecuteOnCPU([s])||"string"===s.dtype){let e=r.texData.get(s.dataId),t=(0,l.sliceImplCPU)(e.values,h,f,s.shape,s.dtype);return r.makeTensorInfo(f,s.dtype,t)}let{isPacked:m}=r.texData.get(s.dataId),g=o.isSliceContinous(s.shape,h,f);if(m||!g){let e=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new(0,p.SlicePackedProgram)(f):new(0,u.SliceProgram)(f),t=[h];return r.runWebGLProgram(e,[s],s.dtype,t)}return r.uploadToGPU(s.dataId),function(e,t,r,a){let n=a.texData.get(e.dataId),s=a.makeTensorInfo(r,e.dtype),l=a.texData.get(s.dataId);Object.assign(l,n),l.refCount=1,l.shape=r,l.dtype=e.dtype;let u=o.computeFlatOffset(t,i.computeStrides(e.shape));n.slice&&(u+=n.slice.flatOffset),l.slice={flatOffset:u,origDataId:n.slice&&n.slice.origDataId||e.dataId};let p=a.dataRefCount.get(l.slice.origDataId)||1;return a.dataRefCount.set(l.slice.origDataId,p+1),s}(s,h,f,r)}let c={kernelName:n.Slice,backendName:"webgl",kernelFunc:d}}),o("euT5S",function(t,r){e(t.exports,"SliceProgram",()=>n);var a=s("fYZIp");class n{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let r=(0,a.getCoordsDataType)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return o.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),s=e.map((e,t)=>`sourceLoc.${o[t]} = start[${t}] + coords.${o[t]};`);t=`
        ${r} sourceLoc;
        ${r} coords = getOutputCoords();
        ${s.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${n}));
      }
    `}}let o=["x","y","z","w","u","v"]}),o("iCBkm",function(t,r){e(t.exports,"SlicePackedProgram",()=>o);var a=s("4awkX"),n=s("fYZIp");class o{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=(0,n.getCoordsDataType)(this.rank),r=(0,a.getChannels)("coords",this.rank),s=(0,a.getChannels)("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${o})`,l=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${i};
        --${s[this.rank-1]};
      }
    `,u=1===this.rank?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${i};
        }
      }
    `,p=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${s[t]} = ${r[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${p}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}}),o("5wxcO",function(t,r){e(t.exports,"bincountConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.Bincount,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,weights:o}=t,{size:i}=a,l=r.readSync(s.dataId),u=r.readSync(o.dataId),p=(0,n.bincountImplCPU)(l,u,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,p)}}}),o("gW4IT",function(t,r){e(t.exports,"bitwiseAndConfig",()=>d),s("i64bB");var a=s("hl418"),n=s("ibsdL"),o=s("e1oGB"),i=s("2jJh2"),l=s("4Lbzm");let u=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,p=`
  return float(int(a.r) & int(b.r));
`,d={kernelName:a.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:a}=e,{a:s,b:d}=r,c=(0,n.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),h=(0,n.env)().getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([s,d])||1===h){let e=a.texData.get(s.dataId).values,t=a.texData.get(d.dataId).values,[r,n]=(0,l.bitwiseAndImplCPU)(s.shape,d.shape,e,t,s.dtype),o=a.makeTensorInfo(n,s.dtype);return a.texData.get(o.dataId).values=r,o}return t=c?new(0,i.BinaryOpPackedProgram)(u,s.shape,d.shape,!1):new(0,o.BinaryOpProgram)(p,s.shape,d.shape),a.runWebGLProgram(t,[s,d],s.dtype)}}}),o("lVyeH",function(t,r){e(t.exports,"broadcastArgsConfig",()=>n),s("i64bB");var a=s("7MaPk");let n={kernelName:s("hl418").BroadcastArgs,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:s}=t,o=r.readSync(n.dataId),i=r.readSync(s.dataId),l=a.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return r.makeTensorInfo([l.length],"int32",Int32Array.from(l))}}}),o("jSnwT",function(t,r){e(t.exports,"castConfig",()=>h),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("hxi4c"),i=s("4Lbzm"),l=s("kNpt1"),u=s("3HiLX"),p=s("4itVN"),d=s("5eRqX"),c=s("fSN8S");let h={kernelName:a.Cast,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:a,attrs:s}=t,{x:h}=r,{dtype:f}=s;if("complex64"===f){if("complex64"===h.dtype)return(0,u.identity)({inputs:{x:h},backend:a});let t=o.zeros(h.shape),r=e({inputs:{x:h},backend:a,attrs:{dtype:"float32"}}),n=(0,l.complex)({inputs:{real:r,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(r),n}if("complex64"===h.dtype){let t=(0,d.real)({inputs:{input:h},backend:a}),r=e({inputs:{x:t},backend:a,attrs:{dtype:f}});return a.disposeIntermediateTensorInfo(t),r}if(!n.hasEncodingLoss(h.dtype,f)){let e=(0,u.identity)({inputs:{x:h},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:f}}if(a.shouldExecuteOnCPU([h])){let e=a.texData.get(h.dataId).values,[t,r,n]=(0,i.castImplCPU)(e,h.shape,h.dtype,f);return a.makeTensorInfo(t,r,n)}if("int32"===f)return(0,c.int)(h,a);if("bool"===f){let e=a.makeTensorInfo([],"bool",n.getTypedArrayFromDType("bool",1)),t=(0,p.notEqual)({inputs:{a:h,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${h.dtype} to ${f}`)}}}),o("4itVN",function(t,r){e(t.exports,"notEqual",()=>i),e(t.exports,"notEqualConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=(0,n.binaryKernelFunc)({opSnippet:"return float(a != b);",cpuKernelImpl:o.notEqualImplCPU,dtype:"bool"}),l={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:i}}),o("5eRqX",function(t,r){e(t.exports,"real",()=>o),e(t.exports,"realConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("3HiLX");function o(e){let{inputs:t,backend:r}=e,{input:a}=t,s=r.texData.get(a.dataId);return(0,n.identity)({inputs:{x:s.complexTensorInfos.real},backend:r})}let i={kernelName:a.Real,backendName:"webgl",kernelFunc:o}}),o("fSN8S",function(t,r){e(t.exports,"int",()=>n);var a=s("inhaz");function n(e,t){let r=new(0,a.UnaryOpProgram)(e.shape,"return float(int(x));"),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}}),o("ffj0Z",function(t,r){e(t.exports,"ceilConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return ceil(x);",l=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:i,cpuKernelImpl:o.ceilImplCPU}),u={kernelName:a.Ceil,backendName:"webgl",kernelFunc:l}}),o("2oePR",function(t,r){e(t.exports,"clipByValueConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("ibsdL"),o=s("gLqEx"),i=s("fdWlj");let l={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:a,attrs:s}=e,{x:l}=r,{clipValueMin:u,clipValueMax:p}=s;return t=(0,n.env)().getBool("WEBGL_PACK_CLIP")?new(0,i.ClipPackedProgram)(l.shape):new(0,o.ClipProgram)(l.shape),a.runWebGLProgram(t,[l],l.dtype,[[u],[p]])}}}),o("gLqEx",function(t,r){e(t.exports,"ClipProgram",()=>a);class a{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}}),o("fdWlj",function(t,r){e(t.exports,"ClipPackedProgram",()=>a);class a{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}}),o("7nPA2",function(t,r){e(t.exports,"complexAbsConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("5KGQX");function o(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}let i={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:a}=t,s=r.texData.get(a.dataId),i=new(0,n.ComplexAbsProgram)(a.shape),l=[o(a,s.complexTensorInfos.real),o(a,s.complexTensorInfos.imag)];return r.runWebGLProgram(i,l,l[0].dtype)}}}),o("5KGQX",function(t,r){e(t.exports,"ComplexAbsProgram",()=>a);class a{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}}),o("h7j1v",function(t,r){e(t.exports,"concat",()=>u),e(t.exports,"concatConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("dQTZP"),l=s("3HiLX");function u(e){let{inputs:t,backend:r,attrs:n}=e,{axis:s}=n,u=o.parseAxisParam(s,t[0].shape)[0],p=t.map(e=>e.shape);a.assertParamsConsistent(p,u);let d=a.computeOutShape(t.map(e=>e.shape),u);if(0===o.sizeFromShape(d))return r.makeTensorInfo(d,t[0].dtype,[]);let c=t.filter(e=>o.sizeFromShape(e.shape)>0);return 1===c.length?(0,l.identity)({inputs:{x:c[0]},backend:r}):(0,i.concatImpl)(c,u,r)}let p={kernelName:n.Concat,backendName:"webgl",kernelFunc:u}}),o("dQTZP",function(t,r){e(t.exports,"concatImpl",()=>function e(t,r,s){let g=t[0].dtype;if("complex64"===g){let a=t.map(e=>(0,f.real)({inputs:{input:e},backend:s})),n=t.map(e=>(0,h.imag)({inputs:{input:e},backend:s})),o=e(a,r,s),i=e(n,r,s),l=(0,c.complex)({inputs:{real:o,imag:i},backend:s});return a.forEach(e=>s.disposeIntermediateTensorInfo(e)),n.forEach(e=>s.disposeIntermediateTensorInfo(e)),s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(i),l}let x=s.shouldExecuteOnCPU(t);if("string"===g&&(x=!0),x){let e=t.map(e=>{let t=o.sizeFromShape(e.shape.slice(r));return(0,m.reshape)({inputs:{x:e},backend:s,attrs:{shape:[-1,t]}})}),n=e.map(e=>({vals:s.readSync(e.dataId),shape:e.shape})),i=a.computeOutShape(e.map(e=>e.shape),1),l=1===e[0].shape[0],p=(0,u.concatImplCPU)(n,i,g,l),d=a.computeOutShape(t.map(e=>e.shape),r),c=s.makeTensorInfo(d,g,p);return e.forEach(e=>s.disposeIntermediateTensorInfo(e)),c}let y=t.filter(e=>o.sizeFromShape(e.shape)>0),b=(0,n.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&y[0].shape.length>1;if(1===y.length){let e=b?new(0,p.UnaryOpProgram)(t[0].shape,p.CLONE):new(0,d.UnaryOpPackedProgram)(t[0].shape,p.CLONE);return s.runWebGLProgram(e,t,g)}let v=(0,n.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(y.length>v){let t=[];for(let a=0;a<y.length;a+=v){let n=y.slice(a,a+v);t.push(e(n,r,s))}let a=e(t,r,s);for(let e of t)s.disposeIntermediateTensorInfo(e);return a}if(b){let e=new(0,l.ConcatPackedProgram)(y.map(e=>e.shape),r);return s.runWebGLProgram(e,y,g)}let{tensors2D:k,outShape:N}=function(e,t,r){let n=a.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>(0,m.reshape)({inputs:{x:e},attrs:{shape:[-1,o.sizeFromShape(e.shape.slice(t))]},backend:r})),outShape:n}}(y,r,s),C=new(0,i.ConcatProgram)(k.map(e=>e.shape)),T=s.runWebGLProgram(C,k,g);k.forEach(e=>s.disposeIntermediateTensorInfo(e));let S=(0,m.reshape)({inputs:{x:T},attrs:{shape:N},backend:s});return s.disposeIntermediateTensorInfo(T),S}),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("jjNRA"),i=s("k9eJD"),l=s("7FyKS"),u=s("4Lbzm"),p=s("inhaz"),d=s("ioSMC"),c=s("kNpt1"),h=s("3lutj"),f=s("5eRqX"),m=s("9u3yv")}),o("k9eJD",function(t,r){e(t.exports,"ConcatProgram",()=>n),s("i64bB");var a=s("7MaPk");class n{constructor(e){this.outputShape=[],this.outputShape=a.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let a=t[e-1];r.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}let n=t.length,s=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join("\n        ")}
      }
    `}}}),o("7FyKS",function(t,r){e(t.exports,"ConcatPackedProgram",()=>i),s("i64bB");var a=s("7MaPk"),n=s("4awkX"),o=s("fYZIp");class i{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.computeOutShape(e,t);let r=this.outputShape,s=r.length,i=(0,o.getCoordsDataType)(s),u=(0,n.getChannels)("coords",s),p=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((e,t)=>`T${t}`);let d=Array(e.length-1);d[0]=e[0][t];for(let r=1;r<d.length;r++)d[r]=d[r-1]+e[r][t];let c=p[t],h=p.slice(-2),f=p.join(),m=`if (${c} < ${d[0]}) {
        return getChannel(
            getT0(${f}), vec2(${h.join()}));
        }`;for(let e=1;e<d.length;e++){let t=d[e-1];m+=`
        if (${c} < ${d[e]}  && ${c} >= ${d[e-1]}) {
          return getChannel(
            getT${e}(${l(p,c,t)}),
            vec2(${l(h,c,t)}));
        }`}let g=d.length,x=d[d.length-1];m+=`
        return getChannel(
          getT${g}(${l(p,c,x)}),
          vec2(${l(h,c,x)}));`,this.userCode=`
      float getValue(${p.map(e=>"int "+e)}) {
        ${m}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${u}), 0., 0., 0.);

        ${u[s-1]} = ${u[s-1]} + 1;
        if (${u[s-1]} < ${r[s-1]}) {
          result.g = getValue(${u});
        }

        ${u[s-2]} = ${u[s-2]} + 1;
        if (${u[s-2]} < ${r[s-2]}) {
          result.a = getValue(${u});
        }

        ${u[s-1]} = ${u[s-1]} - 1;
        if (${u[s-2]} < ${r[s-2]} &&
            ${u[s-1]} < ${r[s-1]}) {
          result.b = getValue(${u});
        }
        setOutput(result);
      }
    `}}function l(e,t,r){let a=e.indexOf(t);return e.map((e,t)=>t===a?`${e} - ${r}`:e).join()}}),o("3lutj",function(t,r){e(t.exports,"imag",()=>o),e(t.exports,"imagConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("3HiLX");function o(e){let{inputs:t,backend:r}=e,{input:a}=t,s=r.texData.get(a.dataId);return(0,n.identity)({inputs:{x:s.complexTensorInfos.imag},backend:r})}let i={kernelName:a.Imag,backendName:"webgl",kernelFunc:o}}),o("dcWsu",function(t,r){e(t.exports,"conv2DConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("ibsdL"),i=s("8FZSI"),l=s("hkLVs"),u=s("buxBx"),p=s("9u3yv");let d={kernelName:n.Conv2D,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:d,filter:c}=r,{strides:h,pad:f,dataFormat:m,dilations:g,dimRoundingMode:x}=s,y=a.convertConv2DDataFormat(m),b=a.computeConv2DInfo(d.shape,c.shape,h,g,f,x,!1,y);if(1===b.filterHeight&&1===b.filterWidth&&1===b.dilationHeight&&1===b.dilationWidth&&1===b.strideHeight&&1===b.strideWidth&&("SAME"===b.padInfo.type||"VALID"===b.padInfo.type))t=(0,u.conv2dByMatMul)({x:d,filter:c,convInfo:b,backend:n});else if(b.strideWidth<=2&&"channelsLast"===y&&(0,o.env)().getBool("WEBGL_EXP_CONV")){let e=new(0,l.Conv2DPackedProgram)(b),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]];t=n.runWebGLProgram(e,[d,c],"float32",r)}else if((0,o.env)().getBool("WEBGL_CONV_IM2COL"))t=(0,u.conv2dWithIm2Row)({x:d,filter:c,convInfo:b,backend:n});else{let e=new(0,i.Conv2DProgram)(b);t=n.runWebGLProgram(e,[d,c],"float32")}let v=(0,p.reshape)({inputs:{x:t},backend:n,attrs:{shape:b.outShape}});return n.disposeIntermediateTensorInfo(t),v}}}),o("8FZSI",function(t,r){e(t.exports,"Conv2DProgram",()=>a),e(t.exports,"Conv3DProgram",()=>n);class a{constructor(e,t=!1,r=null,a=!1,n=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",x="";r&&(g=a?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:n?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,x="result = activation(result);"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${c}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${x}
        setOutput(result);
      }
    `}}class n{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,a=e.padInfo.left,n=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,d=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${n}, ${s}, ${o});
      const ivec3 pads = ivec3(${t}, ${r}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}}),o("hkLVs",function(t,r){e(t.exports,"Conv2DPackedProgram",()=>o),s("i64bB");var a=s("jjNRA"),n=s("c4giy");class o{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);let i=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<d;e++)c+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;c+=`
     for (int r = 0; r < ${p}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<d;e++)c+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(d+1)/2;t++){let r=2*t;if(c+=`
           xC = xCCorner + ${r*u};
           `,1===l){if(r<d&&(i%2==1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }
               `,1===u&&r>0?c+=`
                 xC${r} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${r} = vec4(previous.zw, xTexelC${r}.xy);
                   } else {
                     xC${r} = vec4(0.0, 0.0, xTexelC${r}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xC${r} = xTexelC${r};
                 `,r+1<d)){let e=i%2==0?a.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                     xTexelC${r+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${r+1}.zw = vec2(0.0);
                     }
                     xTexelC${r+1}Ready = 1;
                   }
                   `,u>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${r+1} = vec4(previous.zw, xTexelC${r+1}.xy);
                     } else {
                      xC${r+1} = vec4(0.0, 0.0, xTexelC${r+1}.xy);
                     }
                     `:c+=`
                     xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.xy);
                     `):1===e?c+=`
                     xC${r+1} = xTexelC${r};
                     `:c+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                       xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${r+1}.zw = vec2(0.0);
                       }
                       xTexelC${r+1}Ready = 1;
                     }

                     xC${r+1} = xTexelC${r+1};
                     `}}else r<d&&(i%2==1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.0);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
               `,r+1<d&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${r+1} = vec4(xTexelC${r+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(
                   xTexelC${r}.xy, xTexelC${r+1}.xy);
               `,r+1<d&&(c+=`
                   xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
                 `)));r<d&&(c+=`
             wTexel = getW(r, ${r}, d1, d2);
             dotProd += xC${r}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${r}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,r+1<d&&(c+=`
               wTexel = getW(r, ${r+1}, d1, d2);
               dotProd += xC${r+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${r+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   
     }
   
     }
   `;let h="",f="";r&&(h=s?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${f}
         setOutput(result);
       }
     `}}}),o("buxBx",function(t,r){e(t.exports,"conv2dByMatMul",()=>h),e(t.exports,"conv2dWithIm2Row",()=>f),s("i64bB");var a=s("jjNRA"),n=s("lAKNj"),o=s("3YXxe"),i=s("iisXJ"),l=s("ldAxw"),u=s("5uMGV"),p=s("3HiLX"),d=s("9u3yv");function c(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&1===r&&e[0]>1?[e[0],1]:null}function h({x:e,filter:t,convInfo:r,backend:n,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:h=null}){let f,m=e.shape,g=n.texData.get(e.dataId),x=r.inChannels,y=m[0]*m[1]*m[2],b=r.outChannels,v="channelsLast"===r.dataFormat,k=[];if(null!=o){let e=c(o.shape,v);null!=e&&(o=(0,d.reshape)({inputs:{x:o},backend:n,attrs:{shape:e}}),k.push(o))}if(null!=s){let e=c(s.shape,v);null!=e&&(s=(0,d.reshape)({inputs:{x:s},backend:n,attrs:{shape:e}}),k.push(s))}if(!((1===y||1===b)&&x>u.MATMUL_SHARED_DIM_THRESHOLD)&&g.isPacked&&v&&null!=g.texture&&m[2]%2!=0&&a.arraysEqual(g.shape.slice(-3),m.slice(-3))){let c=m[0]*m[1]*(m[2]+1),x={dataId:e.dataId,shape:[1,c,r.inChannels],dtype:e.dtype},y=g.shape;g.shape=g.shape.slice(),g.shape[g.shape.length-2]++,a.assert(l.isReshapeFree(g.shape,x.shape),()=>`packed reshape ${g.shape} to ${x.shape} isn't free`);let b=(0,d.reshape)({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});k.push(b);let v=(0,u.batchMatMulImpl)({a:x,b:b,backend:n,transposeA:!1,transposeB:!1,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:i}),N=n.texData.get(v.dataId);a.assert(N.isPacked,()=>"batchMatMul result is expected to be packed"),g.shape=y,N.shape=r.outShape,(f=(0,p.identity)({inputs:{x:v},backend:n})).shape=r.outShape,k.push(v)}else{let a=r.outHeight*r.outWidth,l=(0,d.reshape)({inputs:{x:e},backend:n,attrs:{shape:v?[r.batchSize,a,r.inChannels]:[r.batchSize,r.inChannels,a]}}),p=(0,d.reshape)({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),c=(0,u.batchMatMulImpl)({a:v?l:p,b:v?p:l,transposeA:!v,transposeB:!1,backend:n,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:i});f=(0,d.reshape)({inputs:{x:c},backend:n,attrs:{shape:r.outShape}}),k.push(l),k.push(p),k.push(c)}for(let e of k)n.disposeIntermediateTensorInfo(e);return f}function f({x:e,filter:t,convInfo:r,backend:s,bias:l=null,preluActivationWeights:u=null,leakyreluAlpha:p=0,activation:h=null}){let{filterWidth:f,filterHeight:m,inChannels:g,outWidth:x,outHeight:y,dataFormat:b}=r,v="channelsLast"===b,k=f*m*g,N=y*x,C=[r.batchSize,k,N],T=[];if(null!=u){let e=c(u.shape,v);null!=e&&(u=(0,d.reshape)({inputs:{x:u},backend:s,attrs:{shape:e}}),T.push(u))}if(null!=l){let e=c(l.shape,v);null!=e&&(l=(0,d.reshape)({inputs:{x:l},backend:s,attrs:{shape:e}}),T.push(l))}let S=(0,d.reshape)({inputs:{x:t},backend:s,attrs:{shape:[1,k,a.sizeFromShape(t.shape)/k]}});T.push(S);let I=new(0,n.Im2ColPackedProgram)(C,r),w=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],E=s.runWebGLProgram(I,[e],"float32",w),A=(0,d.reshape)({inputs:{x:E},backend:s,attrs:{shape:C}});T.push(E),T.push(A);let R=null!=l,P=null!=u,$="leakyrelu"===h,F=h?(0,o.mapActivationToShaderProgram)(h,!0):null,B=new(0,i.MatMulPackedProgram)(v?A.shape:S.shape,v?S.shape:A.shape,v?[r.batchSize,N,r.outChannels]:[r.batchSize,r.outChannels,N],!0,!1,R,F,P,$),D=v?[A,S]:[S,A];if(l&&D.push(l),P&&D.push(u),$){let e=s.makeTensorInfo([],"float32",a.createScalarValue(p,"float32"));D.push(e),T.push(e)}let M=s.runWebGLProgram(B,D,"float32"),O=(0,d.reshape)({inputs:{x:M},backend:s,attrs:{shape:r.outShape}});for(let e of(T.push(M),T))s.disposeIntermediateTensorInfo(e);return O}}),o("lAKNj",function(t,r){e(t.exports,"Im2ColPackedProgram",()=>o);var a=s("3A9Dm"),n=s("c4giy");class o{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);let{dataFormat:r}=t,s=(0,a.getGlslDifferences)(),o="channelsLast"===r,i=o?1:2,l=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,p="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)p+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${p}

        ${s.output} = result;
      }
    `}}}),o("3kqa5",function(t,r){e(t.exports,"conv2DBackpropFilterConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("dkAuN");let i={kernelName:n.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:i}=t,{strides:l,pad:u,dataFormat:p,dimRoundingMode:d,filterShape:c}=n,h=a.convertConv2DDataFormat(p),f=a.computeConv2DInfo(s.shape,c,l,1,u,d,!1,h),m=new(0,o.Conv2DDerFilterProgram)(f);return r.runWebGLProgram(m,[s,i],"float32")}}}),o("dkAuN",function(t,r){e(t.exports,"Conv2DDerFilterProgram",()=>a),e(t.exports,"Conv2DDerInputProgram",()=>n),e(t.exports,"Conv3DDerFilterProgram",()=>s),e(t.exports,"Conv3DDerInputProgram",()=>o);class a{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,a=e.padInfo.top,n=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class n{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,n=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class s{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,a=e.strideWidth,n=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${n};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class o{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,a=e.filterWidth,n=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=r-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${n}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}}),o("5pwPT",function(t,r){e(t.exports,"conv2DBackpropInputConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("ibsdL"),i=s("dkAuN"),l=s("OPvYc");let u={kernelName:n.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:u}=t,{inputShape:p,strides:d,pad:c,dataFormat:h,dimRoundingMode:f}=n,m=a.convertConv2DDataFormat(h),g=a.computeConv2DInfo(p,u.shape,d,1,c,f,!1,m);if((0,o.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===m){let e=[[g.strideHeight,g.strideWidth]],t=new(0,l.Conv2DDerInputPackedProgram)(g);return r.runWebGLProgram(t,[s,u],"float32",e)}{let e=new(0,i.Conv2DDerInputProgram)(g);return r.runWebGLProgram(e,[s,u],"float32")}}}}),o("OPvYc",function(t,r){e(t.exports,"Conv2DDerInputPackedProgram",()=>n);var a=s("c4giy");class n{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length);let t=e.filterHeight,r=e.filterWidth,n=t-1-e.padInfo.top,s=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}}),o("dU9Wj",function(t,r){e(t.exports,"conv3DConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("8FZSI");let i={kernelName:n.Conv3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,filter:i}=t,{strides:l,pad:u,dilations:p}=n,d=a.computeConv3DInfo(s.shape,i.shape,l,p,u),c=new(0,o.Conv3DProgram)(d);return r.runWebGLProgram(c,[s,i],"float32")}}}),o("lNehB",function(t,r){e(t.exports,"conv3DBackpropFilterV2Config",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("dkAuN");let i={kernelName:n.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:i}=t,{strides:l,pad:u,filterShape:p}=n,d=a.computeConv3DInfo(s.shape,p,l,1,u),c=new(0,o.Conv3DDerFilterProgram)(d);return r.runWebGLProgram(c,[s,i],"float32")}}}),o("1mSbf",function(t,r){e(t.exports,"conv3DBackpropInputConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("dkAuN");let i={kernelName:n.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:i}=t,{pad:l,strides:u,inputShape:p}=n,d=a.computeConv3DInfo(p,i.shape,u,1,l),c=new(0,o.Conv3DDerInputProgram)(d);return r.runWebGLProgram(c,[s,i],"float32")}}}),o("802Oo",function(t,r){e(t.exports,"cosConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("2jJh2"),o=s("3YXxe");let i=o.CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,l=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${n.CHECK_NAN_SNIPPET_PACKED}
  return result;
`,u=(0,o.unaryKernelFunc)({opSnippet:i,packedOpSnippet:l}),p={kernelName:a.Cos,backendName:"webgl",kernelFunc:u}}),o("hdttz",function(t,r){e(t.exports,"coshConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Cosh,backendName:"webgl",kernelFunc:i}}),o("4kHQ9",function(t,r){e(t.exports,"cropAndResizeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("bkZb2");let o={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:p}=a,d=new(0,n.CropAndResizeProgram)(s.shape,o.shape,l,u,p);return r.runWebGLProgram(d,[s,o,i],"float32")}}}),o("bkZb2",function(t,r){e(t.exports,"CropAndResizeProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,o,i,l]=e,[u]=t,[p,d]=r;this.outputShape=[u,p,d,l];let[c,h]=[`${o-1}.0`,`${i-1}.0`],[f,m,g]=p>1?[`${(o-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[x,y,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${y};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${n}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${n}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${+("bilinear"===a)} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}}),o("cRnS1",function(t,r){e(t.exports,"cumprodConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("ro46r"),o=s("c0sd9");let i={kernelName:a.Cumprod,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:i,exclusive:l,reverse:u}=a;return(0,o.cumImpl)(n.CumOpType.Prod,s,r,i,l,u)}}}),o("ro46r",function(t,r){e(t.exports,"CumOpType",()=>n),e(t.exports,"CumProgram",()=>i);var a,n,o=s("fYZIp");(a=n||(n={})).Prod="*",a.Sum="+";class i{constructor(e,t,r,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===n.Prod?"1.0":"0.0",p=r?i:`getX(${l(s,"coords",this.op)})`,d=this.outputShape[this.outputShape.length-1],c="",h="";r?(c=a?`end != ${d-1}`:"end != 0",h=a?"end + 1":"end - 1"):(c=a?`end + pow2 < ${d}`:"end >= pow2",h=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${(0,o.getCoordsDataType)(s)} coords = getOutputCoords();
        int end = ${u(s,"coords",this.op)};
        float val = ${p};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${h};
          ${u(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${l(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function l(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function u(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}}),o("c0sd9",function(t,r){e(t.exports,"cumImpl",()=>l),s("i64bB");var a=s("7MaPk"),n=s("ro46r"),o=s("3HiLX"),i=s("9kr8m");function l(e,t,r,s,l,u){let p=t.shape.length,d=a.getAxesPermutation([s],p),c=t;null!=d&&(c=(0,i.transpose)({inputs:{x:t},backend:r,attrs:{perm:d}}));let h=a.getInnerMostAxes(1,p)[0];if(h!==p-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let f=c.shape[h],m=(0,o.identity)({inputs:{x:c},backend:r});for(let t=0;t<=Math.ceil(Math.log2(f))-1;t++){let a=new(0,n.CumProgram)(e,c.shape,!1,u),s=[[t]],o=m;m=r.runWebGLProgram(a,[m],m.dtype,s),r.disposeIntermediateTensorInfo(o)}if(l){let t=new(0,n.CumProgram)(e,c.shape,l,u),a=m;m=r.runWebGLProgram(t,[m],m.dtype),r.disposeIntermediateTensorInfo(a)}if(null!=d){let e=a.getUndoAxesPermutation(d),t=(0,i.transpose)({inputs:{x:m},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(c),t}return m}}),o("jL969",function(t,r){e(t.exports,"cumsumConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("ro46r"),o=s("c0sd9");let i={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{axis:i,exclusive:l,reverse:u}=a;return(0,o.cumImpl)(n.CumOpType.Sum,s,r,i,l,u)}}}),o("3kkKs",function(t,r){e(t.exports,"denseBincountConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s,weights:o}=t,{size:i,binaryOutput:l}=a;if(1===s.shape.length){let e=r.readSync(s.dataId),t=r.readSync(o.dataId),a=(0,n.bincountImplCPU)(e,t,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,a)}if(2===s.shape.length){let e=r.bufferSync(s),t=r.bufferSync(o),a=(0,n.bincountReduceImplCPU)(e,t,i,l);return r.makeTensorInfo(a.shape,o.dtype,a.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}}}),o("049ko",function(t,r){e(t.exports,"depthToSpaceConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("dJui1");let o={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a,l=s.shape[0],u="NHWC"===i?s.shape[1]:s.shape[2],p="NHWC"===i?s.shape[2]:s.shape[3],d="NHWC"===i?s.shape[3]:s.shape[1],c=u*o,h=p*o,f=d/(o*o),m=new(0,n.DepthToSpaceProgram)("NHWC"===i?[l,c,h,f]:[l,f,c,h],o,i);return r.runWebGLProgram(m,[s],s.dtype)}}}),o("dJui1",function(t,r){e(t.exports,"DepthToSpaceProgram",()=>a);class a{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}}),o("5iPW3",function(t,r){e(t.exports,"depthwiseConv2dNativeConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("ibsdL"),i=s("jjNRA"),l=s("8JXnH"),u=s("rZfAN");let p={kernelName:n.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:p,filter:d}=r,{strides:c,pad:h,dilations:f,dimRoundingMode:m}=s,g=f;null==g&&(g=[1,1]),i.assert(a.eitherStridesOrDilationsAreOne(c,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`);let x=a.computeConv2DInfo(p.shape,d.shape,c,g,h,m,!0);t=(0,o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels==1?new(0,u.DepthwiseConvPacked2DProgram)(x):new(0,l.DepthwiseConv2DProgram)(x);let y=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]];return n.runWebGLProgram(t,[p,d],"float32",y)}}}),o("8JXnH",function(t,r){e(t.exports,"DepthwiseConv2DProgram",()=>n);var a=s("c4giy");class n{constructor(e,t=!1,r=null,n=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,a.useShapeUniforms)(this.outputShape.length);let o=e.filterHeight,i=e.filterWidth,l=e.outChannels/e.inChannels,u="",p="";r&&(u=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:s?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,p="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${p}
        setOutput(result);
      }
    `}}}),o("rZfAN",function(t,r){e(t.exports,"DepthwiseConvPacked2DProgram",()=>o),s("i64bB");var a=s("jjNRA"),n=s("c4giy");class o{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);let i=e.outChannels/e.inChannels,l=e.padInfo.left,u=e.strideWidth,p=e.dilationWidth,d=e.filterHeight,c=e.filterWidth,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<c;e++)h+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;h+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let e=0;e<c;e++)h+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(c+1)/2;e++){let t=2*e;if(h+=`
          xC = xCCorner + ${t*p};
          `,1===u){if(t<c&&(l%2==1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===p&&t>0?h+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<c)){let e=l%2==0?a.nearestLargerEven(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,p>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:h+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?h+=`
                    xC${t+1} = xTexelC${t};
                    `:h+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<c&&(l%2==1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<c&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<c&&(h+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<c&&(h+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<c&&(h+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  
      }
    `;let f="",m="";r&&(f=s?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`vec4 activation(vec4 x) {
          ${r}
        }`,m="result = activation(result);"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${m}
        setOutput(result);
      }
    `}}}),o("3gaXp",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropFilterConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("1YPgo");let i={kernelName:n.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s,dy:i}=t,{strides:l,dilations:u,pad:p,dimRoundingMode:d,filterShape:c}=n,h=a.computeConv2DInfo(s.shape,c,l,u,p,d,!0),f=new(0,o.DepthwiseConv2DDerFilterProgram)(h);return r.runWebGLProgram(f,[s,i],"float32")}}}),o("1YPgo",function(t,r){e(t.exports,"DepthwiseConv2DDerFilterProgram",()=>a),e(t.exports,"DepthwiseConv2DDerInputProgram",()=>n);class a{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,a=e.padInfo.top,n=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class n{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,n=e.strideWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}}),o("5e6fM",function(t,r){e(t.exports,"depthwiseConv2dNativeBackpropInputConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("1YPgo");let i={kernelName:n.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,filter:i}=t,{strides:l,dilations:u,pad:p,dimRoundingMode:d,inputShape:c}=n,h=a.computeConv2DInfo(c,i.shape,l,u,p,d,!0),f=new(0,o.DepthwiseConv2DDerInputProgram)(h);return r.runWebGLProgram(f,[s,i],"float32")}}}),o("jdAZB",function(t,r){e(t.exports,"diagConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("e72SS"),i=s("9u3yv");let l={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:a}=t,s=[...a.shape,...a.shape],l=n.sizeFromShape(a.shape),u=(0,i.reshape)({inputs:{x:a},backend:r,attrs:{shape:[l]}}),p=new(0,o.DiagProgram)(l),d=r.runWebGLProgram(p,[u],u.dtype),c=(0,i.reshape)({inputs:{x:d},backend:r,attrs:{shape:s}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(d),c}}}),o("e72SS",function(t,r){e(t.exports,"DiagProgram",()=>a);class a{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}}),o("aX7l5",function(t,r){e(t.exports,"dilation2DConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("226rU"),i=s("9u3yv");let l={kernelName:n.Dilation2D,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:l,filter:u}=r,{strides:p,pad:d,dilations:c}=s,h=a.computeDilation2DInfo(l.shape,u.shape,p,d,"NHWC",c),f=new(0,o.Dilation2DProgram)(h);t=n.runWebGLProgram(f,[l,u],"float32");let m=(0,i.reshape)({inputs:{x:t},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(t),m}}}),o("226rU",function(t,r){e(t.exports,"Dilation2DProgram",()=>a);class a{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:a,strideHeight:n,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:p,left:d}=a;this.userCode=`
      const ivec2 strides = ivec2(${n}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}}),o("hYdU1",function(t,r){e(t.exports,"einsumConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("1NnK1"),l=s("9u3yv"),u=s("7wpuU"),p=s("9kr8m");let d={kernelName:n.Einsum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:s}=n,{allDims:d,summedDims:c,idDims:h}=a.decodeEinsumEquation(s,t.length);a.checkEinsumDimSizes(d.length,h,t);let{path:f,steps:m}=a.getEinsumComputePath(c,h),g=m.length,x=null,y=d.length,b=[];for(let e=0;e<g;++e){for(let n of m[e]){let e,{permutationIndices:s,expandDims:u}=a.getEinsumPermutation(y,h[n]);a.isIdentityPermutation(s)?e=t[n]:(e=(0,p.transpose)({inputs:{x:t[n]},backend:r,attrs:{perm:s}}),b.push(e));let d=e.shape.slice();for(let e=0;e<u.length;++e)d.splice(u[e],0,1);o.arraysEqual(e.shape,d)||(e=(0,l.reshape)({inputs:{x:e},backend:r,attrs:{shape:d}}),b.push(e)),null===x?x=e:(x=(0,i.multiply)({inputs:{a:e,b:x},backend:r}),b.push(x))}e<g-1&&(f[e]>=0&&(x=(0,u.sum)({inputs:{x:x},backend:r,attrs:{axis:f[e]-(d.length-y),keepDims:!1}}),b.push(x)),y--)}for(let e of b)e!==x&&r.disposeIntermediateTensorInfo(e);return x}}}),o("drdFG",function(t,r){e(t.exports,"eluConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,i=(0,n.unaryKernelFunc)({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:o}),l={kernelName:a.Elu,backendName:"webgl",kernelFunc:i}}),o("6AaGc",function(t,r){e(t.exports,"eluGradConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("ibsdL"),o=s("e1oGB"),i=s("2jJh2");let l=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,u={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r}=e,{dy:a,y:s}=t,u=(0,n.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new(0,i.BinaryOpPackedProgram)(l,a.shape,s.shape):new(0,o.BinaryOpProgram)("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,s.shape);return r.runWebGLProgram(u,[a,s],a.dtype)}}}),o("alIQ0",function(t,r){e(t.exports,"equalConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=`
  return vec4(equal(a, b));
`,l=(0,n.binaryKernelFunc)({opSnippet:"return float(a == b);",packedOpSnippet:i,dtype:"bool",cpuKernelImpl:o.equalImplCPU}),u={kernelName:a.Equal,backendName:"webgl",kernelFunc:l}}),o("gKp4C",function(t,r){e(t.exports,"erfConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("3YXxe");let i=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${a.ERF_P};
  float a1 = ${a.ERF_A1};
  float a2 = ${a.ERF_A2};
  float a3 = ${a.ERF_A3};
  float a4 = ${a.ERF_A4};
  float a5 = ${a.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,l=(0,o.unaryKernelFunc)({opSnippet:i}),u={kernelName:n.Erf,backendName:"webgl",kernelFunc:l}}),o("l4dMu",function(t,r){e(t.exports,"exp",()=>u),e(t.exports,"expConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=n.CHECK_NAN_SNIPPET_UNARY+`
  return exp(x);
`,l=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:l,cpuKernelImpl:o.expImplCPU,dtype:"float32"}),p={kernelName:a.Exp,backendName:"webgl",kernelFunc:u}}),o("18hUI",function(t,r){e(t.exports,"expandDims",()=>i),e(t.exports,"expandDimsConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("9u3yv");function i(e){let{inputs:t,attrs:r,backend:a}=e,{dim:s}=r,{input:i}=t,l=i.shape.length,u=i.shape.slice(),p=s;return s<0&&(n.assert(-(l+1)<=s,()=>`Axis must be in the interval [${-(l+1)}, ${l}]`),p=l+s+1),u.splice(p,0,1),(0,o.reshape)({inputs:{x:i},backend:a,attrs:{shape:u}})}let l={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:i}}),o("gNaVz",function(t,r){e(t.exports,"expm1Config",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return exp(x) - 1.0;",l=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:i,cpuKernelImpl:o.expm1ImplCPU}),u={kernelName:a.Expm1,backendName:"webgl",kernelFunc:l}}),o("5YqB7",function(t,r){e(t.exports,"fftConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jQpHE");let o={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:a}=t;return(0,n.fftImpl)(a,!1,r)}}}),o("jQpHE",function(t,r){e(t.exports,"fftImpl",()=>l),s("i64bB");var a=s("jjNRA"),n=s("evZoa"),o=s("kNpt1"),i=s("9u3yv");function l(e,t,r){let s=r.texData.get(e.dataId),l=a.sizeFromShape(e.shape),u=e.shape[e.shape.length-1],p=(0,i.reshape)({inputs:{x:e},backend:r,attrs:{shape:[l/u,u]}}),d=p.shape,c=new(0,n.FFTProgram)("real",d,t),h=new(0,n.FFTProgram)("imag",d,t),f=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:d},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:d}],m=r.runWebGLProgram(c,f,"float32"),g=r.runWebGLProgram(h,f,"float32"),x=(0,o.complex)({inputs:{real:m,imag:g},backend:r});r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g);let y=(0,i.reshape)({inputs:{x:x},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),y}}),o("evZoa",function(t,r){e(t.exports,"FFTProgram",()=>a);class a{constructor(e,t,r){let a;this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let s=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=r?`${n}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else if("imag"===e)a="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}}),o("38yGI",function(t,r){e(t.exports,"fill",()=>i),e(t.exports,"fillConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("fUTrA");function i(e){let{backend:t,attrs:r}=e,{shape:a,value:s}=r,{dtype:i}=r;if("string"===(i=i||n.inferDtype(s))){let e=n.getArrayFromDType(i,n.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{let e=new(0,o.FillProgram)(a,s),r=[[s]];return t.runWebGLProgram(e,[],i,r)}}let l={kernelName:a.Fill,backendName:"webgl",kernelFunc:i}}),o("fUTrA",function(t,r){e(t.exports,"FillProgram",()=>a);class a{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}}),o("k6SQX",function(t,r){e(t.exports,"flipLeftRightConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("3bRjX");let o={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,a=new(0,n.FlipLeftRightProgram)(r.shape);return t.runWebGLProgram(a,[r],r.dtype)}}}),o("3bRjX",function(t,r){e(t.exports,"FlipLeftRightProgram",()=>a);class a{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}}),o("39Amp",function(t,r){e(t.exports,"floorConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return floor(x);",l=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:i,cpuKernelImpl:o.floorImplCPU}),u={kernelName:a.Floor,backendName:"webgl",kernelFunc:l}}),o("dIP7j",function(t,r){e(t.exports,"floorDivConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,i=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,l=(0,n.binaryKernelFunc)({opSnippet:o,packedOpSnippet:i,dtype:"int32"}),u={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:l}}),o("7zSzo",function(t,r){let a;e(t.exports,"fromPixelsConfig",()=>p),s("i64bB");var n=s("ibsdL"),o=s("hl418"),i=s("h9ECX"),l=s("dZvxJ"),u=s("h97k1");let p={kernelName:o.FromPixels,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:s}=e,{pixels:o}=t,{numChannels:p}=s,c="undefined"!=typeof HTMLVideoElement&&o instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement,[f,m]=c?[o.videoWidth,o.videoHeight]:[o.width,o.height],g=[m,f],x=[m,f,p];if(h||c){let e=(0,n.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==a||e!==d)&&(d=e,a=document.createElement("canvas").getContext("2d",{willReadFrequently:d})),a.canvas.width=f,a.canvas.height=m,a.drawImage(o,0,0,f,m),o=a.canvas}let y=r.makeTensorInfo(g,"int32");r.texData.get(y.dataId).usage=i.TextureUsage.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(y.dataId),o);let b=(0,n.env)().getBool("WEBGL_PACK")?new(0,u.FromPixelsPackedProgram)(x):new(0,l.FromPixelsProgram)(x),v=r.runWebGLProgram(b,[y],"int32");return r.disposeData(y.dataId),v}},d=(0,n.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU")}),o("dZvxJ",function(t,r){e(t.exports,"FromPixelsProgram",()=>n);var a=s("3A9Dm");class n{constructor(e){this.variableNames=["A"];let t=(0,a.getGlslDifferences)(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}}),o("h97k1",function(t,r){e(t.exports,"FromPixelsPackedProgram",()=>n);var a=s("3A9Dm");class n{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=(0,a.getGlslDifferences)(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}}),o("h33Xf",function(t,r){e(t.exports,"fusedConv2DConfig",()=>h),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("hl418"),i=s("jjNRA"),l=s("8FZSI"),u=s("hkLVs"),p=s("3YXxe"),d=s("buxBx"),c=s("9u3yv");let h={kernelName:o.FusedConv2D,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:s,attrs:o}=e,{x:h,filter:f,bias:m,preluActivationWeights:g}=r,{strides:x,pad:y,dataFormat:b,dilations:v,dimRoundingMode:k,activation:N,leakyreluAlpha:C}=o,T=a.convertConv2DDataFormat(b),S=a.computeConv2DInfo(h.shape,f.shape,x,v,y,k,!1,T),I=[],w=null!=m,E=null!=g,A="leakyrelu"===N,R=()=>{let e=[h,f],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=(0,c.reshape)({inputs:{x:e},backend:s,attrs:{shape:[e.shape[0],1,1]}});return I.push(t),t}return e};if(w&&e.push(t(m,b)),E&&e.push(t(g,b)),A){let t=s.makeTensorInfo([],"float32",i.createScalarValue(C,"float32"));e.push(t),I.push(t)}return e};if(1===S.filterHeight&&1===S.filterWidth&&1===S.dilationHeight&&1===S.dilationWidth&&1===S.strideHeight&&1===S.strideWidth&&("SAME"===S.padInfo.type||"VALID"===S.padInfo.type))t=(0,d.conv2dByMatMul)({x:h,filter:f,convInfo:S,backend:s,bias:m,activation:N,preluActivationWeights:g,leakyreluAlpha:C});else if(S.strideWidth<=2&&"channelsLast"===T&&(0,n.env)().getBool("WEBGL_EXP_CONV")){let e=N?(0,p.mapActivationToShaderProgram)(N,!0):null,r=new(0,u.Conv2DPackedProgram)(S,w,e,E,A),a=[[S.padInfo.top,S.padInfo.left],[S.strideHeight,S.strideWidth],[S.dilationHeight,S.dilationWidth],[S.inHeight,S.inWidth]],n=R();t=s.runWebGLProgram(r,n,"float32",a)}else if((0,n.env)().getBool("WEBGL_CONV_IM2COL"))t=(0,d.conv2dWithIm2Row)({x:h,filter:f,convInfo:S,backend:s,bias:m,activation:N,preluActivationWeights:g,leakyreluAlpha:C});else{let e=N?(0,p.mapActivationToShaderProgram)(N,!1):null,r=new(0,l.Conv2DProgram)(S,w,e,E,A),a=R();t=s.runWebGLProgram(r,a,"float32")}let P=(0,c.reshape)({inputs:{x:t},backend:s,attrs:{shape:S.outShape}});return I.push(t),I.forEach(e=>s.disposeIntermediateTensorInfo(e)),P}}}),o("eDDAo",function(t,r){e(t.exports,"fusedDepthwiseConv2DConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("hl418"),i=s("jjNRA"),l=s("8JXnH"),u=s("rZfAN"),p=s("3YXxe");let d={kernelName:o.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:s,attrs:o}=e,{x:d,filter:c,bias:h,preluActivationWeights:f}=r,{strides:m,pad:g,dilations:x,dimRoundingMode:y,activation:b,leakyreluAlpha:v}=o,k=[],N=x;null==N&&(N=[1,1]),i.assert(a.eitherStridesOrDilationsAreOne(m,N),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${m} and dilations '${N}'`);let C=a.computeConv2DInfo(d.shape,c.shape,m,N,g,y,!0),T=(0,n.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&C.strideWidth<=2&&C.outChannels/C.inChannels==1,S=b?(0,p.mapActivationToShaderProgram)(b,T):null,I=[d,c],w=null!=h,E=null!=f,A="leakyrelu"===b;if(w&&I.push(h),E&&I.push(f),A){let e=s.makeTensorInfo([],"float32",i.createScalarValue(v,"float32"));I.push(e),k.push(e)}t=T?new(0,u.DepthwiseConvPacked2DProgram)(C,w,S,E,A):new(0,l.DepthwiseConv2DProgram)(C,w,S,E,A);let R=[[C.padInfo.top,C.padInfo.left],[C.strideHeight,C.strideWidth],[C.dilationHeight,C.dilationWidth],[C.inHeight,C.inWidth]],P=s.runWebGLProgram(t,I,"float32",R);return k.forEach(e=>s.disposeIntermediateTensorInfo(e)),P}}}),o("5Hs80",function(t,r){e(t.exports,"gatherNdConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("dK6kN"),l=s("4Lbzm"),u=s("9u3yv");let p={kernelName:n.GatherNd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:s}=t,p=s.shape,d=p[p.length-1],c=o.sizeFromShape(n.shape),[h,f,m,g]=a.prepareAndValidate(n,s),x=(0,u.reshape)({inputs:{x:s},backend:r,attrs:{shape:[f,d]}}),y=(0,u.reshape)({inputs:{x:n},backend:r,attrs:{shape:[o.sizeFromShape(n.shape)/m,m]}});if(r.shouldExecuteOnCPU([n,s])||"string"===n.dtype){let e=r.readSync(s.dataId),t=r.bufferSync(n),a=(0,l.gatherNdImplCPU)(e,t,n.dtype,f,d,m,g,n.shape,c);return r.makeTensorInfo(h,n.dtype,a.values)}let b=new(0,i.GatherNDProgram)(d,g,[f,m],n.shape),v=r.runWebGLProgram(b,[y,x],y.dtype),k=(0,u.reshape)({inputs:{x:v},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),k}}}),o("dK6kN",function(t,r){e(t.exports,"GatherNDProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let s=(0,a.getCoordsDataType)(r.length),o=`
    int index;`;for(let e=0;e<this.sliceDim;e++)o+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}}),o("cUTEq",function(t,r){e(t.exports,"gatherV2",()=>d),e(t.exports,"gatherV2Config",()=>c),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("hl418"),i=s("jjNRA"),l=s("2ZC8w"),u=s("4Lbzm"),p=s("9u3yv");function d(e){let{inputs:t,backend:r,attrs:s}=e,{x:o,indices:d}=t,{axis:c,batchDims:h}=s,f=i.parseAxisParam(c,o.shape)[0];if((0,n.env)().get("DEBUG")){let e=r.readSync(d.dataId),t=o.shape[f];for(let r=0;r<e.length;++r){let a=e[r];i.assert(a<=t-1&&a>=0,()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`)}}let m=a.segment_util.collectGatherOpShapeInfo(o,d,f,h),g=i.sizeFromShape(d.shape),x=[],y=(0,p.reshape)({inputs:{x:o},backend:r,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),b=(0,p.reshape)({inputs:{x:d},backend:r,attrs:{shape:[m.batchSize,g/m.batchSize]}});x.push(y),x.push(b);let v=[m.batchSize,m.outerSize,g/m.batchSize,m.sliceSize];if(r.shouldExecuteOnCPU([o,d])||"string"===o.dtype){let e=r.bufferSync(b),t=r.bufferSync(y),a=(0,u.gatherV2ImplCPU)(t,e,v);return x.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(m.outputShape,a.dtype,a.values)}let k=new(0,l.GatherProgram)(y.shape,v),N=r.runWebGLProgram(k,[y,b],y.dtype);x.push(N);let C=(0,p.reshape)({inputs:{x:N},backend:r,attrs:{shape:m.outputShape}});return x.forEach(e=>r.disposeIntermediateTensorInfo(e)),C}let c={kernelName:o.GatherV2,backendName:"webgl",kernelFunc:d}}),o("2ZC8w",function(t,r){e(t.exports,"GatherProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=(0,a.getCoordsDataType)(this.rank),n=function(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${r[t]}`);return a.join()}(e,0);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}}),o("iCKa4",function(t,r){e(t.exports,"greaterConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=`
  return vec4(greaterThan(a, b));
`,l=(0,n.binaryKernelFunc)({opSnippet:"return float(a > b);",packedOpSnippet:i,cpuKernelImpl:o.greaterImplCPU,dtype:"bool"}),u={kernelName:a.Greater,backendName:"webgl",kernelFunc:l}}),o("esRJa",function(t,r){e(t.exports,"greaterEqualConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=`
  return vec4(greaterThanEqual(a, b));
`,l=(0,n.binaryKernelFunc)({opSnippet:"return float(a >= b);",packedOpSnippet:i,dtype:"bool",cpuKernelImpl:o.greaterEqualImplCPU}),u={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:l}}),o("6Mq1u",function(t,r){e(t.exports,"ifftConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jQpHE");let o={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:a}=t;return(0,n.fftImpl)(a,!0,r)}}}),o("kosWd",function(t,r){e(t.exports,"isFiniteConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),o={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:n}}),o("fMC2x",function(t,r){e(t.exports,"isInfConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return float(isinf(x));",dtype:"bool"}),o={kernelName:a.IsInf,backendName:"webgl",kernelFunc:n}}),o("9JB55",function(t,r){e(t.exports,"isNaNConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return float(isnan(x));",dtype:"bool"}),o={kernelName:a.IsNan,backendName:"webgl",kernelFunc:n}}),o("eLJJ9",function(t,r){e(t.exports,"lessConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=`
  return vec4(lessThan(a, b));
`,l=(0,n.binaryKernelFunc)({opSnippet:"return float(a < b);",packedOpSnippet:i,cpuKernelImpl:o.lessImplCPU,dtype:"bool"}),u={kernelName:a.Less,backendName:"webgl",kernelFunc:l}}),o("9yCny",function(t,r){e(t.exports,"lessEqualConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=`
  return vec4(lessThanEqual(a, b));
`,l=(0,n.binaryKernelFunc)({opSnippet:"return float(a <= b);",packedOpSnippet:i,cpuKernelImpl:o.lessEqualImplCPU,dtype:"bool"}),u={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:l}}),o("1Vyz3",function(t,r){e(t.exports,"linSpaceConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:a,stop:s,num:o}=r,i=(0,n.linSpaceImplCPU)(a,s,o);return t.makeTensorInfo([i.length],"float32",i)}}}),o("7cERh",function(t,r){e(t.exports,"logConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=n.CHECK_NAN_SNIPPET_UNARY+`
  return x < 0.0 ? 0./0. : log(x);
`,l=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,u=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:l,cpuKernelImpl:o.logImplCPU}),p={kernelName:a.Log,backendName:"webgl",kernelFunc:u}}),o("dSzs9",function(t,r){e(t.exports,"log1pConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=n.CHECK_NAN_SNIPPET_UNARY+`
  return log(1.0 + x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Log1p,backendName:"webgl",kernelFunc:i}}),o("keCaY",function(t,r){e(t.exports,"logicalAndConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,i=(0,n.binaryKernelFunc)({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:o,dtype:"bool"}),l={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:i}}),o("kk836",function(t,r){e(t.exports,"logicalNotConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return float(!(x >= 1.0));"}),o={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:n}}),o("aFIg8",function(t,r){e(t.exports,"logicalOrConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,i=(0,n.binaryKernelFunc)({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:o,dtype:"bool"}),l={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:i}}),o("iTv3f",function(t,r){e(t.exports,"LRNConfig",()=>l),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("buTxk"),i=s("7np8x");let l={kernelName:n.LRN,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{depthRadius:l,bias:u,alpha:p,beta:d}=n,c=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new(0,i.LRNPackedProgram)(s.shape,l,u,p,d):new(0,o.LRNProgram)(s.shape,l,u,p,d);return r.runWebGLProgram(c,[s],s.dtype)}}}),o("buTxk",function(t,r){e(t.exports,"LRNProgram",()=>a);class a{constructor(e,t,r,a,n){let s;this.variableNames=["x"],this.outputShape=[];let o=e[3]-1;this.outputShape=e;let i=`float(${r}) + float(${a}) * sum`;s=.5===n?`inversesqrt(${i})`:1===n?`1.0/(${i})`:`exp(log(${i}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${s};
        setOutput(val);
      }
    `}}}),o("7np8x",function(t,r){e(t.exports,"LRNPackedProgram",()=>a);class a{constructor(e,t,r,a,n){let s;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let o=e[3]-1;this.outputShape=e;let i=`float(${r}) + float(${a}) * sum`;s=.5===n?`inversesqrt(${i})`:1===n?`1.0/(${i})`:`exp(log(${i}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${s};
        setOutput(result);
      }
    `}}}),o("fIFxS",function(t,r){e(t.exports,"LRNGradConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("G80rT");let o={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:a}=e,{x:s,y:o,dy:i}=t,{depthRadius:l,bias:u,alpha:p,beta:d}=a,c=new(0,n.LRNGradProgram)(s.shape,l,u,p,d);return r.runWebGLProgram(c,[s,o,i],s.dtype)}}}),o("G80rT",function(t,r){e(t.exports,"LRNGradProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=a,this.beta=n,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${n})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${n});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}}),o("9T87T",function(t,r){e(t.exports,"max",()=>p),e(t.exports,"maxConfig",()=>d),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("4Lbzm"),l=s("jql0F"),u=s("5tZ2c"),i=s("4Lbzm");function p(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:p}=r,{reductionIndices:d,keepDims:c}=s,h=p.shape.length,f=o.parseAxisParam(d,p.shape),m=f,g=a.getAxesPermutation(m,h),x=null!=g,y=n.shouldExecuteOnCPU([p]),b=p;if(x){if(y){let e=n.texData.get(b.dataId).values,t=Array(h);for(let e=0;e<t.length;e++)t[e]=p.shape[g[e]];let r=(0,i.transposeImplCPU)(e,p.shape,p.dtype,g,t);b=n.makeTensorInfo(t,p.dtype),n.texData.get(b.dataId).values=r}else b=(0,u.transposeImpl)(p,g,n);m=a.getInnerMostAxes(m.length,h)}a.assertAxesAreInnerMostDims("max",m,h);let[v,k]=a.computeOutAndReduceShapes(b.shape,m),N=v;if(c&&(N=a.expandShapeToKeepDim(v,f)),y){let e=n.texData.get(b.dataId).values,r=(0,i.maxImplCPU)(e,o.sizeFromShape(k),N,p.dtype);t=n.makeTensorInfo(N,p.dtype),n.texData.get(t.dataId).values=r}else t=(0,l.maxImpl)(b,k,N,n);return x&&n.disposeIntermediateTensorInfo(b),t}let d={kernelName:n.Max,backendName:"webgl",kernelFunc:p}}),o("jql0F",function(t,r){e(t.exports,"maxImpl",()=>i),s("i64bB");var a=s("jjNRA"),n=s("c1MNH"),o=s("9u3yv");function i(e,t,r,s){let i=a.sizeFromShape(t),l=a.sizeFromShape(e.shape),u=(0,o.reshape)({inputs:{x:e},attrs:{shape:[l/i,i]},backend:s}),p=(0,n.reduce)(u,e.dtype,"max",s),d=(0,o.reshape)({inputs:{x:p},attrs:{shape:r},backend:s});return s.disposeIntermediateTensorInfo(u),s.disposeIntermediateTensorInfo(p),d}}),o("cF6Xd",function(t,r){e(t.exports,"maximumConfig",()=>c),s("i64bB");var a=s("hl418"),n=s("e1oGB"),o=s("2jJh2"),i=s("3YXxe"),l=s("4Lbzm");let u=n.CHECK_NAN_SNIPPET+`
  return max(a, b);
`,p=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+o.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,d=(0,i.binaryKernelFunc)({opSnippet:u,packedOpSnippet:p,cpuKernelImpl:l.maximumImplCPU}),c={kernelName:a.Maximum,backendName:"webgl",kernelFunc:d}}),o("1LMNc",function(t,r){e(t.exports,"maxPoolConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("8pBBE"),l=s("ldAxw"),u=s("3HiLX");let p={kernelName:n.MaxPool,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t;(0,l.assertNotComplex)(s,"maxPool");let{filterSize:p,strides:d,pad:c,dimRoundingMode:h}=n;o.assert(a.eitherStridesOrDilationsAreOne(d,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`);let f=a.computePool2DInfo(s.shape,p,d,1,c,h);if(1===f.filterWidth&&1===f.filterHeight&&o.arraysEqual(f.inShape,f.outShape))return(0,u.identity)({inputs:{x:s},backend:r});let m=new(0,i.Pool2DProgram)(f,"max",!1);return r.runWebGLProgram(m,[s],s.dtype)}}}),o("4xX2M",function(t,r){e(t.exports,"maxPool3DConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("8pBBE");let i={kernelName:n.MaxPool3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{filterSize:i,strides:l,pad:u,dataFormat:p,dimRoundingMode:d}=n,c=a.computePool3DInfo(s.shape,i,l,[1,1,1],u,d,p),h=new(0,o.Pool3DProgram)(c,"max",!1);return r.runWebGLProgram(h,[s],s.dtype)}}}),o("8yoxY",function(t,r){e(t.exports,"maxPool3DGradConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("6I3c6"),i=s("8pBBE");let l={kernelName:n.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,input:l}=t,{filterSize:u,strides:p,pad:d,dimRoundingMode:c}=n,h=a.computePool3DInfo(l.shape,u,p,[1,1,1],d,c),f=new(0,i.Pool3DProgram)(h,"max",!0),m=r.runWebGLProgram(f,[l],l.dtype),g=new(0,o.MaxPool3DBackpropProgram)(h),x=r.runWebGLProgram(g,[s,m],l.dtype);return r.disposeIntermediateTensorInfo(m),x}}}),o("6I3c6",function(t,r){e(t.exports,"MaxPool2DBackpropProgram",()=>a),e(t.exports,"MaxPool3DBackpropProgram",()=>n);class a{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,n=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=n-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${n*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class n{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,a=e.strideWidth,n=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=i-1-e.padInfo.front,d=l-1-e.padInfo.top,c=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${n}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${i*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}}),o("3M2Mx",function(t,r){e(t.exports,"maxPoolGradConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("6I3c6"),i=s("8pBBE"),l=s("ldAxw");let u={kernelName:n.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:s,input:u,output:p}=t;(0,l.assertNotComplex)([u,p],"maxPoolGrad");let{filterSize:d,strides:c,pad:h,dimRoundingMode:f}=n,m=a.computePool2DInfo(u.shape,d,c,1,h,f),g=new(0,i.Pool2DProgram)(m,"max",!0),x=r.runWebGLProgram(g,[u],u.dtype),y=new(0,o.MaxPool2DBackpropProgram)(m),b=r.runWebGLProgram(y,[s,x],u.dtype);return r.disposeIntermediateTensorInfo(x),b}}}),o("eL0V3",function(t,r){e(t.exports,"maxPoolWithArgmaxConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("l6zSL");let l={kernelName:n.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:s,strides:l,pad:u,includeBatchInIndex:p}=t;o.assert(4===n.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let d=[1,1];o.assert(a.eitherStridesOrDilationsAreOne(l,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '${d}'`);let c=a.computePool2DInfo(n.shape,s,l,d,u),[h,f]=(0,i.maxPoolWithArgmaxImpl)(n,p,c,r);return[h,f]}}}),o("l6zSL",function(t,r){e(t.exports,"maxPoolWithArgmaxImpl",()=>n);var a=s("8pBBE");function n(e,t,r,n){let s=new(0,a.Pool2DProgram)(r,"max",!1),o=n.runWebGLProgram(s,[e],"float32");return s=new(0,a.Pool2DProgram)(r,"max",!0,!0,t),[o,n.runWebGLProgram(s,[e],"float32")]}}),o("6ozAk",function(t,r){e(t.exports,"meanConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("4hG1M"),l=s("5tZ2c"),u=s("4Lbzm");let p={kernelName:n.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:s,axis:p}=t,d=n.shape.length,c=o.parseAxisParam(p,n.shape),h=c,f=a.getAxesPermutation(h,d),m=null!=f,g=r.shouldExecuteOnCPU([n]),x=[],y=n;if(m){if(g){let e=r.texData.get(y.dataId).values,t=Array(d);for(let e=0;e<t.length;e++)t[e]=n.shape[f[e]];let a=(0,u.transposeImplCPU)(e,n.shape,n.dtype,f,t);y=r.makeTensorInfo(t,n.dtype),r.texData.get(y.dataId).values=a}else y=(0,l.transposeImpl)(n,f,r);x.push(y),h=a.getInnerMostAxes(h.length,d)}a.assertAxesAreInnerMostDims("sum",h,d);let[b,v]=a.computeOutAndReduceShapes(y.shape,h),k=b;s&&(k=a.expandShapeToKeepDim(b,c));let N=(0,i.meanImpl)(y,v,k,r);for(let e of x)r.disposeIntermediateTensorInfo(e);return N}}}),o("4hG1M",function(t,r){e(t.exports,"meanImpl",()=>i),s("i64bB");var a=s("jjNRA"),n=s("c1MNH"),o=s("9u3yv");function i(e,t,r,s){let i=a.sizeFromShape(t),l=a.sizeFromShape(e.shape),u=(0,o.reshape)({inputs:{x:e},attrs:{shape:[l/i,i]},backend:s}),p=(0,n.reduce)(u,"float32","mean",s),d=(0,o.reshape)({inputs:{x:p},attrs:{shape:r},backend:s});return s.disposeIntermediateTensorInfo(u),s.disposeIntermediateTensorInfo(p),d}}),o("4DZW6",function(t,r){e(t.exports,"minConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("c1MNH"),l=s("9u3yv"),u=s("9kr8m");let p={kernelName:n.Min,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:p}=r,{axis:d,keepDims:c}=s,h=p.shape.length,f=o.parseAxisParam(d,p.shape),m=f,g=a.getAxesPermutation(m,h),x=p;null!=g&&(x=(0,u.transpose)({inputs:{x:p},backend:n,attrs:{perm:g}}),m=a.getInnerMostAxes(m.length,p.shape.length)),a.assertAxesAreInnerMostDims("min",m,h);let[y,b]=a.computeOutAndReduceShapes(x.shape,m),v=o.sizeFromShape(b),k=(0,l.reshape)({inputs:{x:x},backend:n,attrs:{shape:[-1,v]}}),N=(0,i.reduce)(k,k.dtype,"min",n);if(c){let e=a.expandShapeToKeepDim(y,f);t=(0,l.reshape)({inputs:{x:N},backend:n,attrs:{shape:e}})}else t=(0,l.reshape)({inputs:{x:N},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(N),null!=g&&n.disposeIntermediateTensorInfo(x),t}}}),o("2k7nd",function(t,r){e(t.exports,"minimumConfig",()=>c),s("i64bB");var a=s("hl418"),n=s("e1oGB"),o=s("2jJh2"),i=s("3YXxe"),l=s("4Lbzm");let u=n.CHECK_NAN_SNIPPET+`
  return min(a, b);
`,p=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+o.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,d=(0,i.binaryKernelFunc)({opSnippet:u,packedOpSnippet:p,cpuKernelImpl:l.minimumImplCPU}),c={kernelName:a.Minimum,backendName:"webgl",kernelFunc:d}}),o("1BVgX",function(t,r){e(t.exports,"mirrorPadConfig",()=>l),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("gV7zM"),i=s("kC1KQ");let l={kernelName:n.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:s,mode:l}=r,u=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new(0,i.MirrorPadPackedProgram)(n.shape,s,l):new(0,o.MirrorPadProgram)(n.shape,s,l);return t.runWebGLProgram(u,[n],n.dtype)}}}),o("gV7zM",function(t,r){e(t.exports,"MirrorPadProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,s=(0,a.getCoordsDataType)(n),o=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=+("reflect"!==r);if(1===n){this.userCode=`
        int start = ${o};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${o});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}}),o("kC1KQ",function(t,r){e(t.exports,"MirrorPadPackedProgram",()=>o);var a=s("4awkX"),n=s("fYZIp");class o{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let s=e.length,o=(0,n.getCoordsDataType)(s),i=t.map(e=>e[0]).join(","),l=t.map((t,r)=>t[0]+e[r]).join(","),u=(0,a.getChannels)("rc",s),p=(0,a.getChannels)("source",s),d=`${u[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${p.slice(-2).join()})`,h=+("reflect"!==r),f="";if(1===s){let e=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${p.join()}), ${c});
        ${u[s-1]} += 1;
        if(${d}) {
          ${e}
          result[1] = getChannel(getX(${p.join()}), ${c});
        }
      `}else{let e=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${p.join()}), ${c});
        ${u[s-1]} += 1;
        if(${d}) {
          ${e}
          result[1] = getChannel(getX(${p.join()}), ${c});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${e}
          result[2] = getChannel(getX(${p.join()}), ${c});
          ${u[s-1]} += 1;
          if(${d}) {
            ${e}
            result[3] = getChannel(getX(${p.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}}),o("5BA7M",function(t,r){e(t.exports,"modConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("2jJh2"),o=s("3YXxe");let i=`if (b == 0.0) return NAN;
  return mod(a, b);`,l=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+n.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,u=(0,o.binaryKernelFunc)({opSnippet:i,packedOpSnippet:l}),p={kernelName:a.Mod,backendName:"webgl",kernelFunc:u}}),o("dmf4i",function(t,r){e(t.exports,"multinomialConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("4yUzw"),o=s("7wKlj");let i={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{logits:s}=t,{numSamples:i,seed:l,normalized:u}=a,p=u?s:(0,o.softmax)({inputs:{logits:s},backend:r,attrs:{dim:s.shape.length-1}}),d=p.shape[0],c=p.shape[1],h=new(0,n.MultinomialProgram)(d,c,i),f=r.runWebGLProgram(h,[p],"int32",[[l]]);return u||r.disposeIntermediateTensorInfo(p),f}}}),o("4yUzw",function(t,r){e(t.exports,"MultinomialProgram",()=>a);class a{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}}),o("7wKlj",function(t,r){e(t.exports,"softmax",()=>h),e(t.exports,"softmaxConfig",()=>f),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("l4dMu"),l=s("9T87T"),u=s("03geB"),p=s("9u3yv"),d=s("2lJzR"),c=s("7wpuU");function h(e){let{inputs:t,backend:r,attrs:n}=e,{logits:s}=t,{dim:h}=n,f=o.parseAxisParam([h],s.shape),m=(0,l.max)({inputs:{x:s},backend:r,attrs:{reductionIndices:f,keepDims:!1}}),g=a.expandShapeToKeepDim(m.shape,f),x=(0,p.reshape)({inputs:{x:m},backend:r,attrs:{shape:g}}),y=(0,d.sub)({inputs:{a:s,b:x},backend:r}),b=(0,i.exp)({inputs:{x:y},backend:r}),v=(0,c.sum)({inputs:{x:b},backend:r,attrs:{axis:f,keepDims:!1}}),k=(0,p.reshape)({inputs:{x:v},backend:r,attrs:{shape:g}}),N=(0,u.realDiv)({inputs:{a:b,b:k},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(k),N}let f={kernelName:n.Softmax,backendName:"webgl",kernelFunc:h}}),o("03geB",function(t,r){e(t.exports,"realDiv",()=>l),e(t.exports,"realDivConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
if (a == b) {
  return 1.0;
};
return a / b;`,i=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,l=(0,n.binaryKernelFunc)({opSnippet:o,packedOpSnippet:i,checkOutOfBounds:!0}),u={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:l}}),o("2lJzR",function(t,r){e(t.exports,"sub",()=>l),e(t.exports,"subConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return a - b;",l=(0,n.binaryKernelFunc)({opSnippet:i,packedOpSnippet:i,supportsComplex:!0,cpuKernelImpl:o.subImplCPU}),u={kernelName:a.Sub,backendName:"webgl",kernelFunc:l}}),o("gimoH",function(t,r){e(t.exports,"negConfig",()=>d),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("4Lbzm"),i=s("inhaz"),l=s("ioSMC");let u=i.CHECK_NAN_SNIPPET+`
  return -x;
`,p=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,d={kernelName:n.Neg,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n}=e,{x:s}=r;if(n.shouldExecuteOnCPU([s])){let e=n.texData.get(s.dataId),[t,r]=(0,o.negImplCPU)(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}return t=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new(0,l.UnaryOpPackedProgram)(s.shape,p):new(0,i.UnaryOpProgram)(s.shape,u),n.runWebGLProgram(t,[s],s.dtype)}}}),o("hfhh8",function(t,r){e(t.exports,"nonMaxSuppressionV3Config",()=>l),s("i64bB");var a=s("7MaPk"),n=s("lzjc8"),o=s("hl418");let i=n.nonMaxSuppressionV3Impl,l={kernelName:o.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){a.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:s,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p}=n,{selectedIndices:d}=i(r.readSync(s.dataId),r.readSync(o.dataId),l,u,p);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}}}),o("3fJiP",function(t,r){e(t.exports,"nonMaxSuppressionV4Config",()=>l),s("i64bB");var a=s("7MaPk"),n=s("lzjc8"),o=s("hl418");let i=n.nonMaxSuppressionV4Impl,l={kernelName:o.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){a.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:s,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:d}=n,{selectedIndices:c,validOutputs:h}=i(r.readSync(s.dataId),r.readSync(o.dataId),l,u,p,d);return[r.makeTensorInfo([c.length],"int32",new Int32Array(c)),r.makeTensorInfo([],"int32",new Int32Array([h]))]}}}),o("i4ZnD",function(t,r){e(t.exports,"nonMaxSuppressionV5Config",()=>l),s("i64bB");var a=s("7MaPk"),n=s("lzjc8"),o=s("hl418");let i=n.nonMaxSuppressionV5Impl,l={kernelName:o.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){a.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:s,scores:o}=t,{maxOutputSize:l,iouThreshold:u,scoreThreshold:p,softNmsSigma:d}=n,c=r.readSync(s.dataId),{selectedIndices:h,selectedScores:f}=i(c,r.readSync(o.dataId),l,u,p,d);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([f.length],"float32",new Float32Array(f))]}}}),o("bnObR",function(t,r){e(t.exports,"oneHotConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("1Mlkg"),i=s("9u3yv");let l={kernelName:a.OneHot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:a}=e,{indices:s}=t,{dtype:l,depth:u,onValue:p,offValue:d}=a,c=n.sizeFromShape(s.shape),h=new(0,o.OneHotProgram)(c,u,p,d),f=(0,i.reshape)({inputs:{x:s},backend:r,attrs:{shape:[c]}}),m=r.runWebGLProgram(h,[f],l);r.disposeIntermediateTensorInfo(f);let g=[...s.shape,u],x=(0,i.reshape)({inputs:{x:m},backend:r,attrs:{shape:g}});return r.disposeIntermediateTensorInfo(m),x}}}),o("1Mlkg",function(t,r){e(t.exports,"OneHotProgram",()=>a);class a{constructor(e,t,r,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${r}),
                      float(index == coords.y)));
      }
    `}}}),o("2vhs6",function(t,r){e(t.exports,"onesLikeConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("kNpt1"),o=s("38yGI"),i=s("3lutj"),l=s("5eRqX"),u=s("6FaXC");let p={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:a}=t,{x:s}=r;if("string"===s.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==s.dtype)return(0,o.fill)({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a});{let t=(0,l.real)({inputs:{input:s},backend:a}),r=e({inputs:{x:t},backend:a}),o=(0,i.imag)({inputs:{input:s},backend:a}),p=(0,u.zerosLike)({inputs:{x:o},backend:a}),d=(0,n.complex)({inputs:{real:r,imag:p},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(p),d}}}}),o("6FaXC",function(t,r){e(t.exports,"zerosLike",()=>u),e(t.exports,"zerosLikeConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("kNpt1"),o=s("38yGI"),i=s("3lutj"),l=s("5eRqX");function u(e){let{inputs:t,backend:r}=e,{x:a}=t;if("complex64"!==a.dtype)return(0,o.fill)({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:r});{let e=(0,l.real)({inputs:{input:a},backend:r}),t=u({inputs:{x:e},backend:r}),s=(0,i.imag)({inputs:{input:a},backend:r}),o=u({inputs:{x:s},backend:r}),p=(0,n.complex)({inputs:{real:t,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),p}}let p={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:u}}),o("5PvWR",function(t,r){e(t.exports,"packConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("jjNRA"),o=s("h7j1v"),i=s("18hUI");let l={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{axis:s}=a;if(1===t.length)return(0,i.expandDims)({inputs:{input:t[0]},backend:r,attrs:{dim:s}});let l=t[0].shape,u=t[0].dtype;t.forEach(e=>{n.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),n.assert(u===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let p=[],d=t.map(e=>{let t=(0,i.expandDims)({inputs:{input:e},backend:r,attrs:{dim:s}});return p.push(t),t}),c=(0,o.concat)({inputs:d,backend:r,attrs:{axis:s}});return p.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}}}),o("4M3Xo",function(t,r){e(t.exports,"padV2",()=>p),e(t.exports,"padV2Config",()=>d),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("jjNRA"),i=s("gEdv5"),l=s("jqJpF"),u=s("38yGI");let p=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{paddings:p,constantValue:d}=n;if(0===o.sizeFromShape(s.shape)){let e=p.map((e,t)=>e[0]+s.shape[t]+e[1]);return(0,u.fill)({backend:r,attrs:{shape:e,value:d,dtype:s.dtype}})}let c=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new(0,l.PadPackedProgram)(s.shape,p,d):new(0,i.PadProgram)(s.shape,p,d),h=[[d]];return r.runWebGLProgram(c,[s],s.dtype,h)},d={kernelName:n.PadV2,backendName:"webgl",kernelFunc:p}}),o("gEdv5",function(t,r){e(t.exports,"PadProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,s=(0,a.getCoordsDataType)(n),o=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(1===n){this.userCode=`
        int start = ${o};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${o});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}}),o("jqJpF",function(t,r){e(t.exports,"PadPackedProgram",()=>o);var a=s("4awkX"),n=s("fYZIp");class o{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let s=e.length,o=(0,n.getCoordsDataType)(s),i=t.map(e=>e[0]).join(","),l=t.map((t,r)=>t[0]+e[r]).join(","),u=(0,a.getChannels)("rc",s),p=(0,a.getChannels)("source",s),d=`${u[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${p.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${d}) {
      `,1===s?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${u[s-1]} += 1;
         if(${d}) {`],f=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",m="";for(let e=0,t=1===s?2:4;e<t;e++)m+=`
        ${h[e]}
        if (${f}) {
          result[${e}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${e}] = getChannel(getX(${p.join()}), ${c});
        }
      `;m+=1===s?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}}),o("cl36T",function(t,r){e(t.exports,"powConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("2jJh2"),o=s("3YXxe");let i=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,l=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+n.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,u=(0,o.binaryKernelFunc)({opSnippet:i,packedOpSnippet:l}),p={kernelName:a.Pow,backendName:"webgl",kernelFunc:u}}),o("jeitA",function(t,r){e(t.exports,"prodConfig",()=>c),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("2MDja"),i=s("jjNRA"),l=s("c1MNH"),u=s("4Lbzm"),p=s("9u3yv"),d=s("9kr8m");let c={kernelName:n.Prod,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:n,attrs:s}=e,{x:c}=r,{axis:h,keepDims:f}=s,m=c.shape.length,g=[],x=i.parseAxisParam(h,c.shape),y=x,b=a.getAxesPermutation(y,m),v=c;if(null!=b&&(v=(0,d.transpose)({inputs:{x:c},backend:n,attrs:{perm:b}}),y=a.getInnerMostAxes(y.length,m),g.push(v)),a.assertAxesAreInnerMostDims("prod",y,m),n.shouldExecuteOnCPU([v])){let e=n.texData.get(v.dataId).values,{outVals:r,outShape:a,outDtype:s}=(0,u.prodImplCPU)(v.shape,v.dtype,e,y);t=n.makeTensorInfo(a,s,r)}else{let[e,r]=a.computeOutAndReduceShapes(v.shape,y),s=i.sizeFromShape(r),u=(0,p.reshape)({inputs:{x:v},backend:n,attrs:{shape:[-1,s]}}),d=(0,o.sumOutType)(c.dtype),h=(0,l.reduce)(u,d,"prod",n);t=(0,p.reshape)({inputs:{x:h},backend:n,attrs:{shape:e}}),g.push(u),g.push(h)}if(f){g.push(t);let e=a.expandShapeToKeepDim(t.shape,x);t=(0,p.reshape)({inputs:{x:t},backend:n,attrs:{shape:e}})}return g.forEach(e=>n.disposeIntermediateTensorInfo(e)),t}}}),o("1PwbL",function(t,r){e(t.exports,"raggedGatherConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.RaggedGather,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:o,indices:i}=t,{outputRaggedRank:l}=a,u=s.map(e=>r.readSync(e.dataId)),p=s.map(e=>e.shape),d=r.readSync(o.dataId),c=r.readSync(i.dataId),[h,f,m]=(0,n.raggedGatherImplCPU)(u,p,d,o.shape,o.dtype,c,i.shape,l),g=h.map(e=>r.makeTensorInfo([e.length],"int32",e)),x=r.makeTensorInfo(m,o.dtype,f);return g.concat([x])}}}),o("1lbZ0",function(t,r){e(t.exports,"raggedRangeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.RaggedRange,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:a,limits:s,deltas:o}=t,i=r.readSync(a.dataId),l=r.readSync(s.dataId),u=r.readSync(o.dataId),[p,d]=(0,n.raggedRangeImplCPU)(i,a.shape,a.dtype,l,s.shape,u,o.shape);return[r.makeTensorInfo([p.length],"int32",p),r.makeTensorInfo([d.length],a.dtype,d)]}}}),o("g4GRp",function(t,r){e(t.exports,"raggedTensorToTensorConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{shape:s,values:o,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=a,p=r.readSync(s.dataId),d=r.readSync(o.dataId),c=r.readSync(i.dataId),h=l.map(e=>r.readSync(e.dataId)),f=l.map(e=>e.shape),[m,g]=(0,n.raggedTensorToTensorImplCPU)(p,s.shape,d,o.shape,o.dtype,c,i.shape,h,f,u);return r.makeTensorInfo(m,o.dtype,g)}}}),o("d162J",function(t,r){e(t.exports,"range",()=>o),e(t.exports,"rangeConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o=e=>{let{backend:t,attrs:r}=e,{start:a,stop:s,step:o,dtype:i}=r,l=(0,n.rangeImplCPU)(a,s,o,i);return t.makeTensorInfo([l.length],i,l)},i={kernelName:a.Range,backendName:"webgl",kernelFunc:o}}),o("6x9nd",function(t,r){e(t.exports,"reciprocalConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return 1.0 / x;"}),o={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:n}}),o("kRIzD",function(t,r){e(t.exports,"reluConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  return (x < 0.0) ? 0.0 : x;
`,i=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,l=(0,n.unaryKernelFunc)({opSnippet:o,packedOpSnippet:i}),u={kernelName:a.Relu,backendName:"webgl",kernelFunc:l}}),o("kqBCk",function(t,r){e(t.exports,"relu6Config",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=s("inhaz").CHECK_NAN_SNIPPET+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,i=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,l=(0,n.unaryKernelFunc)({opSnippet:o,packedOpSnippet:i}),u={kernelName:a.Relu6,backendName:"webgl",kernelFunc:l}}),o("iwOo8",function(t,r){e(t.exports,"resizeBilinearConfig",()=>l),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("kmSDG"),i=s("l3GbV");let l={kernelName:n.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:s}=t,{alignCorners:l,halfPixelCenters:u,size:p}=n,[d,c]=p,h=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new(0,i.ResizeBilinearPackedProgram)(s.shape,d,c,l,u):new(0,o.ResizeBilinearProgram)(s.shape,d,c,l,u);return r.runWebGLProgram(h,[s],"float32")}}}),o("kmSDG",function(t,r){e(t.exports,"ResizeBilinearProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["A"],this.outputShape=[];let[s,o,i,l]=e;this.outputShape=[s,t,r,l];let u=[a&&t>1?o-1:o,a&&r>1?i-1:i],p=[a&&t>1?t-1:t,a&&r>1?r-1:r];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${n?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}}),o("l3GbV",function(t,r){e(t.exports,"ResizeBilinearPackedProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,i,l]=e;this.outputShape=[s,t,r,l];let u=[a&&t>1?o-1:o,a&&r>1?i-1:i],p=[a&&t>1?t-1:t,a&&r>1?r-1:r];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${n?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}}),o("1vuRE",function(t,r){e(t.exports,"resizeBilinearGradConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("jprbI");let o={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s,dy:o}=t,{alignCorners:i}=a,l=new(0,n.ResizeBilinearBackpropProgram)(o.shape,s.shape,i);return r.runWebGLProgram(l,[o],o.dtype)}}}),o("jprbI",function(t,r){e(t.exports,"ResizeBilinearBackpropProgram",()=>a);class a{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,n]=t,[,s,o]=e,i=[r&&s>1?a-1:a,r&&o>1?n-1:n],l=[r&&s>1?s-1:s,r&&o>1?o-1:o],u=i[0]/l[0],p=i[1]/l[1],d=1/u,c=1/p,h=2*Math.ceil(d)+2,f=2*Math.ceil(c)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${c});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${n-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}}),o("8yD0x",function(t,r){e(t.exports,"resizeNearestNeighborConfig",()=>l),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("5c0JO"),i=s("9p4uo");let l={kernelName:n.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:s}=t,{alignCorners:l,halfPixelCenters:u,size:p}=n,[d,c]=p,h=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new(0,i.ResizeNearestNeighborPackedProgram)(s.shape,d,c,l,u):new(0,o.ResizeNearestNeighborProgram)(s.shape,d,c,l,u);return r.runWebGLProgram(h,[s],s.dtype)}}}),o("5c0JO",function(t,r){e(t.exports,"ResizeNearestNeighborProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["A"],this.outputShape=[];let[s,o,i,l]=e;this.outputShape=[s,t,r,l];let u=[a&&t>1?o-1:o,a&&r>1?i-1:i],p=[a&&t>1?t-1:t,a&&r>1?r-1:r];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${n?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${a?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}}),o("9p4uo",function(t,r){e(t.exports,"ResizeNearestNeighborPackedProgram",()=>a);class a{constructor(e,t,r,a,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,i,l]=e;this.outputShape=[s,t,r,l];let u=[a&&t>1?o-1:o,a&&r>1?i-1:i],p=[a&&t>1?t-1:t,a&&r>1?r-1:r];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${n?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${a?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}}),o("jZndi",function(t,r){e(t.exports,"resizeNearestNeighborGradConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("ivlM1");let o={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{images:s,dy:o}=t,{alignCorners:i}=a,l=new(0,n.ResizeNearestNeigborBackpropProgram)(o.shape,s.shape,i);return r.runWebGLProgram(l,[o],o.dtype)}}}),o("ivlM1",function(t,r){e(t.exports,"ResizeNearestNeigborBackpropProgram",()=>a);class a{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,n]=t,[,s,o]=e,i=[r&&s>1?a-1:a,r&&o>1?n-1:n],l=[r&&s>1?s-1:s,r&&o>1?o-1:o],u=i[0]/l[0],p=i[1]/l[1],d=1/u,c=1/p,h=2*Math.ceil(d)+2,f=2*Math.ceil(c)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${c});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}}),o("lz08S",function(t,r){e(t.exports,"reverseConfig",()=>p),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("jjNRA"),i=s("8UCg3"),l=s("5OJob"),u=s("3HiLX");let p={kernelName:n.Reverse,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{dims:p}=n,d=s.shape.length,c=o.parseAxisParam(p,s.shape);if(0===d)return(0,u.identity)({inputs:{x:s},backend:r});let h=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new(0,l.ReversePackedProgram)(s.shape,c):new(0,i.ReverseProgram)(s.shape,c);return r.runWebGLProgram(h,[s],s.dtype)}}}),o("8UCg3",function(t,r){e(t.exports,"ReverseProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,1===r){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=r=>-1!==t.indexOf(r)&&1!==e[r]?`${e[r]} - coords[${r}] - 1`:`coords[${r}]`,s=e.map((e,t)=>n(t)).join(","),o=(0,a.getCoordsDataType)(r);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}}),o("5OJob",function(t,r){e(t.exports,"ReversePackedProgram",()=>o);var a=s("4awkX"),n=s("fYZIp");class o{constructor(e,t){var r,s,o;this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let i=e.length;if(i>4)throw Error(`WebGL backend: Reverse of rank-${i} tensor is not yet supported`);this.outputShape=e;let l=(0,a.getChannels)("rc",i),u=`${l[i-1]} + 1 < ${this.outputShape[i-1]}`,p=`${l[i-2]} + 1 < ${this.outputShape[i-2]}`,d=(0,n.getCoordsDataType)(i);function c(r){let a=e.map((a,n)=>{var s,o;return s=n,o=r,-1!==t.indexOf(s)&&1!==e[s]?`${e[s]} - ${o[s]} - 1`:`${o[s]}`}),n=a.join(","),s=a.slice(-2).join(",");return`getChannel(getX(${n}), vec2(${s}))`}1===i?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${u}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${d} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(l.slice())};
          if(${u}){
            result.g = ${(r=l.slice())[i-1]="("+r[i-1]+" + 1)",c(r)};
          }
          if(${p}) {
            result.b = ${(s=l.slice())[i-2]="("+s[i-2]+" + 1)",c(s)};
            if(${u}) {
              result.a = ${(o=l.slice())[i-1]="("+o[i-1]+" + 1)",o[i-2]="("+o[i-2]+" + 1)",c(o)};
            }
          }
          setOutput(result);
        }
    `}}}),o("7zwsd",function(t,r){e(t.exports,"rotateWithOffsetConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("eG3Ig");let i={kernelName:n.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:s,fillValue:i,center:l}=t,u=new(0,o.RotateProgram)(n.shape,i),[p,d]=a.getImageCenter(l,n.shape[1],n.shape[2]),c=[[p,d,Math.sin(s),Math.cos(s)]];return r.runWebGLProgram(u,[n],n.dtype,c)}}}),o("eG3Ig",function(t,r){e(t.exports,"RotateProgram",()=>a);class a{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],a=e[2];this.outputShape=e;let n="";n="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${n}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}}),o("ef5R2",function(t,r){e(t.exports,"roundConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Round,backendName:"webgl",kernelFunc:i}}),o("cQhRJ",function(t,r){e(t.exports,"rsqrtConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=(0,n.unaryKernelFunc)({opSnippet:"return inversesqrt(x);",cpuKernelImpl:o.rsqrtImplCPU}),l={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:i}}),o("fAaSu",function(t,r){e(t.exports,"scatterNdConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("ibsdL"),o=s("hl418"),i=s("1yBUD"),l=s("loYt4"),u=s("9u3yv");let p={kernelName:o.ScatterNd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:s,attrs:o}=e,{indices:p,updates:d}=r,{shape:c}=o,{sliceRank:h,numUpdates:f,sliceSize:m,strides:g,outputSize:x}=a.calculateShapes(d,p,c),y=[x/m,m];if(0===x)return s.makeTensorInfo(c,p.dtype);let b=(0,u.reshape)({inputs:{x:p},backend:s,attrs:{shape:[f,h]}}),v=(0,u.reshape)({inputs:{x:d},backend:s,attrs:{shape:[f,m]}}),k=s.makeTensorInfo([],"float32",new Float32Array([0]));t=(0,n.env)().getBool("WEBGL_PACK")?new(0,l.ScatterPackedProgram)(f,h,b.shape.length,v.shape.length,g,y):new(0,i.ScatterProgram)(f,h,b.shape.length,v.shape.length,g,y);let N=s.runWebGLProgram(t,[v,b,k],v.dtype),C=(0,u.reshape)({inputs:{x:N},backend:s,attrs:{shape:c}});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(k),C}}}),o("1yBUD",function(t,r){e(t.exports,"ScatterProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r,n,s,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;let u=(0,a.getCoordsDataType)(s.length),p=(0,a.getCoordsDataType)(o.length),d="";1===r?d="i":2===r&&(d="i, j");let c=`getIndices(${d})`,h="";1===n?h="i":2===n&&(h="i, coords[1]");let f=`getUpdates(${h})`,m="";l&&(m="coords[0], coords[1]");let g=`getDefaultValue(${m})`;this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}}),o("loYt4",function(t,r){e(t.exports,"ScatterPackedProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r,n,s,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;let u=(0,a.getCoordsDataType)(s.length),p=(0,a.getCoordsDataType)(o.length),d="";1===r?d="i":2===r&&(d="i, j");let c=`getIndices(${d})`,h="";1===n?h="i":2===n&&(h="i, coords[1]");let f=`getUpdates(${h})`,m="";l&&(m="coords[0], coords[1]");let g=`getDefaultValue(${m})`;this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${c});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}}),o("jDmNL",function(t,r){e(t.exports,"searchSortedConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("aR2RL");let o={kernelName:a.SearchSorted,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{sortedSequence:s,values:o}=t,{side:i}=a,l=new(0,n.SearchSortedProgram)(s.shape[0],s.shape[1],o.shape[1],i),u=[[s.shape[1]]];return r.runWebGLProgram(l,[s,o],"int32",u)}}}),o("aR2RL",function(t,r){e(t.exports,"SearchSortedProgram",()=>n),s("i64bB");var a=s("ibsdL");class n{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];let s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=2===(0,a.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===n?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}}),o("f5s9w",function(t,r){e(t.exports,"selectConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("2MDja"),o=s("181oC");let i={kernelName:a.Select,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:a,t:s,e:i}=t,l=new(0,o.SelectProgram)(a.shape.length,s.shape,s.shape.length);return r.runWebGLProgram(l,[a,s,i],(0,n.upcastType)(s.dtype,i.dtype))}}}),o("181oC",function(t,r){e(t.exports,"SelectProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r){let n,s;if(this.variableNames=["c","a","b"],this.outputShape=t,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)s="resRC",n="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let n=0;n<t.length;n++)o.push(`${r[n]}`),n<e&&a.push(`${r[n]}`);n=a.join(),s=o.join()}let o=(0,a.getCoordsDataType)(r);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}}}),o("nNUZH",function(t,r){e(t.exports,"seluConfig",()=>u),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("3YXxe");let i=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${a.SELU_SCALEALPHA};
  float scale = ${a.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,l=(0,o.unaryKernelFunc)({opSnippet:i}),u={kernelName:n.Selu,backendName:"webgl",kernelFunc:l}}),o("CL0ac",function(t,r){e(t.exports,"sigmoidConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i=n.CHECK_NAN_SNIPPET_UNARY+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,l=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:l,cpuKernelImpl:o.sigmoidImplCPU}),p={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:u}}),o("cwXZ1",function(t,r){e(t.exports,"signConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Sign,backendName:"webgl",kernelFunc:i}}),o("5cDtb",function(t,r){e(t.exports,"sinConfig",()=>p),s("i64bB");var a=s("hl418"),n=s("2jJh2"),o=s("3YXxe");let i=o.CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,l=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${n.CHECK_NAN_SNIPPET_PACKED}
  return result;
`,u=(0,o.unaryKernelFunc)({opSnippet:i,packedOpSnippet:l}),p={kernelName:a.Sin,backendName:"webgl",kernelFunc:u}}),o("dcuct",function(t,r){e(t.exports,"sinhConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Sinh,backendName:"webgl",kernelFunc:i}}),o("2GpAV",function(t,r){e(t.exports,"softplusConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Softplus,backendName:"webgl",kernelFunc:i}}),o("7u84P",function(t,r){e(t.exports,"spaceToBatchNDConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("4M3Xo"),l=s("9u3yv"),u=s("9kr8m");let p={kernelName:n.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{blockShape:p,paddings:d}=n;o.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let c=p.reduce((e,t)=>e*t),h=[[0,0]];h.push(...d);for(let e=1+p.length;e<s.shape.length;++e)h.push([0,0]);let f=[],m=(0,i.padV2)({inputs:{x:s},backend:r,attrs:{paddings:h,constantValue:0}}),g=a.getReshaped(m.shape,p,c,!1),x=a.getPermuted(g.length,p.length,!1),y=a.getReshapedPermuted(m.shape,p,c,!1),b=(0,l.reshape)({inputs:{x:m},backend:r,attrs:{shape:g}}),v=(0,u.transpose)({inputs:{x:b},backend:r,attrs:{perm:x}}),k=(0,l.reshape)({inputs:{x:v},backend:r,attrs:{shape:y}});return f.push(m),f.push(b),f.push(v),f.forEach(e=>r.disposeIntermediateTensorInfo(e)),k}}}),o("eQUmc",function(t,r){e(t.exports,"sparseFillEmptyRowsConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:a,values:s,denseShape:o,defaultValue:i}=t;if(1!==o.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(2!==a.shape.length)throw Error(`Indices must be a matrix, saw:
         ${a.shape}`);if(1!==s.shape.length)throw Error(`Values must be a vector, saw:
         ${s.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let l=r.readSync(a.dataId),u=r.readSync(s.dataId),p=r.readSync(o.dataId),d=r.readSync(i.dataId)[0],[c,h,f,m,g]=(0,n.sparseFillEmptyRowsImplCPU)(l,a.shape,a.dtype,u,s.dtype,p,d);return[r.makeTensorInfo(h,a.dtype,c),r.makeTensorInfo([h[0]],s.dtype,f),r.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),r.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}}}),o("k2TSU",function(t,r){e(t.exports,"sparseReshapeConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.SparseReshape,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:a,inputShape:s,newShape:o}=t;if(2!==a.shape.length)throw Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==s.shape.length)throw Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==o.shape.length)throw Error(`Target shape should be a vector but received shape ${o.shape}`);let i=Array.from(r.readSync(s.dataId)),l=r.readSync(a.dataId),u=Array.from(r.readSync(o.dataId)),[p,d,c]=(0,n.sparseReshapeImplCPU)(l,a.shape,a.dtype,i,u);return[r.makeTensorInfo(d,a.dtype,p),r.makeTensorInfo([c.length],o.dtype,new Int32Array(c))]}}}),o("ltnQB",function(t,r){e(t.exports,"sparseSegmentMeanConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:a,indices:s,segmentIds:o}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw Error(`Indices should be a vector but received shape
              ${s.shape}`);if(1!==o.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${o.shape}`);let i=r.readSync(a.dataId),l=r.readSync(s.dataId),u=r.readSync(o.dataId),[p,d]=(0,n.sparseSegmentReductionImplCPU)(i,a.shape,a.dtype,l,u,!0);return r.makeTensorInfo(d,a.dtype,p)}}}),o("71RAl",function(t,r){e(t.exports,"sparseSegmentSumConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:a,indices:s,segmentIds:o}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw Error(`Indices should be a vector but received shape
             ${s.shape}`);if(1!==o.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${o.shape}`);let i=r.readSync(a.dataId),l=r.readSync(s.dataId),u=r.readSync(o.dataId),[p,d]=(0,n.sparseSegmentReductionImplCPU)(i,a.shape,a.dtype,l,u);return r.makeTensorInfo(d,a.dtype,p)}}}),o("3oUvt",function(t,r){e(t.exports,"sparseToDenseConfig",()=>p),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("4Lbzm"),l=s("1yBUD"),u=s("9u3yv");let p={kernelName:n.SparseToDense,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:s,sparseValues:p,defaultValue:d}=t,{outputShape:c}=n,{sliceRank:h,numUpdates:f,sliceSize:m,strides:g,outputSize:x}=a.calculateShapes(p,s,c);if("string"===p.dtype){let e=r.bufferSync(s),t=r.bufferSync(p),a=o.decodeString(r.readSync(d.dataId)[0]),n=(0,i.scatterImplCPU)(e,t,c,x,m,f,h,g,a,!1);return r.makeTensorInfo(c,n.dtype,n.values)}let y=new(0,l.ScatterProgram)(f,h,s.shape.length,p.shape.length,g,[x,1],!1),b=r.runWebGLProgram(y,[p,s,d],p.dtype),v=(0,u.reshape)({inputs:{x:b},backend:r,attrs:{shape:c}});return r.disposeIntermediateTensorInfo(b),v}}}),o("5eXiV",function(t,r){e(t.exports,"splitVConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("jjNRA"),i=s("gT460");let l={kernelName:n.SplitV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{numOrSizeSplits:l,axis:u}=n,p=o.parseAxisParam(u,s.shape)[0],d=a.prepareSplitSize(s,l,p),c=Array(s.shape.length).fill(0),h=s.shape.slice();return d.map(e=>{let t=[...h];t[p]=e;let a=(0,i.slice)({inputs:{x:s},backend:r,attrs:{begin:c,size:t}});return c[p]+=e,a})}}}),o("hFJpZ",function(t,r){e(t.exports,"sqrtConfig",()=>u),s("i64bB");var a=s("hl418"),n=s("3YXxe"),o=s("4Lbzm");let i="return sqrt(x);",l=(0,n.unaryKernelFunc)({opSnippet:i,packedOpSnippet:i,cpuKernelImpl:o.sqrtImplCPU}),u={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:l}}),o("dAe2m",function(t,r){e(t.exports,"squareConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return x * x;"}),o={kernelName:a.Square,backendName:"webgl",kernelFunc:n}}),o("lOQ0Z",function(t,r){e(t.exports,"squaredDifferenceConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o="return (a - b) * (a - b);",i=(0,n.binaryKernelFunc)({opSnippet:o,packedOpSnippet:o}),l={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:i}}),o("dnpTh",function(t,r){e(t.exports,"staticRegexReplaceConfig",()=>i),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("4Lbzm");let i={kernelName:n.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");let i=r.readSync(s.dataId),l=a.fromUint8ToStringArray(i),u=(0,o.staticRegexReplaceImplCPU)(l,"string",n);return r.makeTensorInfo(s.shape,"string",u)}}}),o("41g8D",function(t,r){e(t.exports,"stepConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("inhaz");let o={kernelName:a.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:r}){let{x:a}=e,s=n.CHECK_NAN_SNIPPET+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new(0,n.UnaryOpProgram)(a.shape,s);return r.runWebGLProgram(o,[a],a.dtype)}}}),o("fnlSb",function(t,r){e(t.exports,"stridedSliceConfig",()=>c),s("i64bB");var a=s("iG87S"),n=s("bszZn"),o=s("hl418"),i=s("jjNRA"),l=s("4Lbzm"),u=s("5WEC8"),p=s("9u3yv"),d=s("gT460");let c={kernelName:o.StridedSlice,backendName:"webgl",kernelFunc:function(e){let t,{inputs:r,backend:s,attrs:o}=e,{x:c}=r,{begin:h,end:f,strides:m,beginMask:g,endMask:x,ellipsisMask:y,newAxisMask:b,shrinkAxisMask:v}=o,{finalShapeSparse:k,finalShape:N,isIdentity:C,sliceDim0:T,isSimpleSlice:S,begin:I,end:w,strides:E}=n.sliceInfo(c.shape,h,f,m,g,x,y,b,v);if(C)t=(0,p.reshape)({inputs:{x:c},backend:s,attrs:{shape:N}});else if(T||S){i.assert(c.shape.length>=1,()=>`Input must have rank at least 1, got: ${c.shape.length}`);let e=n.computeOutShape(I,w,E),r=(0,d.slice)({inputs:{x:c},backend:s,attrs:{begin:I,size:e}});t=(0,p.reshape)({inputs:{x:r},backend:s,attrs:{shape:N}}),s.disposeIntermediateTensorInfo(r)}else if(s.shouldExecuteOnCPU([c])){let e=s.readSync(c.dataId),r=(0,a.buffer)(c.shape,c.dtype,e),n=(0,l.stridedSliceImplCPU)(k,r,E,I);t=s.makeTensorInfo(N,c.dtype,n.values)}else{let e=new(0,u.StridedSliceProgram)(I,E,k);t=s.runWebGLProgram(e,[c],c.dtype)}let A=(0,p.reshape)({inputs:{x:t},backend:s,attrs:{shape:N}});return s.disposeIntermediateTensorInfo(t),A}}}),o("5WEC8",function(t,r){e(t.exports,"StridedSliceProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,s=(0,a.getCoordsDataType)(r.length),o=(0,a.getCoordsDataType)(r.length),i="";if(1===n)i="coords * strides + begin";else{let e=0;i=r.map((t,a)=>(e++,1===r.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}}),o("6EcN9",function(t,r){e(t.exports,"stringNGramsConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.StringNGrams,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{separator:s,nGramWidths:o,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:p}=a,{data:d,dataSplits:c}=t,h=r.readSync(d.dataId),f=r.readSync(c.dataId),[m,g]=(0,n.stringNGramsImplCPU)(h,f,s,o,i,l,u,p);return[r.makeTensorInfo([m.length],"string",m),r.makeTensorInfo(c.shape,"int32",g)]}}}),o("fNAgd",function(t,r){e(t.exports,"stringSplitConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.StringSplit,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{skipEmpty:s}=a,{input:o,delimiter:i}=t;if("string"!==o.dtype)throw Error("Input must be of datatype string");if(1!==o.shape.length)throw Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let l=r.readSync(o.dataId),u=r.readSync(i.dataId)[0],[p,d,c]=(0,n.stringSplitImplCPU)(l,u,s),h=d.length;return[r.makeTensorInfo([h,2],"int32",p),r.makeTensorInfo([h],"string",d),r.makeTensorInfo([2],"int32",new Int32Array(c))]}}}),o("eJLAL",function(t,r){e(t.exports,"stringToHashBucketFastConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("4Lbzm");let o={kernelName:a.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{numBuckets:s}=a,{input:o}=t;if("string"!==o.dtype)throw Error("Input must be of datatype string");if(s<=0)throw Error("Number of buckets must be at least 1");let i=r.readSync(o.dataId),l=(0,n.stringToHashBucketFastImplCPU)(i,s);return r.makeTensorInfo(o.shape,"int32",l)}}}),o("dqY84",function(t,r){e(t.exports,"tanConfig",()=>o),s("i64bB");var a=s("hl418");let n=(0,s("3YXxe").unaryKernelFunc)({opSnippet:"return tan(x);"}),o={kernelName:a.Tan,backendName:"webgl",kernelFunc:n}}),o("6i4UP",function(t,r){e(t.exports,"tanhConfig",()=>l),s("i64bB");var a=s("hl418"),n=s("3YXxe");let o=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,i=(0,n.unaryKernelFunc)({opSnippet:o}),l={kernelName:a.Tanh,backendName:"webgl",kernelFunc:i}}),o("4UDlw",function(t,r){e(t.exports,"tensorScatterUpdateConfig",()=>l),s("i64bB");var a=s("7MaPk"),n=s("hl418"),o=s("1yBUD"),i=s("9u3yv");let l={kernelName:n.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:s,indices:l,updates:u}=t,{}=n,{sliceRank:p,numUpdates:d,sliceSize:c,strides:h,outputSize:f}=a.calculateShapes(u,l,s.shape),m=[f/c,c];if(0===f)return r.makeTensorInfo(s.shape,l.dtype);let g=(0,i.reshape)({inputs:{x:l},backend:r,attrs:{shape:[d,p]}}),x=(0,i.reshape)({inputs:{x:u},backend:r,attrs:{shape:[d,c]}}),y=(0,i.reshape)({inputs:{x:s},backend:r,attrs:{shape:m}}),b=new(0,o.ScatterProgram)(d,p,g.shape.length,x.shape.length,h,m,!1,!0),v=r.runWebGLProgram(b,[x,g,y],y.dtype),k=(0,i.reshape)({inputs:{x:v},backend:r,attrs:{shape:s.shape}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),k}}}),o("go2gh",function(t,r){e(t.exports,"tile",()=>u),e(t.exports,"tileConfig",()=>p),s("i64bB");var a=s("iG87S"),n=s("hl418"),o=s("jjNRA"),i=s("4Lbzm"),l=s("eAFdo");function u(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{reps:u}=n;if("string"===s.dtype||s.shape.length>5){let e=r.readSync(s.dataId),t="string"===s.dtype?e.map(e=>o.decodeString(e)):e,n=(0,a.buffer)(s.shape,s.dtype,t),l=(0,i.tileImplCPU)(n,u);return r.makeTensorInfo(l.shape,l.dtype,l.values)}let p=new(0,l.TileProgram)(s.shape,u);return r.runWebGLProgram(p,[s],s.dtype)}let p={kernelName:n.Tile,backendName:"webgl",kernelFunc:u}}),o("eAFdo",function(t,r){e(t.exports,"TileProgram",()=>n);var a=s("fYZIp");class n{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;let n=(0,a.getCoordsDataType)(this.rank),s=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${r[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}}}),o("9kiut",function(t,r){e(t.exports,"topKConfig",()=>m),s("i64bB");var a=s("ibsdL"),n=s("hl418"),o=s("jjNRA"),i=s("4Lbzm"),l=s("6lpVs"),u=s("38yGI"),p=s("cUTEq"),d=s("9u3yv"),c=s("gT460");function h(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function f(e){let t=1;for(;t<e;)t*=2;return t}let m={kernelName:n.TopK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:s}=t,{k:m,sorted:g}=n,x=(0,a.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),y=(0,a.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),b=s.shape,v=b[b.length-1];if(r.shouldExecuteOnCPU([s])||v<x||m>y){let e=r.readSync(s.dataId),[t,a]=(0,i.topKImplCPU)(e,b,s.dtype,m,g);return[r.makeTensorInfo(t.shape,t.dtype,t.values),r.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===m)return b[b.length-1]=0,[r.makeTensorInfo(b,s.dtype,[]),r.makeTensorInfo(b,"int32",[])];if(1===v)return[s,(0,u.fill)({attrs:{shape:b,dtype:"int32",value:0},backend:r})];let k=r.texData.get(s.dataId),N=null!==k&&k.isPacked,C=N?r.unpackTensor(s):s,T=o.sizeFromShape(b)/v,S=(0,d.reshape)({inputs:{x:C},attrs:{shape:[T,v]},backend:r});N&&h(r,C);let I=f(m),w=f(v),E=null,A=()=>null===E?[S,S]:[S,E],R=(e,t,a)=>{let n=A(),s=new(0,l.SwapProgram)(a),o=[[v],[+(null===E)],[Number.NEGATIVE_INFINITY],[e],[t]],i=E;E=r.runWebGLProgram(s,n,"int32",o),h(r,i)};for(let e=1;e<I;e*=2){let t=2*e;for(let r=e;r>=1;r/=2)R(t,r,[T,w])}for(let e=w;e>I;e/=2){let t=A(),a=new(0,l.MergeProgram)([T,e/2]),n=[[v],[+(null===E)],[I]],s=E;E=r.runWebGLProgram(a,t,"int32",n),h(r,s);let o=I/2,i=2*o;for(let e=o;e>=1;e/=2)R(i,e,E.shape)}let P=E;E=(0,c.slice)({inputs:{x:E},backend:r,attrs:{begin:0,size:[T,m]}}),h(r,P);let $=(0,p.gatherV2)({inputs:{x:S,indices:E},backend:r,attrs:{axis:1,batchDims:1}});h(r,S);let F=b.slice(0,-1);F.push(m),P=E,E=(0,d.reshape)({inputs:{x:E},attrs:{shape:F},backend:r}),h(r,P);let B=$;return $=(0,d.reshape)({inputs:{x:$},attrs:{shape:F},backend:r}),h(r,B),[$,E]}}}),o("6lpVs",function(t,r){e(t.exports,"SwapProgram",()=>a),e(t.exports,"MergeProgram",()=>n);class a{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class n{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}}),o("ioG0T",function(t,r){e(t.exports,"transformConfig",()=>o),s("i64bB");var a=s("hl418"),n=s("cc5Fu");let o={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:p}=a,[d,c,h,f]=s.shape,[m,g]=null!=p?p:[c,h],x=new(0,n.TransformProgram)(c,h,i,l,u,[d,m,g,f]);return r.runWebGLProgram(x,[s,o],"float32")}}}),o("cc5Fu",function(t,r){e(t.exports,"TransformProgram",()=>a);class a{constructor(e,t,r,a,n,s){let o;switch(this.variableNames=["Image","Transforms"],this.outputShape=s,a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${n});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${n});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===r?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}}),o("kupuZ",function(t,r){e(t.exports,"uniqueConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("4Lbzm"),o=s("ldAxw");let i={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:r,backend:a}=e,{axis:s}=r,{x:i}=t;(0,o.assertNotComplex)(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let l=a.readSync(i.dataId),{outputValues:u,outputShape:p,indices:d}=(0,n.uniqueImplCPU)(l,s,i.shape,i.dtype);return[a.makeTensorInfo(p,i.dtype,u),a.makeTensorInfo([d.length],"int32",d)]}}}),o("aih4s",function(t,r){e(t.exports,"unpackConfig",()=>i),s("i64bB");var a=s("hl418"),n=s("9u3yv"),o=s("gT460");let i={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:a}=e,{value:s}=t,{axis:i}=a;i<0&&(i+=s.shape.length);let l=s.shape.length,u=s.shape[i],p=Array(l-1),d=0;for(let e=0;e<l;e++)e!==i&&(p[d++]=s.shape[e]);let c=[],h=Array(l).fill(0),f=s.shape.slice();f[i]=1;let m=Array(u);for(let e=0;e<m.length;e++){h[i]=e;let t=(0,o.slice)({inputs:{x:s},backend:r,attrs:{begin:h,size:f}}),a=(0,n.reshape)({inputs:{x:t},backend:r,attrs:{shape:p}});m[e]=a,c.push(t)}return c.forEach(e=>r.disposeIntermediateTensorInfo(e)),m}}}),o("9f0kI",function(t,r){e(t.exports,"unsortedSegmentSumConfig",()=>h),s("i64bB");var a=s("7MaPk"),n=s("2MDja"),o=s("hl418"),i=s("jjNRA"),l=s("3oyuI"),u=s("d162J"),p=s("9u3yv"),d=s("go2gh"),c=s("9kr8m");let h={kernelName:o.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:s}=e,{x:o,segmentIds:h}=t,{numSegments:f}=s,m=o.shape.length,g=[],x=0,y=a.getAxesPermutation([x],m),b=o;null!=y&&(b=(0,c.transpose)({inputs:{x:o},backend:r,attrs:{perm:y}}),g.push(b),x=a.getInnerMostAxes(1,m)[0]);let v=a.segment_util.computeOutShape(b.shape,x,f),k=i.sizeFromShape([b.shape[x]]),N=(0,p.reshape)({inputs:{x:b},backend:r,attrs:{shape:[-1,k]}});g.push(N);let C=(0,n.sumOutType)(o.dtype),T=(e,t,n,s,o)=>{let i=e.shape[0],p=e.shape[1],c=a.segment_util.segOpComputeOptimalWindowSize(p,o),h=new(0,l.SegmentOpProgram)({windowSize:c,inSize:p,batchSize:i,numSegments:o},t),f=r.compileAndRun(h,[e,n],s);if(g.push(f),f.shape[1]===o)return f;let m=(0,u.range)({backend:r,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),x=(0,d.tile)({inputs:{x:m},backend:r,attrs:{reps:[p/c]}});return g.push(m),g.push(x),T(f,t,x,s,o)},S=T(N,"unsortedSegmentSum",h,C,f),I=(0,p.reshape)({inputs:{x:S},backend:r,attrs:{shape:v}}),w=I;if(null!=y){g.push(I);let e=a.getUndoAxesPermutation(y);w=(0,c.transpose)({inputs:{x:w},backend:r,attrs:{perm:e}})}return g.forEach(e=>r.disposeIntermediateTensorInfo(e)),w}}}),o("3oyuI",function(t,r){e(t.exports,"SegmentOpProgram",()=>a);class a{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,a=e.batchSize,n=e.inSize,s=e.numSegments,o=s*Math.ceil(n/r);this.outputShape=[a,o];let i=4*Math.floor(r/4),l=r%4,u=`
        sumValue += dot(values, segFilter);
    `,p="";n%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `);let d="";n%r>0&&(d=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}});
//# sourceMappingURL=camera-identify-p5.46bb039f.js.map
